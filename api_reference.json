{
  "openapi": "3.0.1",
  "info": {
    "title": "Visa Direct request to pay",
    "description": "",
    "version": "1"
  },
  "servers": [
    {
      "url": "https://sandbox.api.visa.com",
      "description": "Sandbox server"
    }
  ],
  "security": [],
  "tags": [
    {
      "name": "Request Control ",
      "description": "Request Control (Request to Pay)"
    },
    {
      "name": "Request to Pay",
      "description": "Request to Pay"
    },
    {
      "name": "Request to Pay Outbound",
      "description": "Request to Pay Outbound"
    }
  ],
  "paths": {
    "/rtx/api/outbound/v1/requestToPay/{paymentRequestId}/confirm": {
      "patch": {
        "tags": [
          "Request to Pay Outbound"
        ],
        "summary": "Confirm R2P",
        "description": "Confirm Request to Pay is used by payer service providers to provide an initial update to Visa on the status of the Request to Pay based on their initial processing and/or interaction with the end user. It is also used by payee service providers to be notified by Visa of these updates.",
        "operationId": "ConfirmR2P",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_vdp_contentType"
            }
          },
          {
            "name": "keyID",
            "in": "header",
            "description": "VDP project key ID used to identify associated encryption keys.",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_vdp_keyId"
            }
          },
          {
            "name": "x-request-affinity",
            "in": "header",
            "description": "Visa provided value for transaction affinity handling. This value is provided during the Initiate Request to Pay API flow.",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_request_affinity"
            }
          },
          {
            "name": "paymentRequestId",
            "in": "path",
            "description": "Request to Pay transaction ID previously provided by Visa.",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/r2p_paymentRequestId"
            }
          }
        ],
        "requestBody": {
          "description": "*Confirm Request to Pay* is used by payer service providers to provide an initial update to Visa on the status of the R2P based on their initial processing and/or interaction with the end user.\n\nIt is also used by payee service providers to be notified by Visa of these updates.\n\n---\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/confirmR2pRequest"
              },
              "examples": {
                "Request to Pay declined": {
                  "summary": "Request to Pay declined",
                  "value": {
                    "statusReason": "RJ02",
                    "transactionStatus": "RJCT",
                    "paymentRequestId": "RFP01314",
                    "requestMessageId": "GG9983636387737JH",
                    "message": "Rejected by Payer",
                    "endToEndId": "RFPid0001",
                    "creationDateTime": "2020-12-17T09:30:47Z"
                  }
                },
                "Request to pay partially settled": {
                  "summary": "Request to pay partially settled",
                  "value": {
                    "acceptedAmount": 100,
                    "transactionStatus": "ACCP",
                    "settlementDetails": {
                      "creditorAccountDetail": {
                        "primaryAccountNumber": "4145124125553222"
                      },
                      "settlementSystem": "VISA_DIRECT",
                      "debtorAccountDetail": {
                        "debtorTaxId": "ABCDE1234567890",
                        "primaryAccountNumber": "4145124125553555"
                      },
                      "settledAmountCurrency": "UAH",
                      "settlementSystemReferenceId": "VIP1111155555",
                      "settledAmount": 10,
                      "settlementSystemReferenceType": "RRN"
                    },
                    "paymentRequestId": "RFP01314",
                    "requestMessageId": "GG9983636387737JH",
                    "endToEndId": "RFPid0001",
                    "acceptedAmountCurrency": "UAH",
                    "creationDateTime": "2020-12-17T09:30:47Z"
                  }
                },
                "Request to Pay accepted": {
                  "summary": "Request to Pay accepted",
                  "value": {
                    "acceptedAmount": 100,
                    "transactionStatus": "ACSC",
                    "settlementDetails": {
                      "creditorAccountDetail": {
                        "primaryAccountNumber": "4145124125553222"
                      },
                      "settlementSystem": "VISA_DIRECT",
                      "debtorAccountDetail": {
                        "debtorTaxId": "ABCDE1234567890",
                        "primaryAccountNumber": "4145124125553555"
                      },
                      "settledAmountCurrency": "UAH",
                      "settlementSystemReferenceId": "VIP1234567890",
                      "settledAmount": 100,
                      "settlementSystemReferenceType": "RRN"
                    },
                    "paymentRequestId": "RFP01314",
                    "requestMessageId": "GG9983636387737JH",
                    "endToEndId": "RFPid0001",
                    "acceptedAmountCurrency": "UAH",
                    "creationDateTime": "2020-12-17T09:30:47Z"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Response Payload from the Payee service provider to Visa.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/confirmR2pResponse"
                },
                "examples": {
                  "Request to Pay declined": {
                    "summary": "Request to Pay declined",
                    "value": {
                      "responseMessageId": "DF3287943984732SH",
                      "transactionStatus": "RJCT",
                      "paymentRequestId": "RFP01314",
                      "requestMessageId": "GG9983636387737JH",
                      "endToEndId": "RFPid0001",
                      "creationDateTime": "2020-12-17T09:30:48Z"
                    }
                  },
                  "Request to pay partially settled": {
                    "summary": "Request to pay partially settled",
                    "value": {
                      "responseMessageId": "DF3287943984732SH",
                      "transactionStatus": "ACCP",
                      "paymentRequestId": "RFP01314",
                      "requestMessageId": "GG9983636387737JH",
                      "endToEndId": "RFPid0001",
                      "creationDateTime": "2020-12-17T09:30:48Z"
                    }
                  },
                  "Request to Pay accepted": {
                    "summary": "Request to Pay accepted",
                    "value": {
                      "responseMessageId": "DF3287943984732SH",
                      "transactionStatus": "ACSC",
                      "paymentRequestId": "RFP01314",
                      "requestMessageId": "GG9983636387737JH",
                      "endToEndId": "RFPid0001",
                      "creationDateTime": "2020-12-17T09:30:48Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            }
          }
        },
        "x-operationVersions": [
          {
            "label": "v1 - Latest",
            "operationPointer": "#/paths/~1rtx~1api~1outbound~1v1~1requestToPay~1{paymentRequestId}~1confirm/patch",
            "default": false
          }
        ],
        "x-hideSample": true,
        "x-hideTryIt": true
      }
    },
    "/rtx/api/outbound/v1/requestToPay/transaction/tag": {
      "post": {
        "tags": [
          "Request to Pay Outbound"
        ],
        "summary": "Transaction Tagging",
        "description": "Transaction Tagging",
        "operationId": "TransactionTaggingOutbound",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_vdp_contentType"
            }
          },
          {
            "name": "keyID",
            "in": "header",
            "description": "VDP project key ID used to manage access to the Transaction Tagging service and identify associated encryption keys.",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_vdp_keyId"
            }
          },
          {
            "name": "x-request-affinity",
            "in": "header",
            "description": "Visa provided value for transaction affinity handling.",
            "required": false,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_request_affinity"
            }
          }
        ],
        "requestBody": {
          "description": "*Transaction Tagging* enables users to attach or tag specific information to a transaction. Currently, it can be used by a payee/creditor to send a payment acknowledgment to the payer /debtor.\n\nIt is also used by Visa to notify debtor agents of these updates.\n\n---\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionTaggingRequest-1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Response Payload from Visa to the Payer service provider."
          },
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponseTagTxn"
                }
              }
            }
          }
        },
        "x-operationVersions": [
          {
            "label": "v1 - Latest",
            "operationPointer": "#/paths/~1rtx~1api~1outbound~1v1~1requestToPay~1transaction~1tag/post",
            "default": false
          }
        ],
        "x-hideSample": true,
        "x-hideTryIt": true
      }
    },
    "/rtx/api/outbound/v1/requestToPay/{originalPaymentRequestId}/refund": {
      "post": {
        "tags": [
          "Request to Pay Outbound"
        ],
        "summary": "Refund R2P",
        "description": "Refund a Request to Pay",
        "operationId": "RefundR2Poutbound",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_vdp_contentType"
            }
          },
          {
            "name": "keyID",
            "in": "header",
            "description": "VDP project key ID used to identify associated encryption keys.",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_vdp_keyId"
            }
          },
          {
            "name": "x-request-affinity",
            "in": "header",
            "description": "Visa provided value for transaction affinity handling. This value is provided for use in subsequent calls related to the Request to Pay transactions.",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_request_affinity"
            }
          },
          {
            "name": "originalPaymentRequestId",
            "in": "path",
            "description": "Original Payment RequestId is provided in parent transaction by Visa for which refund is requested.",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/r2p_originalPaymentRequestId"
            }
          }
        ],
        "requestBody": {
          "description": "*Refund Request to Pay* is used by payee service providers to create Refund R2P transactions for their end users. It is also used by payer service providers to be notified by Visa of R2P transactions relevant to their end users.\n\nThe request payload for an *Refund Request to Pay* contains the basic elements required to process a Refund Request. These include creditor/payee details,paymentRequests and options that the creditor can accept to settle the request (e.g. creditor card).\n\n---\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/refundR2pRequest_fromVisa-2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "The response payload for an Refund Request to Pay provides the status of the Request to Pay transactions initiated together with the Visa references for them.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/refundR2pResponse-1"
                }
              }
            }
          },
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "examples": {
                  "Unknown Payer": {
                    "value": {
                      "code": "RC4000",
                      "details": [
                        {
                          "field": "debtorAlias",
                          "reason": "unknownEntity"
                        }
                      ],
                      "message": "Payer not reachable",
                      "creationDateTime": "2020-12-17T09:30:48Z",
                      "requestMessageId": "GG9983636387737JH",
                      "responseMessageId": "DF3287943984732SH"
                    }
                  }
                }
              }
            }
          }
        },
        "x-operationVersions": [
          {
            "label": "v1 - Latest",
            "operationPointer": "#/paths/~1rtx~1api~1outbound~1v1~1requestToPay~1{originalPaymentRequestId}~1refund/post",
            "default": false
          }
        ],
        "x-hideSample": true,
        "x-hideTryIt": true
      }
    },
    "/rtx/api/outbound/v1/requestToPay/{paymentRequestId}/cancel": {
      "patch": {
        "tags": [
          "Request to Pay Outbound"
        ],
        "summary": "Cancel R2P",
        "description": "Cancel a Request to Pay",
        "operationId": "CancelR2Poutbound",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_vdp_contentType"
            }
          },
          {
            "name": "x-request-affinity",
            "in": "header",
            "description": "Visa provided value for transaction affinity handling. This value is provided during the Initiate Request to Pay API flow.",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_request_affinity"
            }
          },
          {
            "name": "keyID",
            "in": "header",
            "description": "VDP project key ID used to identify associated encryption keys.",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_vdp_keyId"
            }
          },
          {
            "name": "paymentRequestId",
            "in": "path",
            "description": "Request to Pay transaction ID previously provided by Visa.",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/r2p_paymentRequestId"
            }
          }
        ],
        "requestBody": {
          "description": "*Cancel Request to Pay* is used by the creditor agent to cancel previously raised Request To Pay. It can be used to cancel any requests to pay that is not in a terminal status such as RJCT.\n\nIt is also used by Visa to notify debtor agents of the cancellation.\n\n---\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cancelR2pRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Response Payload from Payer Service Provider to Visa",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cancelR2pResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            }
          }
        },
        "x-operationVersions": [
          {
            "label": "v1 - Latest",
            "operationPointer": "#/paths/~1rtx~1api~1outbound~1v1~1requestToPay~1{paymentRequestId}~1cancel/patch",
            "default": false
          }
        ],
        "x-hideSample": true,
        "x-hideTryIt": true
      }
    },
    "/rtx/api/outbound/v1/requestToPay": {
      "post": {
        "tags": [
          "Request to Pay Outbound"
        ],
        "summary": "Initiate R2P",
        "description": "Initiate Request to Pay is used by payer service providers to be notified by Visa of R2P transactions relevant to their end users.",
        "operationId": "InitiateR2Poutbound",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_vdp_contentType"
            }
          },
          {
            "name": "keyID",
            "in": "header",
            "description": "VDP project key ID used to identify associated encryption keys.",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_vdp_keyId"
            }
          },
          {
            "name": "x-request-affinity",
            "in": "header",
            "description": "Visa provided value for transaction affinity handling. This value is provided for use in subsequent calls related to the Request to Pay transactions.",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_request_affinity"
            }
          }
        ],
        "requestBody": {
          "description": "*Initiate Request to Pay* is used by payer service providers to be notified by Visa of R2P transactions relevant to their end users.\n\nThe request payload for an *Initiate Request to Pay* contains the basic elements required to process a Request to Pay. These include creditor/payee details, debtor/payer details, the request reason, and options that the creditor can accept to settle the request (e.g. creditor card or bank details).\n\n---\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/initiateR2pRequest_fromVisa"
              },
              "examples": {
                "Initiate Request to Pay from Visa (P2P)": {
                  "summary": "Initiate Request to Pay from Visa (P2P)",
                  "value": {
                    "product": "VD",
                    "useCase": "P2P",
                    "requestReason": {
                      "message": "For lunch",
                      "unicodeEmoji": "U+1F382"
                    },
                    "paymentRequests": [
                      {
                        "debtorLastName": "B.",
                        "debtorAlias": "+447709123457",
                        "paymentRequestId": "RFP01314",
                        "debtorAgentCountry": "UA",
                        "debtorCountry": "UA",
                        "requestedAmount": 100,
                        "requestedAmountCurrency": "UAH",
                        "endToEndId": "RFPid0001",
                        "debtorFirstName": "John",
                        "debtorAgentId": "VD123445",
                        "debtorAliasType": "MOBL"
                      }
                    ],
                    "dueDate": "2021-03-17",
                    "requestMessageId": "GG9983636387737JH",
                    "settlementOptions": [
                      {
                        "settlementSystem": "VISA_DIRECT",
                        "primaryAccountNumber": "4145124125553228"
                      }
                    ],
                    "creditor": {
                      "creditorCountry": "UA",
                      "creditorAgentId": "12379879797989",
                      "creditorAgentCountry": "UA",
                      "creditorAlias": "+1231231234",
                      "creditorLastName": "F.",
                      "creditorAliasType": "MOBL",
                      "creditorFirstName": "Alex"
                    },
                    "requestOptions": {
                      "allowMultiplePayments": true,
                      "closeWithFirstPayment": false
                    },
                    "creationDateTime": "2020-12-17T09:30:47Z"
                  }
                },
                "Initiate Request to Pay from Visa (B2C)": {
                  "summary": "Initiate Request to Pay from Visa (B2C)",
                  "value": {
                    "product": "VD",
                    "useCase": "B2C",
                    "requestReason": {
                      "references": [
                        {
                          "referenceType": "INVOICEID",
                          "referenceDate": "2023-01-15",
                          "referenceValue": "1234567890"
                        }
                      ],
                      "paymentPurpose": "SVCS",
                      "message": "For lunch",
                      "unicodeEmoji": "U+1F382"
                    },
                    "paymentRequests": [
                      {
                        "debtorLastName": "B.",
                        "debtorAlias": "+447709123457",
                        "paymentRequestId": "RFP01314",
                        "debtorAgentCountry": "UA",
                        "debtorCountry": "UA",
                        "requestedAmount": 100,
                        "requestedAmountCurrency": "UAH",
                        "endToEndId": "RFPid0001",
                        "debtorFirstName": "John",
                        "debtorAgentId": "VD123445",
                        "debtorAliasType": "MOBL"
                      }
                    ],
                    "dueDate": "2021-03-17",
                    "requestMessageId": "GG9983636387737JH",
                    "settlementOptions": [
                      {
                        "settlementSystem": "VISA_DIRECT",
                        "primaryAccountNumber": "4145124125553222"
                      }
                    ],
                    "creditor": {
                      "creditorCountry": "UA",
                      "creditorAgentId": "12379879797989",
                      "creditorAgentCountry": "UA",
                      "creditorBusinessName": "Mini-Corp Inc.",
                      "creditorAlias": "+1231231234",
                      "creditorLastName": "F.",
                      "creditorMcc": "1234",
                      "creditorAliasType": "MOBL",
                      "nationalIdentifiers": [
                        {
                          "type": "PASSPORT",
                          "value": "LB44889298222"
                        }
                      ],
                      "creditorTaxId": "HMRC1234567890",
                      "creditorFirstName": "Alex"
                    },
                    "requestOptions": {
                      "allowMultiplePayments": true,
                      "closeWithFirstPayment": false
                    },
                    "creationDateTime": "2020-12-17T09:30:47Z"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "The response payload for an Initiate Request to Pay provides the status of the Request to Pay transactions initiated together with the Visa references for them. The payer service provider may supplement this with additional information to support their processing e.g. debtorId.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/initiateR2pResponse-2"
                },
                "examples": {
                  "Initiate Request to Pay from Visa (P2P)": {
                    "summary": "Initiate Request to Pay from Visa (P2P)",
                    "value": {
                      "responseMessageId": "DF3287943984732SH",
                      "paymentRequests": [
                        {
                          "transactionStatus": "PDNG",
                          "paymentRequestId": "RFP01314",
                          "debtorIdType": "AGENT",
                          "endToEndId": "RFPid0001",
                          "debtorId": "BNK1234567890"
                        }
                      ],
                      "requestMessageId": "GG9983636387737JH",
                      "creationDateTime": "2020-12-17T09:30:48Z"
                    }
                  },
                  "Initiate Request to Pay from Visa (B2C)": {
                    "summary": "Initiate Request to Pay from Visa (B2C)",
                    "value": {
                      "responseMessageId": "DF3287943984732SH",
                      "paymentRequests": [
                        {
                          "transactionStatus": "PDNG",
                          "paymentRequestId": "RFP01314",
                          "debtorIdType": "AGENT",
                          "endToEndId": "RFPid0001",
                          "debtorId": "BNK1234567890"
                        }
                      ],
                      "requestMessageId": "GG9983636387737JH",
                      "creationDateTime": "2020-12-17T09:30:48Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "examples": {
                  "Unknown Payer": {
                    "value": {
                      "code": "RC4000",
                      "details": [
                        {
                          "field": "debtorAlias",
                          "reason": "unknownEntity"
                        }
                      ],
                      "message": "Payer not reachable",
                      "creationDateTime": "2020-12-17T09:30:48Z",
                      "requestMessageId": "GG9983636387737JH",
                      "responseMessageId": "DF3287943984732SH"
                    }
                  }
                }
              }
            }
          }
        },
        "x-operationVersions": [
          {
            "label": "v1 - Latest",
            "operationPointer": "#/paths/~1rtx~1api~1outbound~1v1~1requestToPay/post",
            "default": false
          }
        ],
        "x-hideSample": true,
        "x-hideTryIt": true
      }
    },
    "/rtx/api/outbound/v1/requestToPay/{paymentRequestId}/amend": {
      "patch": {
        "tags": [
          "Request to Pay Outbound"
        ],
        "summary": "Amend R2P",
        "description": "Amend a Request to Pay",
        "operationId": "AmendR2Poutbound",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_vdp_contentType"
            }
          },
          {
            "name": "keyID",
            "in": "header",
            "description": "VDP project key ID used to manage access to the Request to Pay service and identify associated encryption keys.",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_vdp_keyId"
            }
          },
          {
            "name": "x-request-affinity",
            "in": "header",
            "description": "Visa provided value for transaction affinity handling. This value is provided during the Initiate Request to Pay API flow.",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_request_affinity"
            }
          },
          {
            "name": "paymentRequestId",
            "in": "path",
            "description": "Request to Pay transaction ID previously provided by Visa.",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/r2p_paymentRequestId"
            }
          }
        ],
        "requestBody": {
          "description": "*Amend Request to Pay* is used by the creditor agent to amend previously raised Request To Pay. It can be used to amend any requests to pay that is not in a terminal status such as RJCT/ACSC/CNCL/EXPD.\n\nIt is also used by Visa to notify debtor agents of these updates.\n\n---\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/amendR2pRequest_fromVisa"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Response Payload from Payer service provider to Visa.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/amendR2pResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            }
          }
        },
        "x-operationVersions": [
          {
            "label": "v1 - Latest",
            "operationPointer": "#/paths/~1rtx~1api~1outbound~1v1~1requestToPay~1{paymentRequestId}~1amend/patch",
            "default": false
          }
        ],
        "x-hideSample": true,
        "x-hideTryIt": true
      }
    },
    "/rtx/api/outbound/v1/requestToPay/notifications": {
      "post": {
        "tags": [
          "Request to Pay Outbound"
        ],
        "summary": "Notifications R2P",
        "description": "Notifications For Request to Pay",
        "operationId": "NotificationsR2Poutbound",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_vdp_contentType"
            }
          },
          {
            "name": "keyID",
            "in": "header",
            "description": "VDP project key ID used to manage access to the Request to Pay service and identify associated encryption keys.",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_vdp_keyId"
            }
          }
        ],
        "requestBody": {
          "description": "This API is used to send reminders, scheduled by the payee, to participants (and potentially their customers) regarding pending requests to pay. Additionally, the API notifies payers about other lifecycle events related to the request to pay, such as expiration and rejection of pending requests due to applied blocks.\n\n---\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/notificationR2pRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Got 200 as a successful request."
          },
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "examples": {
                  "Invalid Input": {
                    "value": {
                      "code": "RC2000",
                      "details": [
                        {
                          "field": "paymentRequestID",
                          "reason": "123456, 2131321, 1232131"
                        }
                      ],
                      "message": "Payment Request ID Invalid",
                      "creationDateTime": "2020-12-17T09:30:48Z",
                      "requestMessageId": "GG9983636387737JH",
                      "responseMessageId": "DF3287943984732SH"
                    }
                  }
                }
              }
            }
          }
        },
        "x-operationVersions": [
          {
            "label": "v1 - Latest",
            "operationPointer": "#/paths/~1rtx~1api~1outbound~1v1~1requestToPay~1notifications/post",
            "default": false
          }
        ],
        "x-hideSample": true,
        "x-hideTryIt": true
      }
    },
    "/rtx/api/v1/requestToPay/referenceData": {
      "post": {
        "tags": [
          "Request to Pay"
        ],
        "summary": "Reference Data",
        "description": "This API will return reference data available (mainly participant details)",
        "operationId": "RefereneceData",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_vdp_contentType"
            }
          },
          {
            "name": "keyID",
            "in": "header",
            "description": "VDP project key ID used to manage access to the Request to Pay service and identify associated encryption keys.",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_vdp_keyId"
            }
          }
        ],
        "requestBody": {
          "description": "*Reference API* is used by service provider to get R2P program participants list from Visa.\n This API will return details of other active R2P participants such as Visa identifier and name of the participant.\n---  \n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/referenceDataRequest-1"
              },
              "examples": {
                "Reference data": {
                  "summary": "Reference data",
                  "value": {
                    "referenceDataTypes": [
                      "availableParticipants"
                    ],
                    "requestMessageId": "ad244fssx6b43188f7ce5d5f93471db",
                    "creationDateTime": "2020-08-08T09:30:47.001Z"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Response Payload from Visa to the Service Provider",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/referenceDataResponse-2"
                },
                "examples": {
                  "Reference data": {
                    "summary": "Reference data",
                    "value": {
                      "responseMessageId": "ed24aa2dad6b43188f7ce5d5f93471db",
                      "availableParticipants": [
                        {
                          "participantId": "88401234585",
                          "supportedFeatures": [
                            "REMINDER"
                          ],
                          "participantName": "AFCU"
                        }
                      ],
                      "requestMessageId": "ad244fssx6b43188f7ce5d5f93471db",
                      "creationDateTime": "2020-08-08T09:30:47.001Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "examples": {
                  "Invalid Input": {
                    "value": {
                      "code": "RC2000",
                      "details": [
                        {
                          "field": "referenceDataTypes",
                          "reason": "Invalid value"
                        }
                      ],
                      "message": "Business Validation Failure",
                      "creationDateTime": "2020-12-17T09:30:48Z",
                      "requestMessageId": "ad244fssx6b43188f7ce5d5f93471db",
                      "responseMessageId": "DF3287943984732SH"
                    }
                  }
                }
              }
            }
          }
        },
        "x-operationVersions": [
          {
            "label": "v1 - Latest",
            "operationPointer": "#/paths/~1rtx~1api~1v1~1requestToPay~1referenceData/post",
            "default": false
          }
        ],
        "x-hideTryIt": true
      }
    },
    "/rtx/api/v1/requestToPay/{originalPaymentRequestId}/refund": {
      "post": {
        "tags": [
          "Request to Pay"
        ],
        "summary": "Refund R2P",
        "description": "Refund a Request to Pay",
        "operationId": "RefundR2P",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_vdp_contentType"
            }
          },
          {
            "name": "keyID",
            "in": "header",
            "description": "VDP project key ID used to manage access to the Request to Pay service and identify associated encryption keys.",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_vdp_keyId"
            }
          },
          {
            "name": "x-request-affinity",
            "in": "header",
            "description": "Visa provided value for transaction affinity handling. This value will be provided by Visa in the response to this API call for use in subsequent calls related to the Request to Pay transactions.",
            "required": false,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_request_affinity"
            }
          },
          {
            "name": "originalPaymentRequestId",
            "in": "path",
            "description": "Original Payment RequestId is provided in parent transaction by Visa for which refund is requested.",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/r2p_originalPaymentRequestId"
            }
          }
        ],
        "requestBody": {
          "description": "*Refund Request to Pay* is used by payee service providers to create Refund R2P transactions for their end users. It is also used by payer service providers to be notified by Visa of R2P transactions relevant to their end users.\n\nThis is used to raise refund request against previously settled Request to Pay. The request payload for an *Refund Request to Pay* contains the basic elements required to process a Refund Request. These include creditor/payee details,paymentRequests and options that the creditor can accept to settle the request (e.g. creditor card).\n\n---\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/refundR2pRequest_toVisa-1"
              },
              "examples": {
                "Refund": {
                  "summary": "Refund",
                  "value": {
                    "paymentRequests": [
                      {
                        "requestedAmount": 100,
                        "endToEndId": "RFPid0001"
                      }
                    ],
                    "requestMessageId": "GG9983636387737JH",
                    "settlementOptions": [
                      {
                        "settlementSystem": "VISA_DIRECT",
                        "primaryAccountNumber": "4145124125553228"
                      }
                    ],
                    "creditor": {
                      "creditorId": "BL1234567890",
                      "creditorIdType": "AGENT"
                    },
                    "creationDateTime": "2020-12-17T09:30:47Z"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "The response payload for an Refund Request to Pay provides the status of the Request to Pay transactions initiated together with the Visa references for them.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/refundR2pResponse-1"
                },
                "examples": {
                  "Refund": {
                    "summary": "Refund",
                    "value": {
                      "responseMessageId": "DF3287943984732SH",
                      "paymentRequests": [
                        {
                          "transactionStatus": "PDNG",
                          "paymentRequestId": "RFP01314",
                          "endToEndId": "RFPid0001"
                        }
                      ],
                      "requestMessageId": "GG9983636387737JH",
                      "creationDateTime": "2020-12-17T09:30:48Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "examples": {
                  "Invalid PaymentRequestId": {
                    "value": {
                      "code": "RC2000",
                      "details": [
                        {
                          "field": "paymentRequestId",
                          "reason": "Not found"
                        }
                      ],
                      "message": "Business Validation Failure",
                      "creationDateTime": "2020-12-17T09:30:48Z",
                      "requestMessageId": "GG9983636387737JH",
                      "responseMessageId": "DF3287943984732SH"
                    }
                  }
                }
              }
            }
          }
        },
        "x-operationVersions": [
          {
            "label": "v1 - Latest",
            "operationPointer": "#/paths/~1rtx~1api~1v1~1requestToPay~1{originalPaymentRequestId}~1refund/post",
            "default": false
          }
        ],
        "x-hideTryIt": true
      }
    },
    "/rtx/api/v1/requestToPay/{paymentRequestId}": {
      "get": {
        "tags": [
          "Request to Pay"
        ],
        "summary": "Retrieve R2P",
        "description": "The Retrieve Request to Pay API is used to retrieve the full and current details of a request to pay. While Retrieve Request to Pay is keyed using the paymentRequestId, the 'Retrieve multiple Request to Pays' API can be used where you need to use the endToEndId.",
        "operationId": "RetrieveR2P",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_vdp_contentType"
            }
          },
          {
            "name": "keyID",
            "in": "header",
            "description": "VDP project key ID used to manage access to the Request to Pay service and identify associated encryption keys.",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_vdp_keyId"
            }
          },
          {
            "name": "x-request-affinity",
            "in": "header",
            "description": "Visa provided value for transaction affinity handling. This value is provided during the Initiate Request to Pay API flow.",
            "required": false,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_request_affinity"
            }
          },
          {
            "name": "paymentRequestId",
            "in": "path",
            "description": "Request to Pay transaction ID previously provided by Visa.",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/r2p_paymentRequestId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This retrieves the full details for a single Request to Pay transaction from the Visa platform.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/retrieveR2pResponse"
                },
                "examples": {
                  "Retrieve by Creditor Agent (B2C)": {
                    "summary": "Retrieve by Creditor Agent (B2C)",
                    "value": {
                      "product": "VD",
                      "responseMessageId": "GG9983636387737JH",
                      "requestReason": {
                        "references": [
                          {
                            "referenceType": "INVOICEID",
                            "referenceDate": "2023-01-15",
                            "referenceValue": "1234567890"
                          }
                        ],
                        "paymentPurpose": "SVCS",
                        "message": "For lunch",
                        "unicodeEmoji": "U+1F382"
                      },
                      "transactionStatus": "ACSC",
                      "settlementDetails": [
                        {
                          "creditorAccountDetail": {
                            "primaryAccountNumber": "4145124125553222"
                          },
                          "settlementSystem": "VISA_DIRECT",
                          "debtorAccountDetail": {
                            "debtorTaxId": "ABCDE1234567890",
                            "primaryAccountNumber": "4145124125553555"
                          },
                          "settledAmountCurrency": "UAH",
                          "settlementSystemReferenceId": "VIP1111155555",
                          "message": "For lunch",
                          "creditorAckEmoji": "U+1F44D",
                          "creditorAckMessage": "Thank you",
                          "unicodeEmoji": "U+1F4B8",
                          "settledAmount": 10,
                          "settlementSystemReferenceType": "RRN"
                        },
                        {
                          "creditorAccountDetail": {
                            "primaryAccountNumber": "4145124125553222"
                          },
                          "settlementSystem": "VISA_DIRECT",
                          "debtorAccountDetail": {
                            "debtorTaxId": "ABCDE1234567890",
                            "primaryAccountNumber": "4145124125553555"
                          },
                          "settledAmountCurrency": "UAH",
                          "settlementSystemReferenceId": "VIP2222266666",
                          "message": "For lunch",
                          "creditorAckEmoji": "U+1F44D",
                          "creditorAckMessage": "Thank you",
                          "unicodeEmoji": "U+1F4B8",
                          "settledAmount": 90,
                          "settlementSystemReferenceType": "RRN"
                        }
                      ],
                      "dueDate": "2021-03-17",
                      "requestOptions": {
                        "allowMultiplePayments": true,
                        "closeWithFirstPayment": false,
                        "reminderSchedule": [
                          "2023-05-30T09:30:47Z",
                          "2023-06-11T11:22:33Z",
                          "2023-07-11T11:45:13Z"
                        ]
                      },
                      "useCase": "B2C",
                      "settlementOptions": [
                        {
                          "settlementSystem": "VISA_DIRECT",
                          "primaryAccountNumber": "4145124125553222"
                        }
                      ],
                      "creditor": {
                        "creditorLastName": "F.",
                        "creditorAliasType": "MOBL",
                        "creditorFirstName": "Alex",
                        "creditorCountry": "UA",
                        "creditorAgentId": "12379879797989",
                        "creditorAgentCountry": "US",
                        "creditorBusinessName": "Mini-Corp Inc.",
                        "creditorAlias": "+1231231234",
                        "creditorMcc": "1234",
                        "creditorId": "BL1234567890",
                        "creditorIdType": "AGENT",
                        "nationalIdentifiers": [
                          {
                            "type": "PASSPORT",
                            "value": "LB44889298222"
                          }
                        ],
                        "creditorTaxId": "HMRC1234567890"
                      },
                      "paymentRequestCreationDateTime": "2020-12-17T09:30:47Z",
                      "paymentRequest": {
                        "paymentRequestId": "RFP01314",
                        "endToEndId": "RFPid0001",
                        "debtorAgentId": "VD123445",
                        "acceptedAmount": 100,
                        "debtorLastName": "F.",
                        "debtorAlias": "+447709123457",
                        "debtorAgentCountry": "UA",
                        "debtorCountry": "UA",
                        "requestedAmount": 100,
                        "requestedAmountCurrency": "UAH",
                        "acceptedAmountCurrency": "UAH",
                        "debtorFirstName": "Alex",
                        "debtorAliasType": "MOBL"
                      },
                      "creationDateTime": "2020-12-17T09:30:47Z"
                    }
                  },
                  "Retrieve by Creditor Agent (P2P)": {
                    "summary": "Retrieve by Creditor Agent (P2P)",
                    "value": {
                      "product": "VD",
                      "responseMessageId": "GG9983636387737JH",
                      "requestReason": {
                        "message": "For lunch",
                        "unicodeEmoji": "U+1F382"
                      },
                      "transactionStatus": "ACSC",
                      "settlementDetails": [
                        {
                          "creditorAccountDetail": {
                            "primaryAccountNumber": "4145124125553222"
                          },
                          "settlementSystem": "VISA_DIRECT",
                          "debtorAccountDetail": {
                            "primaryAccountNumber": "4145124125553555"
                          },
                          "settledAmountCurrency": "UAH",
                          "settlementSystemReferenceId": "VIP1111155555",
                          "message": "For lunch",
                          "creditorAckEmoji": "U+1F44D",
                          "creditorAckMessage": "Thank you",
                          "unicodeEmoji": "U+1F4B8",
                          "settledAmount": 10,
                          "settlementSystemReferenceType": "RRN"
                        },
                        {
                          "creditorAccountDetail": {
                            "primaryAccountNumber": "4145124125553222"
                          },
                          "settlementSystem": "VISA_DIRECT",
                          "debtorAccountDetail": {
                            "primaryAccountNumber": "4145124125553555"
                          },
                          "settledAmountCurrency": "UAH",
                          "settlementSystemReferenceId": "VIP2222266666",
                          "message": "For lunch",
                          "creditorAckEmoji": "U+1F44D",
                          "creditorAckMessage": "Thank you",
                          "unicodeEmoji": "U+1F4B8",
                          "settledAmount": 90,
                          "settlementSystemReferenceType": "RRN"
                        }
                      ],
                      "dueDate": "2021-03-17",
                      "requestOptions": {
                        "allowMultiplePayments": true,
                        "closeWithFirstPayment": false,
                        "reminderSchedule": [
                          "2023-05-30T09:30:47Z",
                          "2023-06-11T11:22:33Z",
                          "2023-07-11T11:45:13Z"
                        ]
                      },
                      "useCase": "P2P",
                      "settlementOptions": [
                        {
                          "settlementSystem": "VISA_DIRECT",
                          "primaryAccountNumber": "4145124125553222"
                        }
                      ],
                      "creditor": {
                        "creditorCountry": "UA",
                        "creditorAgentId": "12379879797989",
                        "creditorAgentCountry": "US",
                        "creditorAlias": "+1231231234",
                        "creditorLastName": "F.",
                        "creditorAliasType": "MOBL",
                        "creditorId": "BL1234567890",
                        "creditorIdType": "AGENT",
                        "creditorFirstName": "Alex"
                      },
                      "paymentRequestCreationDateTime": "2020-12-17T09:30:47Z",
                      "paymentRequest": {
                        "paymentRequestId": "RFP01314",
                        "endToEndId": "RFPid0001",
                        "debtorAgentId": "VD123445",
                        "acceptedAmount": 100,
                        "debtorLastName": "F.",
                        "debtorAlias": "+447709123457",
                        "debtorAgentCountry": "UA",
                        "debtorCountry": "UA",
                        "requestedAmount": 100,
                        "requestedAmountCurrency": "UAH",
                        "acceptedAmountCurrency": "UAH",
                        "debtorFirstName": "Alex",
                        "debtorAliasType": "MOBL"
                      },
                      "creationDateTime": "2020-12-17T09:30:47Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Retrieve response payload",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "examples": {
                  "Invalid PaymentRequestId": {
                    "value": {
                      "code": "RC2000",
                      "details": [
                        {
                          "field": "paymentRequestId",
                          "reason": "Not found"
                        }
                      ],
                      "message": "Business Validation Failure",
                      "creationDateTime": "2020-12-17T09:30:48Z",
                      "requestMessageId": "GG9983636387737JH",
                      "responseMessageId": "DF3287943984732SH"
                    }
                  }
                }
              }
            }
          }
        },
        "x-operationVersions": [
          {
            "label": "v1 - Latest",
            "operationPointer": "#/paths/~1rtx~1api~1v1~1requestToPay~1{paymentRequestId}/get",
            "default": false
          }
        ],
        "x-hideTryIt": true
      }
    },
    "/rtx/api/v1/requestToPay/{paymentRequestId}/amend": {
      "patch": {
        "tags": [
          "Request to Pay"
        ],
        "summary": "Amend R2P",
        "description": "Amend a Request to Pay",
        "operationId": "AmendR2Pinbound",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_vdp_contentType"
            }
          },
          {
            "name": "keyID",
            "in": "header",
            "description": "VDP project key ID used to manage access to the Request to Pay service and identify associated encryption keys.",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_vdp_keyId"
            }
          },
          {
            "name": "x-request-affinity",
            "in": "header",
            "description": "Visa provided value for transaction affinity handling. This value is provided during the Initiate Request to Pay API flow.",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_request_affinity"
            }
          },
          {
            "name": "paymentRequestId",
            "in": "path",
            "description": "Request to Pay transaction ID previously provided by Visa.",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/r2p_paymentRequestId"
            }
          }
        ],
        "requestBody": {
          "description": "*Amend Request to Pay* is used by the creditor agent to amend previously raised Request To Pay. It can be used to amend any request to pay that is not in a terminal status such as RJCT/ACSC/EXPD/CNCL.\n\nIt is also used by Visa to notify debtor agents of these updates.\n\n---\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/amendR2pRequest"
              },
              "examples": {
                "Amend Request to Visa": {
                  "summary": "Amend Request to Visa",
                  "value": {
                    "requestReason": {
                      "message": "For lunch",
                      "unicodeEmoji": "U+1F382"
                    },
                    "dueDate": "2023-10-10",
                    "requestMessageId": "GG9983636387737JH",
                    "settlementOptions": [
                      {
                        "settlementSystem": "VISA_DIRECT",
                        "primaryAccountNumber": "4145124125553222"
                      }
                    ],
                    "requestOptions": {
                      "reminderSchedule": [
                        "2023-05-30T09:30:47Z",
                        "2023-06-11T11:22:33Z",
                        "2023-07-11T11:45:13Z"
                      ]
                    },
                    "paymentRequest": {
                      "requestedAmount": 100.11
                    },
                    "creationDateTime": "2020-12-17T09:30:47Z"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Response Payload from Visa to the Payee service provider.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/amendR2pResponse"
                },
                "examples": {
                  "Amend Request to Visa": {
                    "summary": "Amend Request to Visa",
                    "value": {
                      "responseMessageId": "DF3287943984732SH",
                      "transactionStatus": "PDNG",
                      "paymentRequestId": "RFP01314",
                      "requestMessageId": "GG9983636387737JH",
                      "creationDateTime": "2020-12-17T09:30:48Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            }
          }
        },
        "x-operationVersions": [
          {
            "label": "v1 - Latest",
            "operationPointer": "#/paths/~1rtx~1api~1v1~1requestToPay~1{paymentRequestId}~1amend/patch",
            "default": false
          }
        ],
        "x-hideTryIt": true
      }
    },
    "/rtx/api/v1/requestToPay": {
      "post": {
        "tags": [
          "Request to Pay"
        ],
        "summary": "Initiate R2P",
        "description": "Initiate Request to Pay is used by payee service providers to create R2P transactions for their end users.",
        "operationId": "InitiateR2P",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_vdp_contentType"
            }
          },
          {
            "name": "keyID",
            "in": "header",
            "description": "VDP project key ID used to manage access to the Request to Pay service and identify associated encryption keys.",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_vdp_keyId"
            }
          },
          {
            "name": "x-request-affinity",
            "in": "header",
            "description": "Visa provided value for transaction affinity handling. This value will be provided by Visa in the response to this API call for use in subsequent calls related to the Request to Pay transactions.",
            "required": false,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_request_affinity"
            }
          }
        ],
        "requestBody": {
          "description": "*Initiate Request to Pay* is used by payee service providers to create R2P transactions for their end users.\n\nThe request payload for an *Initiate Request to Pay* contains the basic elements required to process a Request to Pay. These include creditor/payee details, debtor/payer details, the request reason, and options that the creditor can accept to settle the request (e.g. creditor card or bank details).\n\n---\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/initiateR2pRequest_toVisa"
              },
              "examples": {
                "Initiate B2C Request to Visa": {
                  "summary": "Initiate B2C Request to Visa",
                  "value": {
                    "product": "VD",
                    "useCase": "B2C",
                    "requestReason": {
                      "references": [
                        {
                          "referenceType": "INVOICEID",
                          "referenceDate": "2023-01-15",
                          "referenceValue": "1234567890"
                        }
                      ],
                      "paymentPurpose": "SVCS",
                      "message": "For lunch",
                      "unicodeEmoji": "U+1F382"
                    },
                    "paymentRequests": [
                      {
                        "debtorLastName": "B.",
                        "debtorAlias": "+447709123457",
                        "debtorAgentCountry": "UA",
                        "debtorCountry": "UA",
                        "requestedAmount": 100,
                        "requestedAmountCurrency": "UAH",
                        "endToEndId": "RFPid0001",
                        "debtorFirstName": "John",
                        "debtorAgentId": "VD123445",
                        "debtorAliasType": "MOBL"
                      }
                    ],
                    "dueDate": "2021-03-17",
                    "requestMessageId": "GG9983636387737JH",
                    "settlementOptions": [
                      {
                        "settlementSystem": "VISA_DIRECT",
                        "primaryAccountNumber": "4145124125553222"
                      }
                    ],
                    "creditor": {
                      "creditorLastName": "F.",
                      "creditorAliasType": "MOBL",
                      "creditorFirstName": "Alex",
                      "creditorCountry": "UA",
                      "creditorAgentId": "12379879797989",
                      "creditorAgentCountry": "UA",
                      "creditorBusinessName": "Mini-Corp Inc.",
                      "creditorAlias": "+1231231234",
                      "creditorMcc": "1234",
                      "creditorId": "BL1234567890",
                      "creditorIdType": "AGENT",
                      "nationalIdentifiers": [
                        {
                          "type": "PASSPORT",
                          "value": "LB44889298222"
                        }
                      ],
                      "creditorTaxId": "HMRC1234567890"
                    },
                    "requestOptions": {
                      "allowMultiplePayments": true,
                      "closeWithFirstPayment": false,
                      "reminderSchedule": [
                        "2023-05-30T09:30:47Z",
                        "2023-06-11T11:22:33Z",
                        "2023-07-11T11:45:13Z"
                      ]
                    },
                    "creationDateTime": "2020-12-17T09:30:47Z"
                  }
                },
                "Initiate P2P Request to Visa": {
                  "summary": "Initiate P2P Request to Visa",
                  "value": {
                    "product": "VD",
                    "useCase": "P2P",
                    "requestReason": {
                      "message": "For lunch",
                      "unicodeEmoji": "U+1F382"
                    },
                    "paymentRequests": [
                      {
                        "debtorLastName": "B.",
                        "debtorAlias": "+447709123457",
                        "debtorAgentCountry": "UA",
                        "debtorCountry": "UA",
                        "requestedAmount": 100,
                        "requestedAmountCurrency": "UAH",
                        "endToEndId": "RFPid0001",
                        "debtorFirstName": "John",
                        "debtorAgentId": "VD123445",
                        "debtorAliasType": "MOBL"
                      }
                    ],
                    "dueDate": "2021-03-17",
                    "requestMessageId": "GG9983636387737JH",
                    "settlementOptions": [
                      {
                        "settlementSystem": "VISA_DIRECT",
                        "primaryAccountNumber": "4145124125553228"
                      }
                    ],
                    "creditor": {
                      "creditorCountry": "UA",
                      "creditorAgentId": "12379879797989",
                      "creditorAgentCountry": "UA",
                      "creditorAlias": "+1231231234",
                      "creditorLastName": "F.",
                      "creditorAliasType": "MOBL",
                      "creditorId": "BL1234567890",
                      "creditorIdType": "AGENT",
                      "creditorFirstName": "Alex"
                    },
                    "requestOptions": {
                      "allowMultiplePayments": true,
                      "closeWithFirstPayment": false,
                      "reminderSchedule": [
                        "2023-05-30T09:30:47Z",
                        "2023-06-11T11:22:33Z",
                        "2023-07-11T11:45:13Z"
                      ]
                    },
                    "creationDateTime": "2020-12-17T09:30:47Z"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "The response payload for an Initiate Request to Pay provides the status of the Request to Pay transactions initiated together with the Visa references for them.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/initiateR2pResponse-2"
                },
                "examples": {
                  "Initiate B2C Request to Visa": {
                    "summary": "Initiate B2C Request to Visa",
                    "value": {
                      "responseMessageId": "DF3287943984732SH",
                      "paymentRequests": [
                        {
                          "transactionStatus": "PDNG",
                          "paymentRequestId": "RFP01314",
                          "endToEndId": "RFPid0001"
                        }
                      ],
                      "requestMessageId": "GG9983636387737JH",
                      "creationDateTime": "2020-12-17T09:30:48Z"
                    }
                  },
                  "Initiate P2P Request to Visa": {
                    "summary": "Initiate P2P Request to Visa",
                    "value": {
                      "responseMessageId": "DF3287943984732SH",
                      "paymentRequests": [
                        {
                          "transactionStatus": "PDNG",
                          "paymentRequestId": "RFP01314",
                          "endToEndId": "RFPid0001"
                        }
                      ],
                      "requestMessageId": "GG9983636387737JH",
                      "creationDateTime": "2020-12-17T09:30:48Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "examples": {
                  "Unknown Payer": {
                    "value": {
                      "code": "RC4000",
                      "details": [
                        {
                          "field": "debtorAlias",
                          "reason": "unknownEntity"
                        }
                      ],
                      "message": "Payer not reachable",
                      "creationDateTime": "2020-12-17T09:30:48Z",
                      "requestMessageId": "GG9983636387737JH",
                      "responseMessageId": "DF3287943984732SH"
                    }
                  }
                }
              }
            }
          }
        },
        "x-operationVersions": [
          {
            "label": "v1 - Latest",
            "operationPointer": "#/paths/~1rtx~1api~1v1~1requestToPay/post",
            "default": false
          }
        ],
        "x-hideTryIt": true
      }
    },
    "rtx/api/v1/requestToPay/transaction/tag": {
      "post": {
        "tags": [
          "Request to Pay"
        ],
        "summary": "Transaction Tagging",
        "description": "Transaction Tagging",
        "operationId": "TransactionTaggingInbound",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_vdp_contentType"
            }
          },
          {
            "name": "keyID",
            "in": "header",
            "description": "VDP project key ID used to manage access to the Transaction Tagging service and identify associated encryption keys.",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_vdp_keyId"
            }
          },
          {
            "name": "x-request-affinity",
            "in": "header",
            "description": "Visa provided value for transaction affinity handling.",
            "required": false,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_request_affinity"
            }
          }
        ],
        "requestBody": {
          "description": "*Transaction Tagging* enables users to attach or tag specific information to a transaction. Currently, it can be used by a payee/creditor to send a payment acknowledgment to the payer /debtor.\n\nIt is also used by Visa to notify debtor agents of these updates.\n\n---\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionTaggingRequest-1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Response Payload from Visa to the Payee service provider."
          },
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            }
          }
        },
        "x-operationVersions": [
          {
            "label": "v1 - Latest",
            "operationPointer": "#/paths/rtx~1api~1v1~1requestToPay~1transaction~1tag/post",
            "default": false
          }
        ],
        "x-hideTryIt": true
      }
    },
    "/rtx/api/v1/requestToPay/{paymentRequestId}/confirm": {
      "patch": {
        "tags": [
          "Request to Pay"
        ],
        "summary": "Confirm R2P",
        "description": "Confirm Request to Pay is used by payer service providers to provide an initial update to Visa on the status of the Request to Pay based on their initial processing and/or interaction with the end user. It is also used by payee service providers to be notified by Visa of these updates.",
        "operationId": "ConfirmR2Poutbound",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_vdp_contentType"
            }
          },
          {
            "name": "keyID",
            "in": "header",
            "description": "VDP project key ID used to manage access to the Request to Pay service and identify associated encryption keys.",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_vdp_keyId"
            }
          },
          {
            "name": "x-request-affinity",
            "in": "header",
            "description": "Visa provided value for transaction affinity handling. This value is provided during the Initiate Request to Pay API flow.",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_request_affinity"
            }
          },
          {
            "name": "paymentRequestId",
            "in": "path",
            "description": "Request to Pay transaction ID previously provided by Visa.",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/r2p_paymentRequestId"
            }
          }
        ],
        "requestBody": {
          "description": "*Confirm Request to Pay* is used by payer service providers to provide an initial update to Visa on the status of the R2P based on their initial processing and/or interaction with the end user.\n\nIt is also used by payee service providers to be notified by Visa of these updates.\n\n---\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/confirmR2pRequest"
              },
              "examples": {
                "Request to Pay declined": {
                  "summary": "Request to Pay declined",
                  "value": {
                    "statusReason": "RJ02",
                    "transactionStatus": "RJCT",
                    "paymentRequestId": "RFP01314",
                    "requestMessageId": "GG9983636387737JH",
                    "message": "Rejected by Payer",
                    "endToEndId": "RFPid0001",
                    "creationDateTime": "2020-12-17T09:30:47Z"
                  }
                },
                "Request to pay unsuccessful with the settlement option provided": {
                  "summary": "Request to pay unsuccessful with the settlement option provided",
                  "value": {
                    "statusReason": "RJ04",
                    "transactionStatus": "RJCT",
                    "paymentRequestId": "RFP01314",
                    "requestMessageId": "GG9983636387737JJ",
                    "message": "Payment cannot be completed between payee and payer using the  settlementOption               provided.",
                    "endToEndId": "RFPid0002",
                    "creationDateTime": "2020-12-17T09:30:47Z"
                  }
                },
                "Request to pay partially settled": {
                  "summary": "Request to pay partially settled",
                  "value": {
                    "acceptedAmount": 100,
                    "transactionStatus": "ACCP",
                    "settlementDetails": {
                      "creditorAccountDetail": {
                        "primaryAccountNumber": "4145124125553222"
                      },
                      "settlementSystem": "VISA_DIRECT",
                      "debtorAccountDetail": {
                        "debtorTaxId": "ABCDE1234567890",
                        "primaryAccountNumber": "4145124125553555"
                      },
                      "settledAmountCurrency": "UAH",
                      "settlementSystemReferenceId": "VIP1111155555",
                      "message": "For lunch",
                      "unicodeEmoji": "U+1F4B8",
                      "settledAmount": 10,
                      "settlementSystemReferenceType": "RRN"
                    },
                    "paymentRequestId": "RFP01314",
                    "requestMessageId": "GG9983636387737JH",
                    "endToEndId": "RFPid0001",
                    "acceptedAmountCurrency": "UAH",
                    "creationDateTime": "2020-12-17T09:30:47Z"
                  }
                },
                "Decline Request to Pay and block creditor": {
                  "summary": "Decline Request to Pay and block creditor",
                  "value": {
                    "statusReason": "RJ03",
                    "transactionStatus": "RJCT",
                    "paymentRequestId": "RFP01314",
                    "requestMessageId": "GG9983636387737JH",
                    "message": "Rejected by Payer",
                    "endToEndId": "RFPid0001",
                    "creationDateTime": "2020-12-17T09:30:47Z"
                  }
                },
                "Request to Pay accepted": {
                  "summary": "Request to Pay accepted",
                  "value": {
                    "acceptedAmount": 100,
                    "transactionStatus": "ACSC",
                    "settlementDetails": {
                      "creditorAccountDetail": {
                        "primaryAccountNumber": "4145124125553222"
                      },
                      "settlementSystem": "VISA_DIRECT",
                      "debtorAccountDetail": {
                        "debtorTaxId": "ABCDE1234567890",
                        "primaryAccountNumber": "4145124125553555"
                      },
                      "settledAmountCurrency": "UAH",
                      "settlementSystemReferenceId": "VIP1234567890",
                      "message": "For lunch",
                      "unicodeEmoji": "U+1F4B8",
                      "settledAmount": 100,
                      "settlementSystemReferenceType": "RRN"
                    },
                    "paymentRequestId": "RFP01314",
                    "requestMessageId": "GG9983636387737JH",
                    "endToEndId": "RFPid0001",
                    "acceptedAmountCurrency": "UAH",
                    "creationDateTime": "2020-12-17T09:30:47Z"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Response Payload from Visa to the Payer service provider.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/confirmR2pResponse"
                },
                "examples": {
                  "Request to Pay declined": {
                    "summary": "Request to Pay declined",
                    "value": {
                      "responseMessageId": "DF3287943984732SH",
                      "transactionStatus": "RJCT",
                      "paymentRequestId": "RFP01314",
                      "requestMessageId": "GG9983636387737JH",
                      "endToEndId": "RFPid0001",
                      "creationDateTime": "2020-12-17T09:30:48Z"
                    }
                  },
                  "Request to pay unsuccessful with the settlement option provided": {
                    "summary": "Request to pay unsuccessful with the settlement option provided",
                    "value": {
                      "responseMessageId": "DF3287943984732SH",
                      "transactionStatus": "RJCT",
                      "paymentRequestId": "RFP01314",
                      "requestMessageId": "GG9983636387737JH",
                      "endToEndId": "RFPid0002",
                      "creationDateTime": "2020-12-17T09:30:48Z"
                    }
                  },
                  "Request to pay partially settled": {
                    "summary": "Request to pay partially settled",
                    "value": {
                      "responseMessageId": "DF3287943984732SH",
                      "transactionStatus": "ACCP",
                      "paymentRequestId": "RFP01314",
                      "requestMessageId": "GG9983636387737JH",
                      "endToEndId": "RFPid0001",
                      "creationDateTime": "2020-12-17T09:30:48Z"
                    }
                  },
                  "Decline Request to Pay and block creditor": {
                    "summary": "Decline Request to Pay and block creditor",
                    "value": {
                      "responseMessageId": "DF3287943984732SH",
                      "transactionStatus": "RJCT",
                      "paymentRequestId": "RFP01314",
                      "requestMessageId": "GG9983636387737JH",
                      "endToEndId": "RFPid0001",
                      "creationDateTime": "2020-12-17T09:30:48Z"
                    }
                  },
                  "Request to Pay accepted": {
                    "summary": "Request to Pay accepted",
                    "value": {
                      "responseMessageId": "DF3287943984732SH",
                      "transactionStatus": "ACSC",
                      "paymentRequestId": "RFP01314",
                      "requestMessageId": "GG9983636387737JH",
                      "endToEndId": "RFPid0001",
                      "creationDateTime": "2020-12-17T09:30:48Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            }
          }
        },
        "x-operationVersions": [
          {
            "label": "v1 - Latest",
            "operationPointer": "#/paths/~1rtx~1api~1v1~1requestToPay~1{paymentRequestId}~1confirm/patch",
            "default": false
          }
        ],
        "x-hideTryIt": true
      }
    },
    "/rtx/api/v1/requestToPay/{paymentRequestId}/cancel": {
      "patch": {
        "tags": [
          "Request to Pay"
        ],
        "summary": "Cancel R2P",
        "description": "Cancel a Request to Pay",
        "operationId": "CancelR2P",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_vdp_contentType"
            }
          },
          {
            "name": "x-request-affinity",
            "in": "header",
            "description": "Visa provided value for transaction affinity handling. This value is provided during the Initiate Request to Pay API flow.",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_request_affinity"
            }
          },
          {
            "name": "keyID",
            "in": "header",
            "description": "VDP project key ID used to manage access to the Request to Pay service and identify associated encryption keys.",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_vdp_keyId"
            }
          },
          {
            "name": "paymentRequestId",
            "in": "path",
            "description": "Request to Pay transaction ID previously provided by Visa.",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/r2p_paymentRequestId"
            }
          }
        ],
        "requestBody": {
          "description": "*Cancel Request to Pay* is used by the creditor agent to cancel previously raised Request To Pay. It can be used to cancel any requests to pay that is not in a terminal status such as RJCT.\n\nIt is also used by Visa to notify debtor agents of the cancellation.\n\n---\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cancelR2pRequest"
              },
              "examples": {
                "Default": {
                  "summary": "Default",
                  "value": {
                    "cancellationReason": "PAID",
                    "requestMessageId": "2c253f102c50-493b-b2c5-847d7f50b029",
                    "creationDateTime": "2020-12-17T09:30:47Z"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Response Payload from Visa to the Payee Service Provider",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cancelR2pResponse"
                },
                "examples": {
                  "Default": {
                    "summary": "Default",
                    "value": {
                      "responseMessageId": "e96defb2c71f41f9bdbc9e4448a23df7",
                      "transactionStatus": "CNCL",
                      "requestMessageId": "2c253f102c50-493b-b2c5-847d7f50b029",
                      "creationDateTime": "2020-12-17T09:30:47Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            }
          }
        },
        "x-operationVersions": [
          {
            "label": "v1 - Latest",
            "operationPointer": "#/paths/~1rtx~1api~1v1~1requestToPay~1{paymentRequestId}~1cancel/patch",
            "default": false
          }
        ],
        "x-hideTryIt": true
      }
    },
    "/rtx/api/v1/requestToPay/retrieve": {
      "post": {
        "tags": [
          "Request to Pay"
        ],
        "summary": "Retrieve Multiple R2P",
        "description": "Retrieve Data for Multiple R2Ps based on EndtoEndId or PaymentRequestIds",
        "operationId": "RetrieveMultipleR2P",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_vdp_contentType"
            }
          },
          {
            "name": "keyID",
            "in": "header",
            "description": "VDP project key ID used to manage access to the Request to Pay service and identify associated encryption keys.",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_vdp_keyId"
            }
          },
          {
            "name": "x-request-affinity",
            "in": "header",
            "description": "Visa provided value for transaction affinity handling. This value is provided during the Initiate Request to Pay API flow.",
            "required": false,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_request_affinity"
            }
          }
        ],
        "requestBody": {
          "description": "*Retrieve multiple Request to Pays* is used to pull full Request to Pay information for a series of Request to Pay transactions. It allows the caller to retrieve the transactions using either the paymentRequestId or the associated endToEndId.\n",
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/retrieveR2pByPaymentRequestIdsRequest"
                  },
                  {
                    "$ref": "#/components/schemas/retrieveR2pByEndToEndIdsRequest"
                  }
                ]
              },
              "examples": {
                "Retrieve by EndToEndIds": {
                  "summary": "Retrieve by EndToEndIds",
                  "value": {
                    "agentId": "VD123445",
                    "endToEndIds": [
                      "RFPid0001",
                      "RFPid0002"
                    ]
                  }
                },
                "Retrieve by PaymentRequestIds": {
                  "summary": "Retrieve by PaymentRequestIds",
                  "value": {
                    "agentId": "VD123445",
                    "paymentRequestIds": [
                      "RFP01314",
                      "RFP1235"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "This retrieves the full details of one or more Request to Pay transactions from the Visa platform.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/multipleRetrieveR2pResponse"
                },
                "examples": {
                  "Retrieve by EndToEndIds": {
                    "summary": "Retrieve by EndToEndIds",
                    "value": {
                      "paymentRequestDetails": [
                        {
                          "product": "VD",
                          "responseMessageId": "GG9983636387737JH",
                          "requestReason": {
                            "references": [
                              {
                                "referenceType": "INVOICEID",
                                "referenceDate": "2023-01-15",
                                "referenceValue": "1234567890"
                              }
                            ],
                            "paymentPurpose": "SVCS",
                            "message": "For lunch",
                            "unicodeEmoji": "U+1F382"
                          },
                          "transactionStatus": "ACSC",
                          "settlementDetails": [
                            {
                              "creditorAccountDetail": {
                                "primaryAccountNumber": "4145124125553222"
                              },
                              "settlementSystem": "VISA_DIRECT",
                              "debtorAccountDetail": {
                                "debtorTaxId": "ABCDE1234567890",
                                "primaryAccountNumber": "4145124125553555"
                              },
                              "settledAmountCurrency": "UAH",
                              "settlementSystemReferenceId": "VIP1234567890",
                              "settlemenSystemReferenceType": "RRN",
                              "message": "For lunch",
                              "creditorAckEmoji": "U+1F44D",
                              "creditorAckMessage": "Thank you",
                              "unicodeEmoji": "U+1F4B8",
                              "settledAmount": 10
                            },
                            {
                              "creditorAccountDetail": {
                                "primaryAccountNumber": "4145124125553222"
                              },
                              "settlementSystem": "VISA_DIRECT",
                              "debtorAccountDetail": {
                                "debtorTaxId": "ABCDE1234567890",
                                "primaryAccountNumber": "4145124125553555"
                              },
                              "settledAmountCurrency": "UAH",
                              "settlementSystemReferenceId": "VIP1234567890",
                              "settlemenSystemReferenceType": "RRN",
                              "message": "For lunch",
                              "creditorAckEmoji": "U+1F44D",
                              "creditorAckMessage": "Thank you",
                              "unicodeEmoji": "U+1F4B8",
                              "settledAmount": 100
                            }
                          ],
                          "dueDate": "2021-03-17",
                          "requestOptions": {
                            "allowMultiplePayments": true,
                            "closeWithFirstPayment": false,
                            "reminderSchedule": [
                              "2023-05-30T09:30:47Z",
                              "2023-06-11T11:22:33Z",
                              "2023-07-11T11:45:13Z"
                            ]
                          },
                          "useCase": "B2C",
                          "settlementOptions": [
                            {
                              "settlementSystem": "VISA_DIRECT",
                              "primaryAccountNumber": "4145124125553222"
                            }
                          ],
                          "creditor": {
                            "creditorLastName": "F.",
                            "creditorAliasType": "MOBL",
                            "creditorFirstName": "Alex",
                            "creditorCountry": "UA",
                            "creditorAgentId": "12379879797989",
                            "creditorAgentCountry": "US",
                            "creditorBusinessName": "Mini-Corp Inc.",
                            "creditorAlias": "+1231231234",
                            "creditorMcc": "1234",
                            "creditorId": "BL1234567890",
                            "creditorIdType": "AGENT",
                            "nationalIdentifiers": [
                              {
                                "type": "PASSPORT",
                                "value": "LB44889298222"
                              }
                            ],
                            "creditorTaxId": "HMRC1234567890"
                          },
                          "paymentRequestCreationDateTime": "2020-12-17T09:30:47Z",
                          "paymentRequest": {
                            "paymentRequestId": "RFP01314",
                            "endToEndId": "RFPid0001",
                            "debtorAgentId": "VD123445",
                            "acceptedAmount": 100,
                            "debtorLastName": "F.",
                            "debtorAlias": "+447709123457",
                            "debtorAgentCountry": "UA",
                            "debtorCountry": "UA",
                            "requestedAmount": 100,
                            "requestedAmountCurrency": "UAH",
                            "acceptedAmountCurrency": "UAH",
                            "debtorFirstName": "Alex",
                            "debtorAliasType": "MOBL"
                          },
                          "creationDateTime": "2020-12-17T09:30:47Z"
                        }
                      ]
                    }
                  },
                  "Retrieve by PaymentRequestIds": {
                    "summary": "Retrieve by PaymentRequestIds",
                    "value": {
                      "paymentRequestDetails": [
                        {
                          "product": "VD",
                          "responseMessageId": "GG9983636387737JH",
                          "requestReason": {
                            "message": "For lunch",
                            "unicodeEmoji": "U+1F382"
                          },
                          "transactionStatus": "ACSC",
                          "settlementDetails": [
                            {
                              "creditorAccountDetail": {
                                "primaryAccountNumber": "4145124125553222"
                              },
                              "settlementSystem": "VISA_DIRECT",
                              "debtorAccountDetail": {
                                "primaryAccountNumber": "4145124125553555"
                              },
                              "settledAmountCurrency": "UAH",
                              "settlementSystemReferenceId": "VIP1234567890",
                              "message": "For lunch",
                              "creditorAckEmoji": "U+1F44D",
                              "creditorAckMessage": "Thank you",
                              "unicodeEmoji": "U+1F4B8",
                              "settledAmount": 100,
                              "settlementSystemReferenceType": "RRN"
                            }
                          ],
                          "dueDate": "2021-03-17",
                          "requestOptions": {
                            "allowMultiplePayments": true,
                            "closeWithFirstPayment": false,
                            "reminderSchedule": [
                              "2023-05-30T09:30:47Z",
                              "2023-06-11T11:22:33Z",
                              "2023-07-11T11:45:13Z"
                            ]
                          },
                          "useCase": "P2P",
                          "settlementOptions": [
                            {
                              "settlementSystem": "VISA_DIRECT",
                              "primaryAccountNumber": "4145124125553222"
                            }
                          ],
                          "creditor": {
                            "creditorCountry": "UA",
                            "creditorAgentId": "12379879797989",
                            "creditorAgentCountry": "US",
                            "creditorAlias": "+1231231234",
                            "creditorLastName": "F.",
                            "creditorAliasType": "MOBL",
                            "creditorId": "BL1234567890",
                            "creditorIdType": "AGENT",
                            "creditorFirstName": "Alex"
                          },
                          "paymentRequestCreationDateTime": "2020-12-17T09:30:47Z",
                          "paymentRequest": {
                            "paymentRequestId": "RFP01314",
                            "endToEndId": "RFPid0001",
                            "debtorAgentId": "VD123445",
                            "acceptedAmount": 100,
                            "debtorLastName": "F.",
                            "debtorAlias": "+447709123457",
                            "debtorAgentCountry": "UA",
                            "debtorCountry": "UA",
                            "requestedAmount": 100,
                            "requestedAmountCurrency": "UAH",
                            "acceptedAmountCurrency": "UAH",
                            "debtorFirstName": "Alex",
                            "debtorAliasType": "MOBL"
                          },
                          "creationDateTime": "2020-12-17T09:30:47Z"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Retrieve response payload",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/multiRetrieveError"
                }
              }
            }
          }
        },
        "x-operationVersions": [
          {
            "label": "v1 - Latest",
            "operationPointer": "#/paths/~1rtx~1api~1v1~1requestToPay~1retrieve/post",
            "default": false
          }
        ],
        "x-hideTryIt": true
      }
    },
    "/rtx/api/v1/requestControl/{blockReferenceId}/remove": {
      "patch": {
        "tags": [
          "Request Control "
        ],
        "summary": "Request Control Remove Block",
        "description": "This API is used to remove the block applied on creditor/payee in the past.",
        "operationId": "removeBlock",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_vdp_contentType"
            }
          },
          {
            "name": "keyID",
            "in": "header",
            "description": "VDP project key ID used to manage access to the Request to Pay service and identify associated encryption keys.",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_vdp_keyId"
            }
          },
          {
            "name": "blockReferenceId",
            "in": "path",
            "description": "Block Reference Id is the unique identifier of a block.",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/r2p_blockReferenceId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response  200 (Empty response)"
          },
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "examples": {
                  "Invalid Input": {
                    "value": {
                      "code": "RC2000",
                      "details": [
                        {
                          "field": "blockReferenceId",
                          "reason": "Invalid Value"
                        }
                      ],
                      "message": "Business Validation Failure",
                      "creationDateTime": "2020-12-17T09:30:48Z",
                      "requestMessageId": "ad244fssx6b43188f7ce5d5f93471db",
                      "responseMessageId": "DF3287943984732SH"
                    }
                  }
                }
              }
            }
          }
        },
        "x-operationVersions": [
          {
            "label": "v1 - Latest",
            "operationPointer": "#/paths/~1rtx~1api~1v1~1requestControl~1{blockReferenceId}~1remove/patch",
            "default": false
          }
        ],
        "x-hideTryIt": true
      }
    },
    "/rtx/api/v1/requestControl/view": {
      "post": {
        "tags": [
          "Request Control "
        ],
        "summary": "Request Control View Block",
        "description": "Request Control View Block",
        "operationId": "viewBlock",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_vdp_contentType"
            }
          },
          {
            "name": "keyID",
            "in": "header",
            "description": "VDP project key ID used to manage access to the Request to Pay service and identify associated encryption keys.",
            "required": true,
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/core_vdp_keyId"
            }
          }
        ],
        "requestBody": {
          "description": "*View Blocks* is used by debtor service provider to retrieve the details of active blocks a debtor has requested to be applied.\n This API will service return the details of active blocks to enable presentation as needed to debtors and provide the service provider with the information needed when submitting a Remove Block API call.\n---\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/viewBlockRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Response Payload from Visa to the Service Provider",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/viewBlockResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "examples": {
                  "Invalid Input": {
                    "value": {
                      "code": "RC1000",
                      "details": [
                        {
                          "field": "debtorIdType",
                          "reason": "Invalid Value"
                        }
                      ],
                      "message": "Data in the request is missing or invalid",
                      "creationDateTime": "2020-12-17T09:30:48Z",
                      "requestMessageId": "ad244fssx6b43188f7ce5d5f93471db",
                      "responseMessageId": "DF3287943984732SH"
                    }
                  }
                }
              }
            }
          }
        },
        "x-operationVersions": [
          {
            "label": "v1 - Latest",
            "operationPointer": "#/paths/~1rtx~1api~1v1~1requestControl~1view/post",
            "default": false
          }
        ],
        "x-hideTryIt": true
      }
    }
  },
  "components": {
    "schemas": {
      "multiRetrieveError": {
        "required": [
          "code",
          "creationDateTime",
          "message",
          "requestMessageId",
          "responseMessageId"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 6,
            "type": "string",
            "description": "Coded reason group this error response is considered part of.\n<table><tr><td>Value</td><td>Description</td></tr>\n<tr><td>RC1xxx</td><td>RC1xxx codes indicate an invalid request. Typically a syntactical issue with the API request such as a missing mandatory field incorrect field formatting.</td></tr>\n<tr><td>RC2xxx</td><td>RC2xxxx codes indicate a business validation failure. Typically, the request is syntactically correct but the request does not meet the business rules configured. For example, the debtor last name does not meet country specific validations.</td></tr>\n<tr><td>RC3xxx</td><td>RC3xxx codes indicate an authorisation failure. The request may be syntactically correct and meet the necessary business rules but breaches an additional control or configuration in place. i.e., The request is valid but not allowed at this time. Examples of reasons for this error include attempting to retrieve R2P details unrelated to the entity calling the retrieve request to pay API or submitting a B2C request when only configured for P2P requests.</td></tr>\n<tr><td>RC3001</td><td>Authorisation failure: The request is syntactically correct but cannot be accepted by Visa at this time as a result of an active block control.</td></tr>\n<tr><td>RC3002</td><td>Authorisation failure: The request is syntactically correct but cannot be accepted by Visa at this time as a result of velocity/frequency control.</td></tr>\n<tr><td>RC4xxx</td><td>RC4xxx codes indicate an entity in the request to pay transaction is unknown. The request involves an entity that is not known or cannot be resolved. For example, the mobile number given to route the R2P to is not known to the organisation with responsibility for resolving the number to a debtor - whether that be Visa or another organisation depending on the service configuration and request to pay transaction.</td></tr>\n<tr><td>RC5xxx</td><td>Server Errors. May be seen as a result of errors internal to the processing system.</td></tr></table>\n",
            "example": "RC1000"
          },
          "details": {
            "required": [
              "errorDetails"
            ],
            "type": "array",
            "description": "Additional details on specific fields that triggered the error response where relevant.",
            "items": {
              "$ref": "#/components/schemas/multiRetrieveErrorDetails"
            }
          },
          "message": {
            "type": "string",
            "example": "Data in the request is missing or invalid"
          },
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "requestMessageId": {
            "description": "The requestMessageId mapped across from the callers request. Note that where Visa cannot process a request sufficiently to obtain a requestMessageId, this field will be populated with using a Visa generated Id prefixed with ERR.",
            "allOf": [
              {
                "$ref": "#/components/schemas/core_requestMessageId"
              }
            ]
          },
          "responseMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_responseMessageId"
              }
            ]
          }
        }
      },
      "refundR2pRequest_fromVisa": {
        "required": [
          "creationDateTime",
          "creditor",
          "product",
          "requestMessageId",
          "settlementOptions",
          "useCase"
        ],
        "type": "object",
        "properties": {
          "dueDate": {
            "description": "dueDate indicates the date that the payment request is asked to be settled by. DueDate is set to 90 days by default.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_dateStamp"
              }
            ]
          },
          "product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_product"
              }
            ]
          },
          "useCase": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_refund_useCase"
              }
            ]
          },
          "creditor": {
            "$ref": "#/components/schemas/refundCreditor_fromVisa"
          },
          "requestReason": {
            "$ref": "#/components/schemas/requestReason"
          },
          "paymentRequests": {
            "maxLength": 1,
            "required": [
              "paymentRequest"
            ],
            "type": "array",
            "description": "A list of payers, and their requested amounts, that Request to Pay transactions should be sent for linked to this request. Note that while maxLength is 1, this is specified as an array for future use cases.",
            "items": {
              "$ref": "#/components/schemas/refundPaymentRequest_fromVisa"
            }
          },
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "requestMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_requestMessageId"
              }
            ]
          },
          "settlementOptions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/refundSettlementOptions"
              }
            ]
          }
        }
      },
      "endToEndIds": {
        "maxItems": 10,
        "type": "array",
        "description": "A transaction ID, unique to the creditor, that may be used independently of Visa IDs (i.e paymentRequestId) to identify the transaction between payee and payer service providers. Note that this value is set by the entity that submits the Initiate Request to Pay to Visa and we cannot determine who in the chain between the end user and Visa set this value.",
        "example": [
          "RFPid0001",
          "RFPid0002"
        ],
        "items": {
          "maxLength": 35,
          "type": "string"
        }
      },
      "initiateR2pRequest_toVisa-1": {
        "required": [
          "paymentRequests"
        ],
        "type": "object",
        "properties": {
          "requestReason": {
            "$ref": "#/components/schemas/requestReason-1"
          },
          "requestOptions": {
            "description": "Optional field for B2C/P2P use case. This field serves as an indicator for different preferences associated with the payee.",
            "allOf": [
              {
                "$ref": "#/components/schemas/requestOptions"
              }
            ]
          },
          "paymentRequests": {
            "maxLength": 1,
            "required": [
              "paymentRequest"
            ],
            "type": "array",
            "description": "A list of payers, and their requested amounts, that Request to Pay transactions should be sent for linked to this request. Note that while maxLength is 1, this is specified as an array for future use cases.",
            "items": {
              "$ref": "#/components/schemas/paymentRequest_toVisa-1"
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/initiateR2pRequest_common-1"
          }
        ]
      },
      "initiateR2pRequest_toVisa-2": {
        "required": [
          "paymentRequests"
        ],
        "type": "object",
        "properties": {
          "requestReason": {
            "$ref": "#/components/schemas/requestReason-2"
          },
          "paymentRequests": {
            "maxLength": 1,
            "required": [
              "paymentRequest"
            ],
            "type": "array",
            "description": "A list of payers, and their requested amounts, that Request to Pay transactions should be sent for linked to this request. Note that while maxLength is 1, this is specified as an array for future use cases.",
            "items": {
              "$ref": "#/components/schemas/paymentRequest_toVisa-2"
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/initiateR2pRequest_common-2"
          }
        ]
      },
      "initiateR2pRequest_toVisa-3": {
        "required": [
          "paymentRequests"
        ],
        "type": "object",
        "properties": {
          "requestReason": {
            "$ref": "#/components/schemas/requestReason-3"
          },
          "requestOptions": {
            "description": "Optional field for B2C/P2P use case. This field serves as an indicator for different preferences associated with the payee.",
            "allOf": [
              {
                "$ref": "#/components/schemas/requestOptions-1"
              }
            ]
          },
          "paymentRequests": {
            "maxLength": 1,
            "required": [
              "paymentRequest"
            ],
            "type": "array",
            "description": "A list of payers, and their requested amounts, that Request to Pay transactions should be sent for linked to this request. Note that while maxLength is 1, this is specified as an array for future use cases.",
            "items": {
              "$ref": "#/components/schemas/paymentRequest_toVisa-3"
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/initiateR2pRequest_common-3"
          }
        ]
      },
      "paymentRequestMinResponse": {
        "required": [
          "endToEndId",
          "paymentRequestId",
          "transactionStatus"
        ],
        "type": "object",
        "properties": {
          "debtorId": {
            "description": "<b>Conditional.</b> ID that may be used to uniquely identify the payer within the context of the debtorIdType. While an optional field in certain use cases (determined by product rules outlined here), certain capabilities such as search will be limited based on provided data to ensure data security. For example protecting against MSISDN re-use in mobile telephone markets. As such, Visa strongly recommends using this field.\n<table><tr><td>Product</td><td>Initiate Response from Visa</td><td>Initiate Response to Visa</td></tr>\n<tr><td>VD</td><td>Not included</td><td>Optional</td></tr></table>\nThe debtorId is not shared with the payee agent. When responding to a Retrieve Request to Pay call, inclusion of the debtorId will be based on the role of the caller.\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pEntityId"
              }
            ]
          },
          "endToEndId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/endToEndId"
              }
            ]
          },
          "debtorIdType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pIdType"
              }
            ]
          },
          "paymentRequestId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_paymentRequestId"
              }
            ]
          },
          "transactionStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_transactionStatus"
              }
            ]
          }
        }
      },
      "TaggedTransaction": {
        "required": [
          "transactionId",
          "transactionIdType"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "description": "Relevant transaction ID from the system the data is being tagged to. For example, transaction ID for Request to Pay",
            "allOf": [
              {
                "$ref": "#/components/schemas/transactionId"
              }
            ]
          },
          "transactionIdType": {
            "type": "string",
            "description": "The type of transaction the emoji/message is being tagged to. Valid values include:\n<table><tr><td>Value</td><td>Description</td></tr>\n<tr><td>R2P</td><td>Request to Pay transaction</td></tr>\n</table>\n",
            "example": "R2P"
          },
          "settlementSystemReferenceId": {
            "maxLength": 36,
            "type": "string",
            "description": "Conditional. Mandatory when transactionIdType is 'R2P'. Reference ID provided by the settlement system that may be used for reconciliation.\n",
            "example": "VIP1234567890"
          },
          "settlmentSystemReferenceType": {
            "type": "string",
            "description": "Conditional. This must be provided when a settlementSystemReferenceId is provided. Settlement reference type acts like a metadata for the settlementSystemReferenceID field. Currently supported values are:\n<table>\n<tr><td>Value</td><td>Description</td></tr>\n<tr><td>RRN</td><td>Retrieval Reference Number.<br> Use when settlementSystem is VISA_DIRECT/MASTERCARD.</td><td>Available for both P2P and B2C.</td></tr>\n<tr><td>TXNID</td><td>Visa or Mastercard transaction ID</td><td>Available for both P2P and B2C.</td></tr>\n<tr><td>YPPID</td><td>Yellow Pepper PIS payment ID.<br>Use when settlementSystem is YELLOW_PEPPER.</td><td>Available for both P2P and B2C.</td></tr>\n</table>       \n",
            "example": "RRN"
          }
        }
      },
      "core_responseMessageId": {
        "maxLength": 35,
        "type": "string",
        "description": "Unique point-to-point ID specified by the responder to an API request to support message reconciliation. When Visa is responding to a request the value is a unique id generated by Visa. When an entity is sending the API response, this value is generated by their system.",
        "example": "BB123454435JH"
      },
      "dict_dateStamp": {
        "maxLength": 10,
        "pattern": "YYYY-MM-DD",
        "type": "string",
        "format": "date"
      },
      "r2p_product": {
        "maxLength": 3,
        "type": "string",
        "description": "The product field drives business logic specific to the Request to Pay processing that has been configured for the entity by Visa. For more information on product options please contact your Visa representative. Valid values include:\n<table><tr><td>Value</td><td>Description</td></tr>\n<tr><td>VD</td><td>Request to Pay is used as part of entity subscribed Visa Direct service.</td></tr></table>\n",
        "example": "VD"
      },
      "r2p_transactionStatus": {
        "type": "string",
        "description": "Overall status of the Request to Pay transaction. \nIt is expected that a successful Initiate Request to Pay will only return PDNG. Changes to the transaction status will be communicated in subsequent messages.\nValid values are:\n<table><tr><td>Value</td><td>Description</td></tr>\n<tr><td>PDNG</td><td>R2P has been created and is valid but has not been processed further by the payer.</td></tr>\n<tr><td>RJCT</td><td>R2P could not be conveyed to the payer or the payer has rejected it. See the full transaction information for more detail.</td></tr>\n<tr><td>ACCP</td><td>R2P has been accepted by the payer and a partial payment has been made. See the full transaction information for more detail.</td></tr>\n<tr><td>ACSC</td><td>R2P has been accepted by the payer and payment has been confirmed as made. See the full transaction information for more detail.</td></tr>\n<tr><td>CNCL</td><td>R2P has been cancelled by the payee. See the full transaction information for more detail.</td></tr>\n<tr><td>EXPD</td><td>R2P has expired (i.e. the dueDate is in the past) and can no longer be updated.</td></tr>\n</table>\n",
        "example": "PDNG"
      },
      "reminderEventType": {
        "maxLength": 35,
        "type": "string",
        "description": "Indicating the event for which the notification is sending. Currently, the supported values are 'REMINDER', 'EXPIRED', 'REJECTED' and 'SETTLED'. Note :If a partial payment has been made and then the payee reduces the request to an amount less than what has already been paid, the request will be closed as 'Accepted and Settled' (ACSC). A notification with the event type as ‘SETTLED’ will then be sent to the service provider of the payer , informing them that the request the payer fulfilled has been closed. ",
        "example": "REMINDER, EXPIRED, REJECTED, SETTLED"
      },
      "settlementDetails": {
        "maxLength": 10,
        "required": [
          "settlementRecord"
        ],
        "type": "array",
        "description": "<b>Conditional - Required if the Request to Pay is settled.</b> The list of payments received for the associated Request to Pay.\n",
        "items": {
          "$ref": "#/components/schemas/settlementRecordRetrieve"
        }
      },
      "initiateSettlementOption": {
        "required": [
          "settlementSystem"
        ],
        "type": "object",
        "properties": {
          "receivingAlias": {
            "description": "Conditional. This field is required when settlementSystem is DEFERRED_TO_ALIAS. Format and length validation are in place.",
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasKey"
              }
            ]
          },
          "settlementSystem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/initiateSettlementSystem"
              }
            ]
          },
          "receivingAliasType": {
            "description": "Conditional. This field is required when receivingAlias is present. This indicates the type of alias provided and thus validation logic and business rules that will be applied to it. Should be supporting EMAIL,MOBL as aliasType.",
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasType"
              }
            ]
          },
          "primaryAccountNumber": {
            "description": "Conditional. Primary Account Number (PAN) payment can be made to for this Request to Pay. For example, the creditors PAN or an agent allowed to receive funds for them. Validations limited to MOD10 checks. If Settlement System is Visa Direct or Mastercard, this field is required.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_primaryAccountNumber"
              }
            ]
          }
        }
      },
      "transactionId": {
        "maxLength": 100,
        "type": "string",
        "description": "Visa generated transaction ID. For example, transaction ID for Request to Pay.",
        "example": "RFP01314"
      },
      "initiateSettlementOptions": {
        "maxLength": 1,
        "required": [
          "settlementOption"
        ],
        "type": "array",
        "description": "The list of settlement options contains details of payment mechanisms that can be used by the payer to settle the Request to Pay from the payee. Note that while maxLength is 1, this is specified as an array for future use cases.",
        "items": {
          "$ref": "#/components/schemas/initiateSettlementOption"
        }
      },
      "initiateR2pRequest_toVisa": {
        "required": [
          "paymentRequests"
        ],
        "type": "object",
        "properties": {
          "requestReason": {
            "$ref": "#/components/schemas/requestReason"
          },
          "requestOptions": {
            "description": "Optional field for B2C/P2P use case. This field serves as an indicator for different preferences associated with the payee.",
            "allOf": [
              {
                "$ref": "#/components/schemas/requestOptions"
              }
            ]
          },
          "paymentRequests": {
            "maxLength": 1,
            "required": [
              "paymentRequest"
            ],
            "type": "array",
            "description": "A list of payers, and their requested amounts, that Request to Pay transactions should be sent for linked to this request. Note that while maxLength is 1, this is specified as an array for future use cases.",
            "items": {
              "$ref": "#/components/schemas/paymentRequest_toVisa"
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/initiateR2pRequest_common"
          }
        ]
      },
      "multipleRetrieveR2pResponse-3": {
        "required": [
          "creationDateTime",
          "dueDate",
          "paymentRequestCreationDateTime",
          "product",
          "responseMessageId",
          "transactionStatus",
          "useCase"
        ],
        "type": "object",
        "properties": {
          "paymentRequestDetail": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "dueDate": {
                  "description": "dueDate indicates the date that the payment request is asked to be settled by. If this is not specified by the payee service provider, a default timeframe of 90 days from the current date will be applied. The payer can expect to receive the dueDate value whether the payee specified it or not.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/dict_dateStamp"
                    }
                  ]
                },
                "message": {
                  "type": "string",
                  "example": "The payer has rejected the Request to Pay."
                },
                "product": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/r2p_product"
                    }
                  ]
                },
                "useCase": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/r2p_useCase"
                    }
                  ]
                },
                "creditor": {
                  "$ref": "#/components/schemas/creditorForRetrieve-3"
                },
                "statusReason": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/r2p_statusReason-1"
                    }
                  ]
                },
                "requestReason": {
                  "$ref": "#/components/schemas/requestReason-3"
                },
                "paymentRequest": {
                  "$ref": "#/components/schemas/paymentRequest_initiated-1"
                },
                "requestOptions": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/requestOptions-1"
                    }
                  ]
                },
                "creationDateTime": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/core_creationDateTime"
                    }
                  ]
                },
                "responseMessageId": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/core_responseMessageId"
                    }
                  ]
                },
                "settlementDetails": {
                  "$ref": "#/components/schemas/settlementDetails-3"
                },
                "settlementOptions": {
                  "$ref": "#/components/schemas/settlementOptions"
                },
                "transactionStatus": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/r2p_transactionStatus"
                    }
                  ]
                },
                "paymentRequestCreationDateTime": {
                  "description": "The time that the Request to Pay was created in the Visa platform.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/dict_dateTimeStamp"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "dict_country2": {
        "maxLength": 2,
        "type": "string",
        "description": "Specified using ISO3166-2.",
        "example": "UA"
      },
      "multipleRetrieveR2pResponse-2": {
        "required": [
          "creationDateTime",
          "dueDate",
          "paymentRequestCreationDateTime",
          "product",
          "responseMessageId",
          "transactionStatus",
          "useCase"
        ],
        "type": "object",
        "properties": {
          "paymentRequestDetail": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "dueDate": {
                  "description": "dueDate indicates the date that the payment request is asked to be settled by. If this is not specified by the payee service provider, a default timeframe of 90 days from the current date will be applied. The payer can expect to receive the dueDate value whether the payee specified it or not.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/dict_dateStamp"
                    }
                  ]
                },
                "message": {
                  "type": "string",
                  "example": "The payer has rejected the Request to Pay."
                },
                "product": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/r2p_product"
                    }
                  ]
                },
                "useCase": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/r2p_useCase"
                    }
                  ]
                },
                "creditor": {
                  "$ref": "#/components/schemas/creditorForRetrieve-2"
                },
                "statusReason": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/r2p_statusReason-2"
                    }
                  ]
                },
                "requestReason": {
                  "$ref": "#/components/schemas/requestReason-2"
                },
                "paymentRequest": {
                  "$ref": "#/components/schemas/paymentRequest_initiated-2"
                },
                "creationDateTime": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/core_creationDateTime"
                    }
                  ]
                },
                "responseMessageId": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/core_responseMessageId"
                    }
                  ]
                },
                "settlementDetails": {
                  "$ref": "#/components/schemas/settlementDetails-2"
                },
                "settlementOptions": {
                  "$ref": "#/components/schemas/settlementOptions-1"
                },
                "transactionStatus": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/r2p_transactionStatus-1"
                    }
                  ]
                },
                "paymentRequestCreationDateTime": {
                  "description": "The time that the Request to Pay was created in the Visa platform.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/dict_dateTimeStamp"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "creditor": {
        "required": [
          "creditorAgentCountry",
          "creditorAgentId",
          "creditorCountry"
        ],
        "type": "object",
        "properties": {
          "creditorId": {
            "description": "<b>Conditional.</b> ID that may be used to uniquely identify the payee within the context of the creditorIdType (e.g., customer id assigned by service provider). While an optional field in certain use cases (determined by product rules outlined here), certain capabilities such as search will limited based on provided data to ensure data security. For example, protecting against MSISDN re-use in mobile telephone markets or payee having multiple telephone numbers.\n<table><tr><td>Product</td><td>Initiate Request to Visa</td><td>Initiate Request from Visa</td></tr>\n<tr><td>VD</td><td>Mandatory</td><td>Omitted</td></tr></table>\nAs seen in the table above, the creditorId is not shared with the payer agent. When responding to a Retrieve Request to Pay call, inclusion of the creditorId will be based on the role of the caller.\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pEntityId"
              }
            ]
          },
          "creditorMcc": {
            "description": "<b>Conditional.</b> Merchant Category Code applicable to the creditor for this transaction. Applicable for the B2C use case.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_mcc"
              }
            ]
          },
          "creditorAlias": {
            "description": "<b>Conditional.</b> The alias used to identify and route to the payee. This field may be optional in certain use cases (determined by product rules) for example where routing is driven by creditorId. Where creditorAlias is provided, creditorAliasType must also be provided. The structure and validations of the creditorAlias field are determined by the creditorAliasType value.",
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasKey"
              }
            ]
          },
          "creditorTaxId": {
            "description": "This field used to carry the tax reference applicable to the creditor or registration ID of the business entity for B2C use case. While defined as optional for the Visa API, this field is required where local regulation requires the tax ID to be compliant.",
            "allOf": [
              {
                "$ref": "#/components/schemas/taxId"
              }
            ]
          },
          "creditorIdType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pIdType"
              }
            ]
          },
          "creditorAgentId": {
            "description": "Visa identifier for the payee service provider.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pEntityId"
              }
            ]
          },
          "creditorCountry": {
            "description": "Payees country of residence specified using ISO3166-2. Where ISO has not formally applied a 2 digit code, the following will be used:\n<table><tr><td>Country</td><td>Country Code (2-char)</td></tr>\n<tr><td>Kosovo</td><td>QZ</td></tr></table>\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_country2"
              }
            ]
          },
          "creditorLastName": {
            "description": "<b>Conditional. Mandatory for P2P use case but optional for B2C</b>.The last name of the payee.\n<b>NOTE:</b> This is currently limited to the first letter of the last name followed, optionally, by a dot symbol. e.g. 'S.' rather than Smith.",
            "allOf": [
              {
                "$ref": "#/components/schemas/lastName"
              }
            ]
          },
          "creditorAliasType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasType"
              }
            ]
          },
          "creditorFirstName": {
            "description": "<b>Conditional. Mandatory for P2P use case but optional for B2C</b> .The first name of the payee.",
            "allOf": [
              {
                "$ref": "#/components/schemas/firstName"
              }
            ]
          },
          "nationalIdentifiers": {
            "description": "This field used to hold the national identifier (like a passport number) of a creditor in a B2C use case . While this field is optional in Visa API, it becomes mandatory where local regulation requires to send information about the registration identifier to the Payer while initiating a request to pay.",
            "allOf": [
              {
                "$ref": "#/components/schemas/nationalIdentifiers"
              }
            ]
          },
          "creditorAgentCountry": {
            "description": "Payee service providers country of business specified using ISO3166-2. Where ISO has not formally applied a 2 digit code, the following will be used:\n<table><tr><td>Country</td><td>Country Code (2-char)</td></tr>\n<tr><td>Kosovo</td><td>QZ</td></tr></table>\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_country2"
              }
            ]
          },
          "creditorBusinessName": {
            "description": "<b>Conditional.</b> Name of the business entity submitting the R2P request for example brand name/doing business as. Required for a B2C request.",
            "allOf": [
              {
                "$ref": "#/components/schemas/businessName"
              }
            ]
          }
        }
      },
      "multipleRetrieveR2pResponse-1": {
        "required": [
          "creationDateTime",
          "dueDate",
          "paymentRequestCreationDateTime",
          "product",
          "responseMessageId",
          "transactionStatus",
          "useCase"
        ],
        "type": "object",
        "properties": {
          "paymentRequestDetail": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "dueDate": {
                  "description": "dueDate indicates the date that the payment request is asked to be settled by. If this is not specified by the payee service provider, a default timeframe of 90 days from the current date will be applied. The payer can expect to receive the dueDate value whether the payee specified it or not.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/dict_dateStamp"
                    }
                  ]
                },
                "message": {
                  "type": "string",
                  "example": "The payer has rejected the Request to Pay."
                },
                "product": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/r2p_product"
                    }
                  ]
                },
                "useCase": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/r2p_useCase"
                    }
                  ]
                },
                "creditor": {
                  "$ref": "#/components/schemas/creditorForRetrieve-1"
                },
                "statusReason": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/r2p_statusReason-1"
                    }
                  ]
                },
                "requestReason": {
                  "$ref": "#/components/schemas/requestReason-1"
                },
                "paymentRequest": {
                  "$ref": "#/components/schemas/paymentRequest_initiated-1"
                },
                "requestOptions": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/requestOptions"
                    }
                  ]
                },
                "creationDateTime": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/core_creationDateTime"
                    }
                  ]
                },
                "responseMessageId": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/core_responseMessageId"
                    }
                  ]
                },
                "settlementDetails": {
                  "$ref": "#/components/schemas/settlementDetails-1"
                },
                "settlementOptions": {
                  "$ref": "#/components/schemas/settlementOptions"
                },
                "transactionStatus": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/r2p_transactionStatus"
                    }
                  ]
                },
                "paymentRequestCreationDateTime": {
                  "description": "The time that the Request to Pay was created in the Visa platform.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/dict_dateTimeStamp"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "multipleRetrieveR2pResponse-4": {
        "required": [
          "creationDateTime",
          "dueDate",
          "paymentRequestCreationDateTime",
          "product",
          "responseMessageId",
          "transactionStatus",
          "useCase"
        ],
        "type": "object",
        "properties": {
          "paymentRequestDetail": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "dueDate": {
                  "description": "dueDate indicates the date that the payment request is asked to be settled by. If this is not specified by the payee service provider, a default timeframe of 90 days from the current date will be applied. The payer can expect to receive the dueDate value whether the payee specified it or not.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/dict_dateStamp"
                    }
                  ]
                },
                "message": {
                  "type": "string",
                  "example": "The payer has rejected the Request to Pay."
                },
                "product": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/r2p_product"
                    }
                  ]
                },
                "useCase": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/r2p_useCase"
                    }
                  ]
                },
                "creditor": {
                  "$ref": "#/components/schemas/creditorForRetrieve-3"
                },
                "statusReason": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/r2p_statusReason-1"
                    }
                  ]
                },
                "requestReason": {
                  "$ref": "#/components/schemas/requestReason-3"
                },
                "paymentRequest": {
                  "$ref": "#/components/schemas/paymentRequest_initiated-1"
                },
                "requestOptions": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/requestOptions-1"
                    }
                  ]
                },
                "creationDateTime": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/core_creationDateTime"
                    }
                  ]
                },
                "responseMessageId": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/core_responseMessageId"
                    }
                  ]
                },
                "settlementDetails": {
                  "$ref": "#/components/schemas/settlementDetails-4"
                },
                "settlementOptions": {
                  "$ref": "#/components/schemas/settlementOptions"
                },
                "transactionStatus": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/r2p_transactionStatus"
                    }
                  ]
                },
                "paymentRequestCreationDateTime": {
                  "description": "The time that the Request to Pay was created in the Visa platform.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/dict_dateTimeStamp"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "retrieveR2pByPaymentRequestIdsRequest": {
        "required": [
          "paymentRequestIds"
        ],
        "type": "object",
        "properties": {
          "agentId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/agentId"
              }
            ]
          },
          "paymentRequestIds": {
            "allOf": [
              {
                "$ref": "#/components/schemas/paymentRequestIds"
              }
            ]
          }
        }
      },
      "settlementSystem": {
        "maxLength": 35,
        "type": "string",
        "description": "Settlement mechanism or payment rail used for payments related to the payment request. Currently supported values are:\n<table><tr><td>Value</td><td>Settlement mechanism or payment rail</td><td>Description</td></tr>\n<tr><td>VISA_DIRECT</td><td>Visa Direct</td><td>Available for both P2P and B2C.</td></tr>\n<tr><td>MASTERCARD</td><td>Mastercard</td><td>Available for only P2P not B2C.</td></tr>\n</table>\n",
        "example": "VISA_DIRECT"
      },
      "TransactionTaggingRequest-1": {
        "required": [
          "messageEvent",
          "taggedTransaction"
        ],
        "type": "object",
        "properties": {
          "messageEvent": {
            "$ref": "#/components/schemas/MessageEvent-1"
          },
          "taggedTransaction": {
            "$ref": "#/components/schemas/TaggedTransaction-1"
          }
        }
      },
      "initiateR2pRequest_fromVisa-3": {
        "required": [
          "paymentRequests"
        ],
        "type": "object",
        "properties": {
          "requestReason": {
            "$ref": "#/components/schemas/requestReason-3"
          },
          "requestOptions": {
            "properties": {
              "allowMultiplePayments": {
                "type": "boolean",
                "description": "Should be enabled if multiple payments are allowed for a request for payment. If not sent during the Initiate API, it is considered as false by default.",
                "example": false
              }
            }
          },
          "paymentRequests": {
            "maxLength": 1,
            "required": [
              "paymentRequest"
            ],
            "type": "array",
            "description": "A list of payers, and their requested amounts, that Request to Pay transactions should be sent for linked to this request. Note that while maxLength is 1, this is specified as an array for future use cases.",
            "items": {
              "$ref": "#/components/schemas/paymentRequest_fromVisa-3"
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/initiateR2pRequest_common-3"
          }
        ]
      },
      "referenceDataRequest": {
        "required": [
          "creationDateTime",
          "referenceDataTypes",
          "requestMessageId"
        ],
        "type": "object",
        "properties": {
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "requestMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_requestMessageId"
              }
            ]
          },
          "referenceDataTypes": {
            "type": "array",
            "description": "This field indicates the type of reference data in the request. Valid values include:\n<table><tr><td>Value</td><td>Description</td></tr>\n<tr><td>availableParticipants</td><td>This indicates the request is to get details of active R2P participants</td></tr></table>\n",
            "items": {
              "maxLength": 35,
              "minLength": 1,
              "type": "string"
            }
          }
        }
      },
      "blockedPayeesResponse": {
        "required": [
          "blockCreatedDate",
          "blockReason",
          "creditorAgentId",
          "product",
          "referenceId"
        ],
        "type": "object",
        "properties": {
          "product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_product"
              }
            ]
          },
          "blockReason": {
            "type": "string",
            "description": "This indicates the block reason provided by payer during block operation.",
            "example": "The Request to Pay is being rejected as a result of a block control"
          },
          "referenceId": {
            "type": "string",
            "description": "Unique block referece id created during block opeartion",
            "example": "116709992401522544782526"
          },
          "creditorAlias": {
            "description": "<b>Conditional.</b> The alias used to identify and route to the payee. This field may be optional in certain use cases (determined by product rules) for example where routing is driven by creditorId. Where creditorAlias is provided, creditorAliasType must also be provided. The structure and validations of the creditorAlias field are determined by the creditorAliasType value.",
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasKey"
              }
            ]
          },
          "creditorAgentId": {
            "description": "Visa identifier for the payee service provider.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pEntityId"
              }
            ]
          },
          "blockCreatedDate": {
            "type": "string",
            "description": "The blockCreatedDate field indicates the date timestamp when block has been applied on payee by the payer.",
            "example": "2020-12-17T09:30:47Z"
          },
          "creditorLastName": {
            "type": "string",
            "description": "<b>Conditional.</b>Last name of the blocked Payee. This is mandatory for blocks applied on P2P request but optional otherwise.",
            "example": "Higgens"
          },
          "creditorAliasType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasType"
              }
            ]
          },
          "creditorFirstName": {
            "type": "string",
            "description": "<b>Conditional.</b>First name of the blocked Payee. This is mandatory for blocks applied on P2P request but optional otherwise.",
            "example": "John"
          },
          "creditorBusinessName": {
            "type": "string",
            "description": "<b>Conditional.</b> Name of blocked business entity for example brand name/doing business as. This is applicable only when blocks applied by consumer on B2C request in which blocked payee will be a business entity.",
            "example": "Stripe"
          }
        }
      },
      "initiateR2pRequest_fromVisa-2": {
        "required": [
          "paymentRequests"
        ],
        "type": "object",
        "properties": {
          "requestReason": {
            "$ref": "#/components/schemas/requestReason-2"
          },
          "paymentRequests": {
            "maxLength": 1,
            "required": [
              "paymentRequest"
            ],
            "type": "array",
            "description": "A list of payers, and their requested amounts, that Request to Pay transactions should be sent for linked to this request. Note that while maxLength is 1, this is specified as an array for future use cases.",
            "items": {
              "$ref": "#/components/schemas/paymentRequest_fromVisa-2"
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/initiateR2pRequest_common-2"
          }
        ]
      },
      "referenceType": {
        "maxLength": 35,
        "type": "string",
        "description": "Indicates the reference type. Valid values are:\n<table>\n<tr><td>Description</td></tr>\n<tr><td>CONTRACTID</td></tr>\n<tr><td>INVOICEID</td></tr>\n<tr><td>ORDERID</td></tr>\n<tr><td>TRACKINGID</td></tr>\n<tr><td>PAYMENTID</td></tr>\n<tr><td>OTHER</td></tr>\n</table>\n",
        "example": "INVOICEID"
      },
      "initiateR2pRequest_fromVisa-1": {
        "required": [
          "paymentRequests"
        ],
        "type": "object",
        "properties": {
          "requestReason": {
            "$ref": "#/components/schemas/requestReason-1"
          },
          "requestOptions": {
            "properties": {
              "allowMultiplePayments": {
                "type": "boolean",
                "description": "Used to indicate whether the request can be settled with multiple smaller payments rather than a single full payment. If not included this will default to FALSE to ensure compatibility between participants.",
                "example": false
              },
              "closeWithFirstPayment": {
                "type": "boolean",
                "description": "This flag is used to specify if the request can be closed after receiving the first payment from the payer, regardless of the amount. If this flag is not included, it will automatically be set to FALSE to maintain compatibility between participants. It's important to note that the flags, 'allowMultiplePayments' and 'closeWithFirstPayment', cannot both be set to TRUE simultaneously.",
                "example": false
              }
            }
          },
          "paymentRequests": {
            "maxLength": 1,
            "required": [
              "paymentRequest"
            ],
            "type": "array",
            "description": "A list of payers, and their requested amounts, that Request to Pay transactions should be sent for linked to this request. Note that while maxLength is 1, this is specified as an array for future use cases.",
            "items": {
              "$ref": "#/components/schemas/paymentRequest_fromVisa-1"
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/initiateR2pRequest_common-1"
          }
        ]
      },
      "nationalIdentifiersObject": {
        "required": [
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/type"
              }
            ]
          },
          "value": {
            "allOf": [
              {
                "$ref": "#/components/schemas/value"
              }
            ]
          }
        }
      },
      "refundR2pRequest_fromVisa-1": {
        "required": [
          "creationDateTime",
          "creditor",
          "product",
          "requestMessageId",
          "settlementOptions",
          "useCase"
        ],
        "type": "object",
        "properties": {
          "dueDate": {
            "description": "dueDate indicates the date that the payment request is asked to be settled by. DueDate is set to 90 days by default.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_dateStamp"
              }
            ]
          },
          "product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_product"
              }
            ]
          },
          "useCase": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_refund_useCase"
              }
            ]
          },
          "creditor": {
            "$ref": "#/components/schemas/refundCreditor_fromVisa-1"
          },
          "requestReason": {
            "$ref": "#/components/schemas/requestReason-1"
          },
          "paymentRequests": {
            "maxLength": 1,
            "required": [
              "paymentRequest"
            ],
            "type": "array",
            "description": "A list of payers, and their requested amounts, that Request to Pay transactions should be sent for linked to this request. Note that while maxLength is 1, this is specified as an array for future use cases.",
            "items": {
              "$ref": "#/components/schemas/refundPaymentRequest_fromVisa"
            }
          },
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "requestMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_requestMessageId"
              }
            ]
          },
          "settlementOptions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/refundSettlementOptions"
              }
            ]
          }
        }
      },
      "amendR2pRequest": {
        "required": [
          "creationDateTime",
          "requestMessageId"
        ],
        "type": "object",
        "properties": {
          "dueDate": {
            "description": "Indicates the amended due date the payment request to be settled by. If this is not specified by the payee service provider as part of amend request, original due date will remain unchanged.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_dateStamp"
              }
            ]
          },
          "requestReason": {
            "type": "object",
            "properties": {
              "message": {
                "maxLength": 250,
                "type": "string",
                "description": "This field allows the payee to include a single message as part of the request to pay to the payer. Please refer the implementation guide for the list of supported pre-defined messages."
              },
              "unicodeEmoji": {
                "maxLength": 250,
                "type": "string",
                "description": "This field allows the payee to include a single emoji as part of the request to pay to the payer. Please refer the implementation guide for the list of supported emojis."
              }
            },
            "description": "The requestReason block provides additional information to make clear to the payer what the request is for."
          },
          "paymentRequest": {
            "$ref": "#/components/schemas/paymentRequest"
          },
          "requestOptions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/requestOptionsAmend"
              }
            ]
          },
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "requestMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_requestMessageId"
              }
            ]
          },
          "settlementOptions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/amendSettlementOptions"
              }
            ]
          }
        }
      },
      "cancelR2pResponse-1": {
        "required": [
          "creationDateTime",
          "requestMessageId",
          "responseMessageId",
          "transactionStatus"
        ],
        "type": "object",
        "properties": {
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "requestMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_requestMessageId"
              }
            ]
          },
          "responseMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_responseMessageId"
              }
            ]
          },
          "transactionStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_transactionStatus-1"
              }
            ]
          }
        }
      },
      "refundR2pRequest_fromVisa-3": {
        "required": [
          "creationDateTime",
          "creditor",
          "product",
          "requestMessageId",
          "settlementOptions",
          "useCase"
        ],
        "type": "object",
        "properties": {
          "dueDate": {
            "description": "dueDate indicates the date that the payment request is asked to be settled by. DueDate is set to 90 days by default.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_dateStamp"
              }
            ]
          },
          "product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_product"
              }
            ]
          },
          "useCase": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_refund_useCase-1"
              }
            ]
          },
          "creditor": {
            "$ref": "#/components/schemas/refundCreditor_fromVisa-1"
          },
          "requestReason": {
            "$ref": "#/components/schemas/requestReason-3"
          },
          "paymentRequests": {
            "maxLength": 1,
            "required": [
              "paymentRequest"
            ],
            "type": "array",
            "description": "A list of payers, and their requested amounts, that Request to Pay transactions should be sent for linked to this request. Note that while maxLength is 1, this is specified as an array for future use cases.",
            "items": {
              "$ref": "#/components/schemas/refundPaymentRequest_fromVisa"
            }
          },
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "requestMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_requestMessageId"
              }
            ]
          },
          "settlementOptions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/refundSettlementOptions"
              }
            ]
          }
        }
      },
      "dict_r2pEntityId": {
        "maxLength": 35,
        "type": "string",
        "description": "Visa provided ID for the given service provider.",
        "example": "VD123445"
      },
      "refundR2pRequest_fromVisa-2": {
        "required": [
          "creationDateTime",
          "creditor",
          "product",
          "requestMessageId",
          "settlementOptions",
          "useCase"
        ],
        "type": "object",
        "properties": {
          "dueDate": {
            "description": "dueDate indicates the date that the payment request is asked to be settled by. DueDate is set to 90 days by default.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_dateStamp"
              }
            ]
          },
          "product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_product"
              }
            ]
          },
          "useCase": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_refund_useCase-1"
              }
            ]
          },
          "creditor": {
            "$ref": "#/components/schemas/refundCreditor_fromVisa-2"
          },
          "requestReason": {
            "$ref": "#/components/schemas/requestReason-2"
          },
          "paymentRequests": {
            "maxLength": 1,
            "required": [
              "paymentRequest"
            ],
            "type": "array",
            "description": "A list of payers, and their requested amounts, that Request to Pay transactions should be sent for linked to this request. Note that while maxLength is 1, this is specified as an array for future use cases.",
            "items": {
              "$ref": "#/components/schemas/refundPaymentRequest_fromVisa-1"
            }
          },
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "requestMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_requestMessageId"
              }
            ]
          },
          "settlementOptions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/refundSettlementOptions"
              }
            ]
          }
        }
      },
      "paymentRequest": {
        "type": "object",
        "properties": {
          "requestedAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_paymentAmount"
              }
            ]
          }
        }
      },
      "confirmR2pRequest": {
        "required": [
          "creationDateTime",
          "endToEndId",
          "paymentRequestId",
          "requestMessageId",
          "transactionStatus"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "endToEndId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/endToEndId"
              }
            ]
          },
          "statusReason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_statusReason"
              }
            ]
          },
          "acceptedAmount": {
            "description": "<b>Conditional - required if the transaction is considered accepted.</b> This is the value the payment request is accepted for. Currently it must match the requested amount except when ‘requestOptions[].closeWithFirstPayment’ flag is set to true in the Initiate R2P request. ",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_paymentAmount"
              }
            ]
          },
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "paymentRequestId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_paymentRequestId"
              }
            ]
          },
          "requestMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_requestMessageId"
              }
            ]
          },
          "settlementDetails": {
            "$ref": "#/components/schemas/settlementRecord"
          },
          "transactionStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_transactionStatus"
              }
            ]
          },
          "acceptedAmountCurrency": {
            "description": "<b>Conditional - required if the transaction is considered accepted.</b> Currency that the payment request is accepted in specified using ISO4217. Currently it must match the requested currency.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_paymentCurrency"
              }
            ]
          }
        }
      },
      "dict_r2pIdType": {
        "type": "string",
        "description": "Required where a debtorId or creditorId is included, the ID type indicates who provided and can translate the related ID value. Currently valid values are:\n<table><tr><td>Value</td><td>Description</td></tr>\n<tr><td>AGENT</td><td>The service provider for the referenced end user provided the ID. e.g. The creditorAgent provided the creditorId.</td></tr>\n<tr><td>AGENTPR</td><td>The processor/technical service provider connected to Visa on behalf of the service provider provided the ID.</td></tr></table>\n",
        "example": "AGENT"
      },
      "retrieveR2pByEndToEndIdsRequest-1": {
        "required": [
          "endToEndIds"
        ],
        "type": "object",
        "properties": {
          "agentId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/agentId"
              }
            ]
          },
          "endToEndIds": {
            "allOf": [
              {
                "$ref": "#/components/schemas/endToEndIds-1"
              }
            ]
          }
        }
      },
      "dict_mcc": {
        "maxLength": 4,
        "minLength": 3,
        "type": "string",
        "description": "Merchant Country Code values are specified as documented in ISO18245.",
        "example": "7995"
      },
      "paymentRequestForRetrieve-1": {
        "required": [
          "debtorAgentCountry",
          "debtorAgentId",
          "debtorCountry",
          "endToEndId",
          "requestedAmount",
          "requestedAmountCurrency"
        ],
        "type": "object",
        "properties": {
          "endToEndId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/endToEndId"
              }
            ]
          },
          "debtorAlias": {
            "description": "<b>Conditional.</b> The alias used to identify and route to the payer. Where debtorAlias is provided, debtorAliasType must also be provided. The structure and validations of the debtorAlias field are determined by the debtorAliasType value. <table><tr><td>Product</td><td>Initiate Request to Visa</td><td>Initiate Request from Visa</td></tr> <tr><td>VD</td><td>Mandatory</td><td>Mandatory</td></tr></table>",
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasKey"
              }
            ]
          },
          "debtorAgentId": {
            "description": "Visa identifier for the payer service provider.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pEntityId"
              }
            ]
          },
          "debtorCountry": {
            "description": "Payers country of residence specified using ISO3166-2. Where ISO has not formally applied a 2 digit code, the following will be used:\n<table><tr><td>Country</td><td>Country Code (2-char)</td></tr>\n<tr><td>Kosovo</td><td>QZ</td></tr></table>\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_country2"
              }
            ]
          },
          "acceptedAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_paymentAmount"
              }
            ]
          },
          "debtorLastName": {
            "description": "<b>Conditional.</b> The last name of the payer.Mandatory for P2P and B2C request but optional for refund of B2C request.\n<b>NOTE:</b> This is currently limited to the first letter of the last name followed, optionally, by a dot symbol. e.g. 'S.' rather than Smith.",
            "allOf": [
              {
                "$ref": "#/components/schemas/lastName"
              }
            ]
          },
          "debtorAliasType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasType"
              }
            ]
          },
          "debtorFirstName": {
            "description": "<b>Conditional.</b> The first name of the payer. Mandatory for P2P and B2C request but optional for refund of B2C request.",
            "allOf": [
              {
                "$ref": "#/components/schemas/firstName"
              }
            ]
          },
          "requestedAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_paymentAmount"
              }
            ]
          },
          "debtorAgentCountry": {
            "description": "Payer service providers country of business specified using ISO3166-2. Where ISO has not formally applied a 2 digit code, the following will be used:\n<table><tr><td>Country</td><td>Country Code (2-char)</td></tr>\n<tr><td>Kosovo</td><td>QZ</td></tr></table>\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_country2"
              }
            ]
          },
          "acceptedAmountCurrency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_paymentCurrency"
              }
            ]
          },
          "requestedAmountCurrency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_paymentCurrency"
              }
            ]
          }
        }
      },
      "paymentRequestForRetrieve-2": {
        "required": [
          "debtorAgentCountry",
          "debtorAgentId",
          "debtorCountry",
          "endToEndId",
          "requestedAmount",
          "requestedAmountCurrency"
        ],
        "type": "object",
        "properties": {
          "endToEndId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/endToEndId-1"
              }
            ]
          },
          "debtorAlias": {
            "description": "<b>Conditional.</b> The alias used to identify and route to the payer. Where debtorAlias is provided, debtorAliasType must also be provided. The structure and valiations of the debtorAlias field are determined by the debtorAliasType value. <table><tr><td>Product</td><td>Initiate Request to Visa</td><td>Initiate Request from Visa</td></tr> <tr><td>VD</td><td>Mandatory</td><td>Mandatory</td></tr></table>",
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasKey"
              }
            ]
          },
          "debtorAgentId": {
            "description": "Visa identifier for the payer service provider.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pEntityId"
              }
            ]
          },
          "debtorCountry": {
            "description": "Payers country of residence specified using ISO3166-2. Where ISO has not formally applied a 2 digit code, the following will be used:\n<table><tr><td>Country</td><td>Country Code (2-char)</td></tr>\n<tr><td>Kosovo</td><td>QZ</td></tr></table>\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_country2"
              }
            ]
          },
          "debtorLastName": {
            "description": "<b>Conditional.</b> The last name of the payer.Mandatory for P2P and B2C request but optional for refund of B2C request.\n<b>NOTE:</b> This is currently limited to the first letter of the last name followed, optionally, by a dot symbol. e.g. 'S.' rather than Smith.",
            "allOf": [
              {
                "$ref": "#/components/schemas/lastName"
              }
            ]
          },
          "debtorAliasType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasType"
              }
            ]
          },
          "debtorFirstName": {
            "description": "<b>Conditional.</b> The first name of the payer. Mandatory for P2P and B2C request but optional for refund of B2C request.",
            "allOf": [
              {
                "$ref": "#/components/schemas/firstName"
              }
            ]
          },
          "requestedAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_paymentAmount"
              }
            ]
          },
          "debtorAgentCountry": {
            "description": "Payer service providers country of business specified using ISO3166-2. Where ISO has not formally applied a 2 digit code, the following will be used:\n<table><tr><td>Country</td><td>Country Code (2-char)</td></tr>\n<tr><td>Kosovo</td><td>QZ</td></tr></table>\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_country2"
              }
            ]
          },
          "requestedAmountCurrency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_paymentCurrency"
              }
            ]
          }
        }
      },
      "paymentRequest_initiated-2": {
        "required": [
          "paymentRequestId"
        ],
        "type": "object",
        "properties": {
          "debtorId": {
            "description": "<b>Conditional.</b> ID that may be used to uniquely identify the payer within the context of the debtorIdType. While an optional field in certain use cases (determined by product rules outlined here), certain capabilities such as search will be limited based on provided data to ensure data security. For example protecting against MSISDN re-use in mobile telephone markets. As such, Visa strongly recommends using this field.\n\nThe debtorId is not shared with the payee agent. When responding to a Retrieve Request to Pay call, inclusion of the debtorId will be based on the role of the caller.\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pEntityId"
              }
            ]
          },
          "debtorIdType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pIdType"
              }
            ]
          },
          "paymentRequestId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_paymentRequestId"
              }
            ]
          },
          "debtorBusinessName": {
            "description": "<b>Conditional.</b> Name of the business entity to whom refund R2P is requested. This field is applicable only for refund of B2C request.",
            "allOf": [
              {
                "$ref": "#/components/schemas/businessName"
              }
            ]
          },
          "paymentRequestType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_paymentRequestType"
              }
            ]
          },
          "originalPaymentRequestId": {
            "description": "<b>Conditional.</b> Original Payment RequestId is provided in parent transaction by Visa for which refund is requested.This field is applicable only for refund request.",
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_originalPaymentRequestId"
              }
            ]
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/paymentRequestForRetrieve-2"
          }
        ]
      },
      "core_creationDateTime": {
        "type": "string",
        "description": "The creationDateTime field indicates when this message leg was created. It is set by the party that prepares the payload.",
        "format": "date-time",
        "example": "2020-12-17T09:30:47Z"
      },
      "viewBlockResponse": {
        "required": [
          "blockedPayees",
          "creationDateTime",
          "requestMessageId",
          "responseMessageId"
        ],
        "type": "object",
        "properties": {
          "blockedPayees": {
            "minLength": 1,
            "required": [
              "blockedPayeesResponse"
            ],
            "type": "array",
            "description": "Following the view block request from payer/debtor,Visa R2P service will return details of active blocks(only) the payer/debtor had applied on payee in the past.",
            "items": {
              "$ref": "#/components/schemas/blockedPayeesResponse"
            }
          },
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "requestMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_requestMessageId"
              }
            ]
          },
          "responseMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_responseMessageId"
              }
            ]
          }
        }
      },
      "paymentRequest_initiated-1": {
        "required": [
          "paymentRequestId"
        ],
        "type": "object",
        "properties": {
          "debtorId": {
            "description": "<b>Conditional.</b> ID that may be used to uniquely identify the payer within the context of the debtorIdType. While an optional field in certain use cases (determined by product rules outlined here), certain capabilities such as search will be limited based on provided data to ensure data security. For example protecting against MSISDN re-use in mobile telephone markets. As such, Visa strongly recommends using this field.\n\nThe debtorId is not shared with the payee agent. When responding to a Retrieve Request to Pay call, inclusion of the debtorId will be based on the role of the caller.\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pEntityId"
              }
            ]
          },
          "debtorIdType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pIdType"
              }
            ]
          },
          "paymentRequestId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_paymentRequestId"
              }
            ]
          },
          "debtorBusinessName": {
            "description": "<b>Conditional.</b> Name of the business entity to whom refund R2P is requested. This field is applicable only for refund of B2C request.",
            "allOf": [
              {
                "$ref": "#/components/schemas/businessName"
              }
            ]
          },
          "paymentRequestType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_paymentRequestType"
              }
            ]
          },
          "originalPaymentRequestId": {
            "description": "<b>Conditional.</b> Original Payment RequestId is provided in parent transaction by Visa for which refund is requested. This field is applicable only for refund request.",
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_originalPaymentRequestId"
              }
            ]
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/paymentRequestForRetrieve-1"
          }
        ]
      },
      "paymentRequest_initiated": {
        "required": [
          "paymentRequestId"
        ],
        "type": "object",
        "properties": {
          "debtorId": {
            "description": "<b>Conditional.</b> ID that may be used to uniquely identify the payer within the context of the debtorIdType. While an optional field in certain use cases (determined by product rules outlined here), certain capabilities such as search will be limited based on provided data to ensure data security. For example protecting against MSISDN re-use in mobile telephone markets. As such, Visa strongly recommends using this field.\n\nThe debtorId is not shared with the payee agent. When responding to a Retrieve Request to Pay call, inclusion of the debtorId will be based on the role of the caller.\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pEntityId"
              }
            ]
          },
          "debtorIdType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pIdType"
              }
            ]
          },
          "paymentRequestId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_paymentRequestId"
              }
            ]
          },
          "debtorBusinessName": {
            "description": "<b>Conditional.</b> Name of the business entity to whom refund R2P is requested. This field is applicable only for refund of B2C request.",
            "allOf": [
              {
                "$ref": "#/components/schemas/businessName"
              }
            ]
          },
          "paymentRequestType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_paymentRequestType"
              }
            ]
          },
          "originalPaymentRequestId": {
            "description": "<b>Conditional.</b> Original Payment RequestId is provided in parent transaction by Visa for which refund is requested. This field is applicable only for refund request.",
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_originalPaymentRequestId"
              }
            ]
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/paymentRequestForRetrieve"
          }
        ]
      },
      "settlementOptions-1": {
        "maxLength": 1,
        "required": [
          "settlementOption"
        ],
        "type": "array",
        "description": "The list of settlement options contains details of payment mechanisms that can be used by the payer to settle the Request to Pay from the payee. Note that while maxLength is 1, this is specified as an array for future use cases.",
        "items": {
          "$ref": "#/components/schemas/settlementOption-1"
        }
      },
      "notificationR2pRequest": {
        "required": [
          "agentId",
          "creationDateTime",
          "events",
          "requestMessageId"
        ],
        "type": "object",
        "properties": {
          "events": {
            "allOf": [
              {
                "$ref": "#/components/schemas/reminderEvents"
              }
            ]
          },
          "agentId": {
            "description": "Visa identifier for the service provider to whom the notification is sending.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pEntityId"
              }
            ]
          },
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "requestMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_requestMessageId"
              }
            ]
          }
        }
      },
      "dict_paymentCurrency": {
        "maxLength": 3,
        "type": "string",
        "description": "Currency request or payment is denominated in, specified using ISO4217. For domestic transactions the currency is expected to be the local currency for the country.",
        "example": "UAH"
      },
      "refund_paymentAmount": {
        "type": "number",
        "description": "Value that the refund request or refund payment is for. This should be less than or equal to the original Request to Pay settled amount. Note that while this field supports ISO20022 decimal references (12.5), consideration should be given to the supported values in other contexts such as settlement options. For example card payments processed in an ISO8583 environment where values can only support 9.3 formats.",
        "example": 100
      },
      "MessageEvent-1": {
        "type": "object",
        "properties": {
          "creditorAckEmoji": {
            "maxLength": 250,
            "type": "string",
            "description": "This allows the payee to send a single, compliance-approved emoji as an acknowledgement for the payment they received to the payer. Please refer the implementation guide for the list of approved emojis."
          },
          "creditorAckMessage": {
            "maxLength": 250,
            "type": "string",
            "description": "This allows the payee to send a single, pre-approved message as an acknowledgement for the payment they received to the payer. Please refer the implementation guide for the list of approved text messages."
          }
        },
        "description": "This is used to provide the information that need to be tagged to the transaction. Please note: At least one of the following attributes must be present."
      },
      "amendSettlementOptions": {
        "maxLength": 1,
        "type": "array",
        "description": "The list of settlement options contains details of payment mechanisms that can be used by the payer to settle the Request to Pay from the payee. Note that while maxLength is 1, this is specified as an array for future use cases.",
        "items": {
          "$ref": "#/components/schemas/initiateSettlementOption"
        }
      },
      "type-1": {
        "type": "string",
        "description": "National identifier type information. Only PASSPORT type is supported as a valid type.",
        "example": "PASSPORT"
      },
      "creditorForRetrieve": {
        "required": [
          "creditorAgentCountry",
          "creditorAgentId",
          "creditorCountry"
        ],
        "type": "object",
        "properties": {
          "creditorId": {
            "description": "<b>Conditional.</b> ID that may be used to uniquely identify the payee within the context of the creditorIdType (e.g., customer id assigned by service provider). While an optional field in certain use cases (determined by product rules outlined here), certain capabilities such as search will limited based on provided data to ensure data security. For example, protecting against MSISDN re-use in mobile telephone markets.\n<table><tr><td>Product</td><td>Initiate/Refund Request to Visa</td><td>Initiate/Refund Request from Visa</td></tr>\n<tr><td>VD</td><td>Mandatory</td><td>Omitted</td></tr></table>\nAs seen in the table above, the creditorId is not shared with the payer agent. When responding to a Retrieve Request to Pay call, inclusion of the creditorId will be based on the role of the caller.\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pEntityId"
              }
            ]
          },
          "creditorMcc": {
            "description": " <b>Conditional.</b> Merchant Category Code applicable to the creditor for this transaction. Required for a B2C request.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_mcc"
              }
            ]
          },
          "creditorAlias": {
            "description": "<b>Conditional.</b> The alias used to identify and route to the payee. This field may be optional in certain use cases (determined by product rules) for example where routing is driven by creditorId. Where creditorAlias is provided, creditorAliasType must also be provided. The structure and validations of the creditorAlias field are determined by the creditorAliasType value.",
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasKey"
              }
            ]
          },
          "creditorTaxId": {
            "description": "The tax reference applicable to the creditor or registration ID of the business entity in B2C use case. While defined as optional for the Visa API, this field is required where local regulation requires the tax ID to be compliant.",
            "allOf": [
              {
                "$ref": "#/components/schemas/taxId"
              }
            ]
          },
          "creditorIdType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pIdType"
              }
            ]
          },
          "creditorAgentId": {
            "description": "Visa identifier for the payee service provider.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pEntityId"
              }
            ]
          },
          "creditorCountry": {
            "description": "Payees country of residence specified using ISO3166-2. Where ISO has not formally applied a 2 digit code, the following will be used:\n<table><tr><td>Country</td><td>Country Code (2-char)</td></tr>\n<tr><td>Kosovo</td><td>QZ</td></tr></table>\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_country2"
              }
            ]
          },
          "creditorLastName": {
            "description": "<b>Conditional.</b> Mandatory for P2P use case but optional otherwise. The last name of the payee.\n<b>NOTE:</b> This is currently limited to the first letter of the last name followed, optionally, by a dot symbol. e.g. 'S.' rather than Smith.",
            "allOf": [
              {
                "$ref": "#/components/schemas/lastName"
              }
            ]
          },
          "creditorAliasType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasType"
              }
            ]
          },
          "creditorFirstName": {
            "description": "<b>Conditional.</b> Mandatory for P2P use case but optional otherwise. The first name of the payee.",
            "allOf": [
              {
                "$ref": "#/components/schemas/firstName"
              }
            ]
          },
          "nationalIdentifiers": {
            "description": "This field used to hold the national identifier (like a passport number) of a creditor in a B2C use case . While this field is optional in Visa API, it becomes mandatory where local regulation requires to send information about the registration identifier to the Payer while initiating a request to pay. This information is present in the response only if creditor sends the information during request to pay initiation.",
            "allOf": [
              {
                "$ref": "#/components/schemas/nationalIdentifiers"
              }
            ]
          },
          "creditorAgentCountry": {
            "description": "Payee service providers country of business specified using ISO3166-2. Where ISO has not formally applied a 2 digit code, the following will be used:\n<table><tr><td>Country</td><td>Country Code (2-char)</td></tr>\n<tr><td>Kosovo</td><td>QZ</td></tr></table>\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_country2"
              }
            ]
          },
          "creditorBusinessName": {
            "description": "<b>Conditional.</b> Name of the business entity submitting the R2P request for example brand name/doing business as. Required for a B2C request.",
            "allOf": [
              {
                "$ref": "#/components/schemas/businessName"
              }
            ]
          }
        }
      },
      "initiateR2pResponse": {
        "required": [
          "creationDateTime",
          "paymentRequests",
          "requestMessageId",
          "responseMessageId"
        ],
        "type": "object",
        "properties": {
          "paymentRequests": {
            "maxLength": 1,
            "required": [
              "paymentRequestMinResponse"
            ],
            "type": "array",
            "description": "The list of Request to Pay transactions created by the request including current status. Please note:\n* paymentRequestIds must match those provided in the Initiate R2P request.\n* While maxLength is 1, this is specified as an array for future use cases.\n",
            "items": {
              "$ref": "#/components/schemas/paymentRequestMinResponse"
            }
          },
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "requestMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_requestMessageId"
              }
            ]
          },
          "responseMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_responseMessageId"
              }
            ]
          }
        }
      },
      "settlementOptions": {
        "maxLength": 1,
        "required": [
          "settlementOption"
        ],
        "type": "array",
        "description": "The list of settlement options contains details of payment mechanisms that can be used by the payer to settle the Request to Pay from the payee. Note that while maxLength is 1, this is specified as an array for future use cases.",
        "items": {
          "$ref": "#/components/schemas/settlementOption"
        }
      },
      "settlementRecordRetrieve-2": {
        "required": [
          "creditorAccountDetail",
          "settledAmount",
          "settledAmountCurrency",
          "settlementSystem",
          "settlementSystemReferenceId"
        ],
        "type": "object",
        "properties": {
          "message": {
            "maxLength": 250,
            "type": "string",
            "description": "Payee to include a single, compliance approved, message as part of a Request to Pay to a payer."
          },
          "settledAmount": {
            "description": "This is the value the payment is for. Currently it must match the requested amount.\"",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_paymentAmount"
              }
            ]
          },
          "settlementSystem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/confirmSettlementSystem"
              }
            ]
          },
          "debtorAccountDetail": {
            "$ref": "#/components/schemas/accountDetailsRetrieve"
          },
          "creditorAccountDetail": {
            "$ref": "#/components/schemas/creditorAccountDetail"
          },
          "settledAmountCurrency": {
            "description": "Currency that the payment is in, specified using ISO4217. Currently it must match the requested currency.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_paymentCurrency"
              }
            ]
          },
          "settlementSystemReferenceId": {
            "maxLength": 36,
            "type": "string",
            "description": "Reference ID provided by the settlement system that may be used for reconciliation. Visa recommends the following sources of information:\n<table>\n<tr><td><b>settlementSystem</b></td><td><b>Reference ID source</b></td></tr>\n<tr><td>VISA_DIRECT</td><td>RRN</td></tr>\n<tr><td>MASTERCARD</td><td>RRN</td></tr>\n<tr><td>YELLOW_PEPPER</td><td>paymentId</td></tr>\n</table>\n",
            "example": "VIP1234567890"
          },
          "settlementSystemReferenceType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/confirmSettlementSystemReferenceType-2"
              }
            ]
          }
        },
        "description": "Details of a payment received for an associated Request to Pay."
      },
      "settlementRecordRetrieve-1": {
        "required": [
          "creditorAccountDetail",
          "settledAmount",
          "settledAmountCurrency",
          "settlementSystem",
          "settlementSystemReferenceId"
        ],
        "type": "object",
        "properties": {
          "message": {
            "maxLength": 250,
            "type": "string",
            "description": "Allows the payer to include a single, compliance approved, message as part of the payment confirmation to the payee. Please refer the implementation guide for the list of approved text messages."
          },
          "unicodeEmoji": {
            "maxLength": 250,
            "type": "string",
            "description": "Allows the payer to include a single, compliance approved, emoji as part of the payment confirmation to the payee. Please refer the implementation guide for the list of approved emojis."
          },
          "settledAmount": {
            "description": "This is the value the payment is for.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_paymentAmount"
              }
            ]
          },
          "creditorAckEmoji": {
            "maxLength": 250,
            "type": "string",
            "description": "Allows the payee to send a single, compliance-approved emoji as an acknowledgement for the payment they received to the payer. Please refer the implementation guide for the list of approved emojis."
          },
          "settlementSystem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/confirmSettlementSystem-1"
              }
            ]
          },
          "creditorAckMessage": {
            "maxLength": 250,
            "type": "string",
            "description": "Allows the payee to send a single, pre-approved message as an acknowledgement for the payment they received to the payer. Please refer the implementation guide for the list of approved text messages."
          },
          "debtorAccountDetail": {
            "$ref": "#/components/schemas/accountDetailsRetrieve"
          },
          "creditorAccountDetail": {
            "$ref": "#/components/schemas/creditorAccountDetail"
          },
          "settledAmountCurrency": {
            "description": "Currency that the payment is in, specified using ISO4217. Currently it must match the requested currency.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_paymentCurrency"
              }
            ]
          },
          "settlementSystemReferenceId": {
            "maxLength": 36,
            "type": "string",
            "description": "Reference ID provided by the settlement system that may be used for reconciliation.\n",
            "example": "VIP1234567890"
          },
          "settlementSystemReferenceType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/confirmSettlementSystemReferenceType-1"
              }
            ]
          }
        },
        "description": "Details of a payment received for an associated Request to Pay."
      },
      "core_requestMessageId": {
        "maxLength": 35,
        "type": "string",
        "description": "Unique point-to-point ID specified by the API requestor. Included in responses to support request/response reconciliation, the requestMessageId is mapped directly from the inbound request. When an entity sends the API request  to Visa the value is generated by their system; conversely when Visa sends the API request the value is generated by Visa.",
        "example": "GG9983636387737JH"
      },
      "nationalIdentifiers": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/nationalIdentifiersObject"
        }
      },
      "referenceDataRequest-1": {
        "required": [
          "creationDateTime",
          "referenceDataTypes",
          "requestMessageId"
        ],
        "type": "object",
        "properties": {
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "requestMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_requestMessageId"
              }
            ]
          },
          "referenceDataTypes": {
            "type": "array",
            "description": "This field indicates the type of reference data in the request. Valid values include:\n<table><tr><td>Value</td><td>Description</td></tr>\n<tr><td>availableParticipants</td><td>This indicates the request is to get details of active R2P participants</td></tr></table>\n",
            "items": {
              "maxLength": 35,
              "minLength": 1,
              "pattern": "^[A-Za-z0-9-]*$",
              "type": "string"
            }
          }
        }
      },
      "paymentRequest_toVisa": {
        "required": [
          "debtorAgentCountry",
          "debtorCountry",
          "endToEndId",
          "requestedAmount",
          "requestedAmountCurrency"
        ],
        "type": "object",
        "properties": {
          "endToEndId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/endToEndId"
              }
            ]
          },
          "debtorAlias": {
            "description": "<b>Conditional.</b> The alias used to identify and route to the payer. Where debtorAlias is provided, debtorAliasType must also be provided. The structure and validations of the debtorAlias field are determined by the debtorAliasType value. <table><tr><td>Product</td><td>Initiate Request to Visa</td><td>Initiate Request from Visa</td></tr> <tr><td>VD</td><td>Mandatory</td><td>Mandatory</td></tr></table>",
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasKey"
              }
            ]
          },
          "debtorAgentId": {
            "description": "<b>Conditional.</b> Visa identifier for the payer service provider.While this may be omitted by the creditor agent if they have subscribed to in-flight resolution for debtor routing, it will be included by Visa when routing to the debtor agent.If provided by the Creditor Agent then that will be used for R2P routing.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pEntityId"
              }
            ]
          },
          "debtorCountry": {
            "description": "Payers country of residence specified using ISO3166-2. Where ISO has not formally applied a 2 digit code, the following will be used:\n<table><tr><td>Country</td><td>Country Code (2-char)</td></tr>\n<tr><td>Kosovo</td><td>QZ</td></tr></table>\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_country2"
              }
            ]
          },
          "debtorLastName": {
            "description": "The last name of the payer.\n<b>NOTE:</b> This is currently limited to the first letter of the last name followed, optionally, by a dot symbol. e.g. 'S.' rather than Smith.",
            "allOf": [
              {
                "$ref": "#/components/schemas/lastName"
              }
            ]
          },
          "debtorAliasType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasType"
              }
            ]
          },
          "debtorFirstName": {
            "description": "The first name of the payer.",
            "allOf": [
              {
                "$ref": "#/components/schemas/firstName"
              }
            ]
          },
          "requestedAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_paymentAmount"
              }
            ]
          },
          "debtorAgentCountry": {
            "description": "Payer service providers country of business specified using ISO3166-2. Where ISO has not formally applied a 2 digit code, the following will be used:\n<table><tr><td>Country</td><td>Country Code (2-char)</td></tr>\n<tr><td>Kosovo</td><td>QZ</td></tr></table>\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_country2"
              }
            ]
          },
          "requestedAmountCurrency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_paymentCurrency"
              }
            ]
          }
        }
      },
      "requestReason": {
        "type": "object",
        "properties": {
          "message": {
            "maxLength": 250,
            "type": "string",
            "description": "This field allows the payee to include a single message as part of the request to pay to the payer. Please refer the implementation guide for the list of supported pre-defined messages. "
          },
          "references": {
            "maxLength": 10,
            "required": [
              "reference"
            ],
            "type": "array",
            "description": "A list of references send by Payee to be linked to this request.",
            "items": {
              "$ref": "#/components/schemas/referenceBlock"
            }
          },
          "unicodeEmoji": {
            "maxLength": 250,
            "type": "string",
            "description": "This field allows the payee to include a single emoji as part of the request to pay to the payer. Please refer the implementation guide for the list of supported emojis."
          },
          "paymentPurpose": {
            "description": "Regulatory Payment Purpose indicator. The value of this field will be determined by regulatory environment that the creditor and debtor are subject to. Typically these values will be defined by the central bank or other responsible regulator for the creditors country of business. While defined as optional in the Visa API, it will be required where the creditors country legally mandates it.",
            "allOf": [
              {
                "$ref": "#/components/schemas/paymentPurpose"
              }
            ]
          }
        },
        "description": "The requestReason block provides additional information that can be used to support reconciliation and make clear to the payer what the request is for."
      },
      "paymentPurpose-1": {
        "maxLength": 12,
        "type": "string",
        "description": "Regulatory Payment Purpose indicator. The value of this field will be determined by regulatory environment that the creditor and debtor are subject to. Typically these values will be defined by the central bank or other responsibile regulator for the creditors country of business. While defined as optional in the Visa API, it will be required where the creditors country legally mandates it."
      },
      "core_vdp_keyId": {
        "maxLength": 35,
        "type": "string",
        "example": "1234567890-123456"
      },
      "retrieveR2pByEndToEndIdsRequest": {
        "required": [
          "endToEndIds"
        ],
        "type": "object",
        "properties": {
          "agentId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/agentId"
              }
            ]
          },
          "endToEndIds": {
            "allOf": [
              {
                "$ref": "#/components/schemas/endToEndIds"
              }
            ]
          }
        }
      },
      "firstName": {
        "maxLength": 140,
        "type": "string",
        "example": "Alex"
      },
      "amendR2pRequest-3": {
        "required": [
          "creationDateTime",
          "requestMessageId"
        ],
        "type": "object",
        "properties": {
          "dueDate": {
            "description": "Indicates the amended due date the payment request to be settled by. If this is not specified by the payee service provider as part of amend request, original due date will remain unchanged.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_dateStamp"
              }
            ]
          },
          "paymentRequest": {
            "$ref": "#/components/schemas/paymentRequest"
          },
          "requestOptions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/requestOptionsAmend"
              }
            ]
          },
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "requestMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_requestMessageId"
              }
            ]
          }
        }
      },
      "amendR2pRequest-1": {
        "required": [
          "creationDateTime",
          "requestMessageId"
        ],
        "type": "object",
        "properties": {
          "dueDate": {
            "description": "Indicates the amended due date the payment request to be settled by. If this is not specified by the payee service provider as part of amend request, original due date will remain unchanged.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_dateStamp"
              }
            ]
          },
          "requestReason": {
            "type": "object",
            "properties": {
              "message": {
                "maxLength": 250,
                "type": "string",
                "description": "This field allows the payee to include a single, compliance approved, message as part of the request to pay to the payer. Please refer the implementation guide for the list of approved text messages."
              },
              "unicodeEmoji": {
                "maxLength": 250,
                "type": "string",
                "description": "This field allows the payee to include a single, compliance approved, emoji as part of the request to pay to the payer. Please refer the implementation guide for the list of approved emojis."
              }
            },
            "description": "The requestReason block provides additional information to make clear to the payer what the request is for."
          },
          "paymentRequest": {
            "$ref": "#/components/schemas/paymentRequest"
          },
          "requestOptions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/requestOptionsAmend"
              }
            ]
          },
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "requestMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_requestMessageId"
              }
            ]
          }
        }
      },
      "amendR2pRequest-2": {
        "required": [
          "creationDateTime",
          "requestMessageId"
        ],
        "type": "object",
        "properties": {
          "dueDate": {
            "description": "Indicates the amended due date the payment request to be settled by. If this is not specified by the payee service provider as part of amend request, original due date will remain unchanged.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_dateStamp"
              }
            ]
          },
          "paymentRequest": {
            "$ref": "#/components/schemas/paymentRequest"
          },
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "requestMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_requestMessageId"
              }
            ]
          }
        }
      },
      "taxId": {
        "maxLength": 20,
        "type": "string",
        "example": "HMRC1234567890"
      },
      "errorDetails": {
        "required": [
          "field",
          "reason"
        ],
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "description": "The field from the payload related to the described issue.",
            "example": "$.requestMessageId"
          },
          "reason": {
            "type": "string",
            "description": "Additional information on why this field is causing the issue outlined by the error code.",
            "example": "does not match the regex pattern"
          }
        }
      },
      "settlementOption-1": {
        "required": [
          "settlementSystem"
        ],
        "type": "object",
        "properties": {
          "receivingAlias": {
            "description": "Conditional. This field is required when settlementSystem is DEFERRED_TO_ALIAS.Format and length validation are in place.",
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasKey"
              }
            ]
          },
          "settlementSystem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/initiateSettlementSystem"
              }
            ]
          },
          "receivingAliasType": {
            "description": "Conditional. This field is required when receivingAlias is present.This indicates the type of alias provided and thus validation logic and business rules that will be applied to it.Should be supporting EMAIL,MOBL as aliasType.",
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasType"
              }
            ]
          },
          "primaryAccountNumber": {
            "description": "Conditional. Primary Account Number (PAN) payment can be made to for this Request to Pay. For example, the creditors PAN or an agent allowed to receive funds for them. Validations limited to MOD10 checks. If Settlement System is Visa Direct or Mastercard, this field is required.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_primaryAccountNumber"
              }
            ]
          }
        }
      },
      "r2p_blockReferenceId": {
        "maxLength": 255,
        "type": "string",
        "description": "Block Reference Id is the unique identifier of a block",
        "example": "1166859742793422"
      },
      "refundR2pRequest_toVisa-1": {
        "required": [
          "creationDateTime",
          "creditor",
          "paymentRequests",
          "requestMessageId",
          "settlementOptions"
        ],
        "type": "object",
        "properties": {
          "creditor": {
            "$ref": "#/components/schemas/refundCreditor_toVisa"
          },
          "paymentRequests": {
            "maxLength": 1,
            "required": [
              "paymentRequest"
            ],
            "type": "array",
            "description": "A list of payers, and their requested amounts, that Request to Pay transactions should be sent for linked to this request. Note that while maxLength is 1, this is specified as an array for future use cases.",
            "items": {
              "$ref": "#/components/schemas/refundPaymentRequest_toVisa-1"
            }
          },
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "requestMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_requestMessageId"
              }
            ]
          },
          "settlementOptions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/refundSettlementOptions"
              }
            ]
          }
        }
      },
      "referenceValue": {
        "maxLength": 35,
        "type": "string",
        "description": "Indicates the value corresponding to mentioned reference type. Only numeric values allowed now ",
        "example": "1234567890"
      },
      "refundR2pResponse-2": {
        "required": [
          "creationDateTime",
          "paymentRequests",
          "requestMessageId",
          "responseMessageId"
        ],
        "type": "object",
        "properties": {
          "paymentRequests": {
            "maxLength": 1,
            "required": [
              "paymentRequestMinResponse"
            ],
            "type": "array",
            "description": "The list of Request to Pay transactions created by the request including current status. Note that while maxLength is 1, this is specified as an array for future use cases.",
            "items": {
              "$ref": "#/components/schemas/paymentRequestMinResponse-2"
            }
          },
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "requestMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_requestMessageId"
              }
            ]
          },
          "responseMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_responseMessageId"
              }
            ]
          }
        }
      },
      "reminderEventObject": {
        "required": [
          "eventType",
          "paymentRequestId"
        ],
        "type": "object",
        "properties": {
          "eventType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/reminderEventType"
              }
            ]
          },
          "paymentRequestId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_paymentRequestId"
              }
            ]
          }
        }
      },
      "refundR2pResponse-1": {
        "required": [
          "creationDateTime",
          "paymentRequests",
          "requestMessageId",
          "responseMessageId"
        ],
        "type": "object",
        "properties": {
          "paymentRequests": {
            "maxLength": 1,
            "required": [
              "paymentRequestMinResponse"
            ],
            "type": "array",
            "description": "The list of Request to Pay transactions created by the request including current status. Note that while maxLength is 1, this is specified as an array for future use cases.",
            "items": {
              "$ref": "#/components/schemas/paymentRequestMinResponse-1"
            }
          },
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "requestMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_requestMessageId"
              }
            ]
          },
          "responseMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_responseMessageId"
              }
            ]
          }
        }
      },
      "r2p_originalPaymentRequestId": {
        "maxLength": 35,
        "type": "string",
        "description": "Visa generated transaction ID for the original R2P transaction. Note that while this field supports up to 35 characters, Request to Pay IDs generated by Visa are 21 characters long.",
        "example": "RFP01314"
      },
      "errorResponse": {
        "required": [
          "code",
          "creationDateTime",
          "message",
          "requestMessageId",
          "responseMessageId"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 6,
            "type": "string",
            "description": "Coded reason group this error response is considered part of.\n<table><tr><td>Value</td><td>Description</td></tr>\n<tr><td>RC1xxx</td><td>RC1xxx codes indicate an invalid request. Typically a syntactical issue with the API request such as a missing mandatory field incorrect field formatting.</td></tr>\n<tr><td>RC2xxx</td><td>RC2xxxx codes indicate a business validation failure. Typically, the request is syntactically correct but the request does not meet the business rules configured. For example, the debtor last name does not meet country specific validations.</td></tr>\n<tr><td>RC3xxx</td><td>RC3xxx codes indicate an authorisation failure. The request may be syntactically correct and meet the necessary business rules but breaches an additional control or configuration in place. i.e., The request is valid but not allowed at this time. Examples of reasons for this error include attempting to retrieve R2P details unrelated to the entity calling the retrieve request to pay API or submitting a B2C request when only configured for P2P requests.</td></tr>\n<tr><td>RC3001</td><td>Authorisation failure: The request is syntactically correct but cannot be accepted by Visa at this time as a result of an active block control.</td></tr>\n<tr><td>RC3002</td><td>Authorisation failure: The request is syntactically correct but cannot be accepted by Visa at this time as a result of velocity/frequency control.</td></tr>\n<tr><td>RC4xxx</td><td>RC4xxx codes indicate an entity in the request to pay transaction is unknown. The request involves an entity that is not known or cannot be resolved. For example, the mobile number given to route the R2P to is not known to the organisation with responsibility for resolving the number to a debtor - whether that be Visa or another organisation depending on the service configuration and request to pay transaction.</td></tr>\n<tr><td>RC5xxx</td><td>Server Errors. May be seen as a result of errors internal to the processing system.</td></tr></table>\n",
            "example": "RC1000"
          },
          "details": {
            "required": [
              "errorDetails"
            ],
            "type": "array",
            "description": "Additional details on specific fields that triggered the error response where relevant.",
            "items": {
              "$ref": "#/components/schemas/errorDetails"
            }
          },
          "message": {
            "type": "string",
            "example": "Data in the request is missing or invalid"
          },
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "requestMessageId": {
            "description": "The requestMessageId mapped across from the callers request. Note that where Visa cannot process a request sufficiently to obtain a requestMessageId, this field will be populated with using a Visa generated Id prefixed with ERR.",
            "allOf": [
              {
                "$ref": "#/components/schemas/core_requestMessageId"
              }
            ]
          },
          "responseMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_responseMessageId"
              }
            ]
          }
        }
      },
      "r2p_cancellationReason": {
        "maxLength": 10,
        "type": "string",
        "description": "Coded cancellation reason information for a transaction status update. Valid values are:\n<table>\n<tr><td><strong><u>Value</u></strong></td><td><strong><u>Description</u></strong></td></tr>\n<tr><td>ERRAMT</td><td>Incorrect amount requested.</td></tr>\n<tr><td>ERRDRINFO</td><td>Incorrect debtor information on for the Request to Pay.</td></tr>\n<tr><td>PAID</td><td>Already Paid/Paid via alternate route.</td></tr>\n<tr><td>DRTP</td><td>Duplicate request.</td></tr>\n<tr><td>ERR</td><td>Erroneous request.</td></tr>\n<tr><td>SVNR</td><td>Services not rendered.</td></tr>\n<tr><td>FRAUD</td><td>Fraud</td></tr>\n<tr><td>OTHR</td><td>Other</td></tr>\n</table>\n",
        "example": "ERRAMT"
      },
      "refundR2pRequest_toVisa": {
        "required": [
          "creationDateTime",
          "creditor",
          "paymentRequests",
          "requestMessageId",
          "settlementOptions"
        ],
        "type": "object",
        "properties": {
          "creditor": {
            "$ref": "#/components/schemas/refundCreditor_toVisa"
          },
          "paymentRequests": {
            "maxLength": 1,
            "required": [
              "paymentRequest"
            ],
            "type": "array",
            "description": "A list of payers, and their requested amounts, that Request to Pay transactions should be sent for linked to this request. Note that while maxLength is 1, this is specified as an array for future use cases.",
            "items": {
              "$ref": "#/components/schemas/refundPaymentRequest_toVisa"
            }
          },
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "requestMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_requestMessageId"
              }
            ]
          },
          "settlementOptions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/refundSettlementOptions"
              }
            ]
          }
        }
      },
      "accountDetails-1": {
        "type": "object",
        "properties": {
          "primaryAccountNumber": {
            "description": "Primary Account Number (PAN) for a card credential. Note that this may be masked by Visa in certain scenarios.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_primaryAccountNumber"
              }
            ]
          }
        },
        "description": "Account details used by the related party for this payment. Note that the enforcement of fields here is dependent on the settlementSystem. For example, when selecting VISA_DIRECT as the settlementSystem for the payment, primaryAccountNumber is required."
      },
      "initiateR2pResponse-1": {
        "required": [
          "creationDateTime",
          "paymentRequests",
          "requestMessageId",
          "responseMessageId"
        ],
        "type": "object",
        "properties": {
          "paymentRequests": {
            "maxLength": 1,
            "required": [
              "paymentRequestMinResponse"
            ],
            "type": "array",
            "description": "The list of Request to Pay transactions created by the request including current status. Please note:\n* paymentRequestIds must match those provided in the Initiate R2P request.\n* While maxLength is 1, this is specified as an array for future use cases.\n",
            "items": {
              "$ref": "#/components/schemas/paymentRequestMinResponse-1"
            }
          },
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "requestMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_requestMessageId"
              }
            ]
          },
          "responseMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_responseMessageId"
              }
            ]
          }
        }
      },
      "initiateR2pResponse-2": {
        "required": [
          "creationDateTime",
          "paymentRequests",
          "requestMessageId",
          "responseMessageId"
        ],
        "type": "object",
        "properties": {
          "paymentRequests": {
            "maxLength": 1,
            "required": [
              "paymentRequestMinResponse"
            ],
            "type": "array",
            "description": "The list of Request to Pay transactions created by the request including current status. Please note:\n* paymentRequestIds must match those provided in the Initiate R2P request.\n* While maxLength is 1, this is specified as an array for future use cases.\n",
            "items": {
              "$ref": "#/components/schemas/paymentRequestMinResponse-2"
            }
          },
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "requestMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_requestMessageId"
              }
            ]
          },
          "responseMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_responseMessageId"
              }
            ]
          }
        }
      },
      "r2p_paymentRequestType": {
        "maxLength": 35,
        "type": "string",
        "description": "<b>Conditional.</b> Specifies if the R2P is of type Refund and this is applicable only for Refund request.",
        "example": "REFUND"
      },
      "accountDetails": {
        "type": "object",
        "properties": {
          "debtorTaxId": {
            "description": "The tax reference applicable to the debtor. While defined as optional for the Visa API, this field is required where local regulation requires the tax ID to be compliant. This is applicable only for B2C use case.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_debtorTaxId"
              }
            ]
          },
          "primaryAccountNumber": {
            "description": "Primary Account Number (PAN) for a card credential. Note that this may be masked by Visa in certain scenarios.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_primaryAccountNumber"
              }
            ]
          }
        },
        "description": "Account details used by the related party for this payment. Note that the enforcement of fields here is dependent on the settlementSystem. For example, when selecting VISA_DIRECT as the settlementSystem for the payment, primaryAccountNumber is required. Parameter debtorTaxId is optional."
      },
      "aliasType": {
        "type": "string",
        "description": "This indicates the type of alias provided and thus validation logic and business rules that will be applied to it. The alias type must be provided in all cases an alias key is provided. Valid values are:\n<table><tr><td>Value</td><td>Description</td><td>Validations and rules</td></tr>\n<tr><td>MOBL</td><td>Mobile phone number</td><td>ITU-T E.164 number structure. A \"+\" is required in the mobile number</td></tr>\n<tr><td>EMAIL</td><td>Email address</td><td>RFC 5322 email address structure</td></tr></table>\nNote : 'MOBL' is only supported alias type in CIS/CEMEA region.\n",
        "example": "MOBL"
      },
      "settlementRecord-3": {
        "required": [
          "creditorAccountDetail",
          "settledAmount",
          "settledAmountCurrency",
          "settlementSystem",
          "settlementSystemReferenceId"
        ],
        "type": "object",
        "properties": {
          "settledAmount": {
            "description": "This is the value the payment is for. Currently it must match the requested amount.\"",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_paymentAmount"
              }
            ]
          },
          "settlementSystem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/confirmSettlementSystem"
              }
            ]
          },
          "debtorAccountDetail": {
            "$ref": "#/components/schemas/accountDetails"
          },
          "creditorAccountDetail": {
            "$ref": "#/components/schemas/creditorAccountDetail"
          },
          "settledAmountCurrency": {
            "description": "Currency that the payment is in, specified using ISO4217. Currently it must match the requested currency.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_paymentCurrency"
              }
            ]
          },
          "settlementSystemReferenceId": {
            "maxLength": 36,
            "type": "string",
            "description": "Reference ID provided by the settlement system that may be used for reconciliation. Visa recommends the following sources of information:\n<table>\n<tr><td><b>settlementSystem</b></td><td><b>Reference ID source</b></td></tr>\n<tr><td>VISA_DIRECT</td><td>RRN</td></tr>\n<tr><td>MASTERCARD</td><td>RRN</td></tr>\n<tr><td>YELLOW_PEPPER</td><td>paymentId</td></tr>\n</table>\n",
            "example": "VIP1234567890"
          },
          "settlementSystemReferenceType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/confirmSettlementSystemReferenceType-2"
              }
            ]
          }
        },
        "description": "Details of a payment received for an associated Request to Pay."
      },
      "settlementRecord": {
        "required": [
          "creditorAccountDetail",
          "settledAmount",
          "settledAmountCurrency",
          "settlementSystem",
          "settlementSystemReferenceId"
        ],
        "type": "object",
        "properties": {
          "message": {
            "maxLength": 250,
            "type": "string",
            "description": "Optional; This field allows the payer to include a single message as part of the payment confirmation to the payee. Please refer the implementation guide for the list of supported pre-defined messages."
          },
          "unicodeEmoji": {
            "maxLength": 250,
            "type": "string",
            "description": "Optional; This field allows the payer to include a single emoji as part of the payment confirmation to the payee. Please refer the implementation guide for the list of supported emojis."
          },
          "settledAmount": {
            "description": "This is the value the payment is for. It must match the requested amount if the transaction status is ACSC in the Confirm R2P call to Visa.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_paymentAmount"
              }
            ]
          },
          "settlementSystem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/confirmSettlementSystem"
              }
            ]
          },
          "debtorAccountDetail": {
            "$ref": "#/components/schemas/accountDetails"
          },
          "creditorAccountDetail": {
            "$ref": "#/components/schemas/creditorAccountDetail"
          },
          "settledAmountCurrency": {
            "description": "Currency that the payment is in, specified using ISO4217. Currently it must match the requested currency.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_paymentCurrency"
              }
            ]
          },
          "settlementSystemReferenceId": {
            "maxLength": 36,
            "type": "string",
            "description": "Reference ID provided by the settlement system that may be used for reconciliation. \n",
            "example": "VIP1234567890"
          },
          "settlementSystemReferenceType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/confirmSettlementSystemReferenceType"
              }
            ]
          }
        },
        "description": "Details of a payment received for an associated Request to Pay."
      },
      "refundR2pResponse": {
        "required": [
          "creationDateTime",
          "paymentRequests",
          "requestMessageId",
          "responseMessageId"
        ],
        "type": "object",
        "properties": {
          "paymentRequests": {
            "maxLength": 1,
            "required": [
              "paymentRequestMinResponse"
            ],
            "type": "array",
            "description": "The list of Request to Pay transactions created by the request including current status. Note that while maxLength is 1, this is specified as an array for future use cases.",
            "items": {
              "$ref": "#/components/schemas/paymentRequestMinResponse"
            }
          },
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "requestMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_requestMessageId"
              }
            ]
          },
          "responseMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_responseMessageId"
              }
            ]
          }
        }
      },
      "referenceDataResponse": {
        "required": [
          "availableParticipants",
          "creationDateTime",
          "requestMessageId",
          "responseMessageId"
        ],
        "type": "object",
        "properties": {
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "requestMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_requestMessageId"
              }
            ]
          },
          "responseMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_responseMessageId"
              }
            ]
          },
          "availableParticipants": {
            "type": "array",
            "description": "List of active R2P participants.",
            "items": {
              "type": "object",
              "properties": {
                "participantId": {
                  "maxLength": 35,
                  "minLength": 1,
                  "type": "string",
                  "description": "Visa identifier for the service provider."
                },
                "participantName": {
                  "maxLength": 35,
                  "minLength": 1,
                  "type": "string",
                  "description": "Name of the service provider as registered within R2P program."
                },
                "supportedFeatures": {
                  "type": "array",
                  "description": "This enumerates the features that the respective participant (i.e., participantId) supports. Currently supported value is 'REMINDER'. Missing field means no supported features from the list.",
                  "items": {
                    "maxLength": 35,
                    "minLength": 1,
                    "type": "string",
                    "example": "REMINDER"
                  }
                }
              }
            }
          }
        }
      },
      "settlementRecord-1": {
        "required": [
          "creditorAccountDetail",
          "settledAmount",
          "settledAmountCurrency",
          "settlementSystem",
          "settlementSystemReferenceId"
        ],
        "type": "object",
        "properties": {
          "message": {
            "maxLength": 250,
            "type": "string",
            "description": "Optional; This field allows the payer to include a single, compliance approved, message as part of the payment confirmation to the payee. Please refer the implementation guide for the list of approved text messages."
          },
          "unicodeEmoji": {
            "maxLength": 250,
            "type": "string",
            "description": "Optional; This field allows the payer to include a single, compliance approved, emoji as part of the payment confirmation to the payee. Please refer the implementation guide for the list of approved emojis."
          },
          "settledAmount": {
            "description": "This is the value the payment is for. It must match the requested amount if the transaction status is ACSC in the Confirm R2P call to Visa.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_paymentAmount"
              }
            ]
          },
          "settlementSystem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/confirmSettlementSystem-1"
              }
            ]
          },
          "debtorAccountDetail": {
            "$ref": "#/components/schemas/accountDetails"
          },
          "creditorAccountDetail": {
            "$ref": "#/components/schemas/creditorAccountDetail"
          },
          "settledAmountCurrency": {
            "description": "Currency that the payment is in, specified using ISO4217. Currently it must match the requested currency.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_paymentCurrency"
              }
            ]
          },
          "settlementSystemReferenceId": {
            "maxLength": 36,
            "type": "string",
            "description": "Reference ID provided by the settlement system that may be used for reconciliation.\n",
            "example": "VIP1234567890"
          },
          "settlementSystemReferenceType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/confirmSettlementSystemReferenceType-1"
              }
            ]
          }
        },
        "description": "Details of a payment received for an associated Request to Pay."
      },
      "settlementRecord-2": {
        "required": [
          "creditorAccountDetail",
          "settledAmount",
          "settledAmountCurrency",
          "settlementSystem",
          "settlementSystemReferenceId"
        ],
        "type": "object",
        "properties": {
          "settledAmount": {
            "description": "This is the value the payment is for. Currently it must match the requested amount.\"",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_paymentAmount"
              }
            ]
          },
          "settlementSystem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/confirmSettlementSystem-2"
              }
            ]
          },
          "debtorAccountDetail": {
            "$ref": "#/components/schemas/accountDetails-1"
          },
          "creditorAccountDetail": {
            "$ref": "#/components/schemas/creditorAccountDetail-1"
          },
          "settledAmountCurrency": {
            "description": "Currency that the payment is in, specified using ISO4217. Currently it must match the requested currency.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_paymentCurrency"
              }
            ]
          },
          "settlementSystemReferenceId": {
            "maxLength": 36,
            "type": "string",
            "description": "Reference ID provided by the settlement system that may be used for reconciliation. Visa recommends the following sources of information:\n<table>\n<tr><td><b>settlementSystem</b></td><td><b>Reference ID source</b></td></tr>\n<tr><td>VISA_DIRECT</td><td>RRN</td></tr>\n<tr><td>MASTERCARD</td><td>RRN</td></tr>\n<tr><td>YELLOW_PEPPER</td><td>paymentId</td></tr>\n</table>\n",
            "example": "VIP1234567890"
          }
        },
        "description": "Details of a payment received for an associated Request to Pay."
      },
      "type": {
        "type": "string",
        "description": "This indicates the type of National Identifier provided. Currently the valid value is 'PASSPORT'.",
        "example": "PASSPORT"
      },
      "endToEndId": {
        "maxLength": 35,
        "type": "string",
        "description": "A transaction ID, unique to the creditorAgent, that may be used independently of Visa IDs (i.e paymentRequestId) to identify the transaction between payee and payer service providers. Note that this value is set by the entity that submits the Initiate Request to Pay to Visa and we cannot determine who in the chain between the end user and Visa set this value.",
        "example": "RFPid0001"
      },
      "paymentRequestForRetrieve": {
        "required": [
          "debtorAgentCountry",
          "debtorAgentId",
          "debtorCountry",
          "endToEndId",
          "requestedAmount",
          "requestedAmountCurrency"
        ],
        "type": "object",
        "properties": {
          "endToEndId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/endToEndId"
              }
            ]
          },
          "debtorAlias": {
            "description": "<b>Conditional.</b> The alias used to identify and route to the payer. Where debtorAlias is provided, debtorAliasType must also be provided. The structure and validations of the debtorAlias field are determined by the debtorAliasType value. <table><tr><td>Product</td><td>Initiate Request to Visa</td><td>Initiate Request from Visa</td></tr> <tr><td>VD</td><td>Mandatory</td><td>Mandatory</td></tr></table>",
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasKey"
              }
            ]
          },
          "debtorAgentId": {
            "description": "Visa identifier for the payer service provider.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pEntityId"
              }
            ]
          },
          "debtorCountry": {
            "description": "Payers country of residence specified using ISO3166-2. Where ISO has not formally applied a 2 digit code, the following will be used:\n<table><tr><td>Country</td><td>Country Code (2-char)</td></tr>\n<tr><td>Kosovo</td><td>QZ</td></tr></table>\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_country2"
              }
            ]
          },
          "acceptedAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_paymentAmount"
              }
            ]
          },
          "debtorLastName": {
            "description": "The last name of the payer.\n<b>NOTE:</b> This is currently limited to the first letter of the last name followed, optionally, by a dot symbol. e.g. 'S.' rather than Smith.",
            "allOf": [
              {
                "$ref": "#/components/schemas/lastName"
              }
            ]
          },
          "debtorAliasType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasType"
              }
            ]
          },
          "debtorFirstName": {
            "description": "The first name of the payer.</b>",
            "allOf": [
              {
                "$ref": "#/components/schemas/firstName"
              }
            ]
          },
          "requestedAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_paymentAmount"
              }
            ]
          },
          "debtorAgentCountry": {
            "description": "Payer service providers country of business specified using ISO3166-2. Where ISO has not formally applied a 2 digit code, the following will be used:\n<table><tr><td>Country</td><td>Country Code (2-char)</td></tr>\n<tr><td>Kosovo</td><td>QZ</td></tr></table>\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_country2"
              }
            ]
          },
          "acceptedAmountCurrency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_paymentCurrency"
              }
            ]
          },
          "requestedAmountCurrency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_paymentCurrency"
              }
            ]
          }
        }
      },
      "r2p_statusReason-1": {
        "maxLength": 4,
        "type": "string",
        "description": "Additional coded reason information for a transaction status update. Valid values are:\n<table><tr><td>Value</td><td>Description</td></tr>\n<tr><td colspan=2>PDNG statusReason codes</td></tr>\n<tr><td>PD01</td><td>Set by Visa when the Request to Pay has been accepted by Visa but not delivered to the debtor agent or their processor.</td></tr>\n<tr><td>PD02</td><td>Set by Visa when the Request to Pay has been delivered to the debtor agent or their processor.</td></tr>\n<tr><td>PD03</td><td>Sent by the debtor agent (or their processor) when the Request to Pay has been delivered to the debtor.</td></tr>\n<tr><td>PD04</td><td>Sent by the debtor agent (or their processor) to confirm that the debtor has seen or interacted with the Request to Pay.</td></tr>\n<tr><td colspan=2>RJCT statusReason codes</td></tr>\n<tr><td>RJ01</td><td>The payer could not be reached using the provided routing information.</td></tr>\n<tr><td>RJ02</td><td>The payer has rejected the Request to Pay.</td></tr>\n<tr><td>RJ03</td><td>The Request to Pay is being rejected as a result of a block control.</td></tr>\n<tr><td colspan=2>ACSC statusReason codes</td></tr>\n<tr><td>AS01</td><td>Set by Visa when the Request to Pay has been accepted by the payer and payment has been confirmed as made. </td></tr>\n<tr><td colspan=2>ACCP statusReason codes</td></tr>\n<tr><td>AC02</td><td>Set by Visa when the Request to Pay has been accepted by the payer and partial payment has been confirmed as made. </td></tr>\n<tr><td colspan=2>CNCL statusReason codes</td></tr>\n<tr><td>CN01</td><td>Set by Visa when the Request to Pay has been cancelled by the payee.</td></tr></table>\n",
        "example": "RJ02"
      },
      "r2p_statusReason-2": {
        "maxLength": 4,
        "type": "string",
        "description": "Additional coded reason information for a transaction status update. Valid values are:\n<table><tr><td>Value</td><td>Description</td></tr>\n<tr><td colspan=2>PDNG statusReason codes</td></tr>\n<tr><td>PD01</td><td>Set by Visa when the Request to Pay has been accepted by Visa but not delivered to the debtor agent or their processor.</td></tr>\n<tr><td>PD02</td><td>Set by Visa when the Request to Pay has been delivered to the debtor agent or their processor.</td></tr>\n<tr><td>PD03</td><td>Sent by the debtor agent (or their processor) when the Request to Pay has been delivered to the debtor.</td></tr>\n<tr><td>PD04</td><td>Sent by the debtor agent (or their processor) to confirm that the debtor has seen or interacted with the Request to Pay.</td></tr>\n<tr><td colspan=2>RJCT statusReason codes</td></tr>\n<tr><td>RJ01</td><td>The payer could not be reached using the provided routing information.</td></tr>\n<tr><td>RJ02</td><td>The payer has rejected the Request to Pay.</td></tr>\n<tr><td>RJ03</td><td>The Request to Pay is being rejected as a result of a block control.</td></tr>\n<tr><td colspan=2>ACSC statusReason codes</td></tr>\n<tr><td>AS01</td><td>Set by Visa when the Request to Pay has been accepted by the payer and payment has been confirmed as made. </td></tr>\n<tr><td colspan=2>CNCL statusReason codes</td></tr>\n<tr><td>CN01</td><td>Set by Visa when the Request to Pay has been cancelled by the payee.</td></tr></table>\n",
        "example": "RJ02"
      },
      "core_vdp_contentType": {
        "maxLength": 35,
        "type": "string",
        "example": "application/json"
      },
      "requestOptionsAmend": {
        "type": "object",
        "properties": {
          "reminderSchedule": {
            "maxLength": 10,
            "type": "array",
            "description": "This enables payees to set automated reminders for a request to pay. Currently maximum of 3 reminders, 1 per day can be scheduled. Reminders can be scheduled via Initiate or Amend API. Through the Amend API, the payee can modify or remove future scheduled reminders. However, reminders that have already been sent cannot be changed or removed during amendment. Given future reminders associated with a request, blank reminder list will result in the deletion of all reminders linked to the respective request.",
            "example": [
              "2023-05-30T09:30:47Z",
              "2023-06-11T11:22:33Z",
              "2023-07-11T11:22:33Z"
            ],
            "items": {
              "maxLength": 255,
              "pattern": "YYYY-MM-DDTHH:mm:ssZ",
              "type": "string",
              "format": "date-time",
              "example": "2017-07-21T17:32:28Z"
            }
          }
        },
        "description": "Optional field for B2C/P2P use case. This field serves as an indicator for different preferences associated with the payee. At present, it is utilized to facilitate the feature of scheduling reminders."
      },
      "TaggedTransaction-1": {
        "required": [
          "transactionId",
          "transactionIdType"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/transactionId"
              }
            ]
          },
          "transactionIdType": {
            "type": "string",
            "description": "The type of transaction the emoji/message is being tagged to. Valid values include:\n<table><tr><td>Value</td><td>Description</td></tr>\n<tr><td>R2P</td><td>Request to Pay transaction</td></tr>\n</table>\n",
            "example": "R2P"
          },
          "settlementSystemReferenceId": {
            "maxLength": 36,
            "type": "string",
            "description": "Reference ID provided by the settlement system that may be used for reconciliation.\n",
            "example": "VIP1234567890"
          },
          "settlmentSystemReferenceType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/confirmSettlementSystemReferenceType-1"
              }
            ]
          }
        }
      },
      "value-1": {
        "maxLength": 50,
        "minLength": 1,
        "type": "string",
        "description": "Creditor's national identifier value information. Right now only PASSPORT information is supported.",
        "example": "LB44889298222"
      },
      "r2p_refund_useCase": {
        "maxLength": 6,
        "type": "string",
        "description": "The useCase field sets the use case that the Refund Request to Pay is for, and combined with the product, drives specific business rules and validations for the transaction. Valid values are:\n<table><tr><td>Value</td><td>Description</td></tr>\n<tr><td>B2C</td><td>A Refund request sent from consumer to a business against a previously settled B2C request.</td></tr></table>\n",
        "example": "B2C"
      },
      "cancelR2pRequest": {
        "required": [
          "cancellationReason",
          "creationDateTime",
          "requestMessageId"
        ],
        "type": "object",
        "properties": {
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "requestMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_requestMessageId"
              }
            ]
          },
          "cancellationReason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_cancellationReason"
              }
            ]
          }
        }
      },
      "creditorAccountDetail": {
        "type": "object",
        "properties": {
          "receivingAlias": {
            "description": "Conditional. This field is required when  settlementOptions[].settlementSystem is DEFERRED_TO_ALIAS in Initiate R2P Request. Format and length validation are in place.",
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasKey"
              }
            ]
          },
          "receivingAliasType": {
            "description": "Conditional. This field is required when receivingAlias is present. This indicates the type of alias provided and thus validation logic and business rules that will be applied to it. Should be supporting EMAIL,MOBL as aliasType.",
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasType"
              }
            ]
          },
          "primaryAccountNumber": {
            "description": "Primary Account Number (PAN) for a card credential. This is optional when settlementOptions[].settlementSystem is DEFERRED_TO_ALIAS in Initiate or settlementDetails[].settlementSystem is YELLOW_PEPPER in Confirm. Note that this may be masked by Visa in certain scenarios.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_primaryAccountNumber"
              }
            ]
          }
        },
        "description": "Account details used by the related party for this payment. Note that the enforcement of fields here is dependent on the settlementSystem."
      },
      "referenceBlock": {
        "required": [
          "referenceType",
          "referenceValue"
        ],
        "type": "object",
        "properties": {
          "referenceDate": {
            "description": "Indicates the date relevant for the mentioned references",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_dateStamp"
              }
            ]
          },
          "referenceType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/referenceType"
              }
            ]
          },
          "referenceValue": {
            "allOf": [
              {
                "$ref": "#/components/schemas/referenceValue"
              }
            ]
          }
        }
      },
      "paymentRequestIds": {
        "maxItems": 10,
        "type": "array",
        "description": "Visa generated transaction ID for this Request to Pay. Note that while this field supports up to 35 characters, Request to Pay IDs generated by Visa are 21 characters long.",
        "example": [
          "RFP01314",
          "RFP01315"
        ],
        "items": {
          "maxLength": 35,
          "type": "string"
        }
      },
      "creditor-2": {
        "required": [
          "creditorAgentCountry",
          "creditorAgentId",
          "creditorCountry"
        ],
        "type": "object",
        "properties": {
          "creditorId": {
            "description": "<b>Conditional.</b> ID that may be used to uniquely identify the payee within the context of the creditorIdType (e.g., customer id assigned by service provider). While an optional field in certain use cases (determined by product rules outlined here), certain capabilities such as search will limited based on provided data to ensure data security. For example, protecting against MSISDN re-use in mobile telephone markets or payee having multiple telephone numbers.\n<table><tr><td>Product</td><td>Initiate Request to Visa</td><td>Initiate Request from Visa</td></tr>\n<tr><td>VD</td><td>Mandatory</td><td>Omitted</td></tr></table>\nAs seen in the table above, the creditorId is not shared with the payer agent. When responding to a Retrieve Request to Pay call, inclusion of the creditorId will be based on the role of the caller.\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pEntityId"
              }
            ]
          },
          "creditorMcc": {
            "description": "<b>Conditional.</b> Merchant Category Code applicable to the creditor for this transaction. Applicable for the B2C use case.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_mcc"
              }
            ]
          },
          "creditorAlias": {
            "description": "<b>Conditional.</b> The alias used to identify and route to the payee. This field may be optional in certain use cases (determined by product rules) for example where routing is driven by creditorId. Where creditorAlias is provided, creditorAliasType must also be provided. The structure and valiations of the creditorAlias field are determined by the creditorAliasType value.",
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasKey"
              }
            ]
          },
          "creditorTaxId": {
            "description": "The tax reference applicable to the creditor. While defined as optional for the Visa API, this field is required where local regulation requires the tax ID to be compliant.",
            "allOf": [
              {
                "$ref": "#/components/schemas/taxId"
              }
            ]
          },
          "creditorIdType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pIdType"
              }
            ]
          },
          "creditorAgentId": {
            "description": "Visa identifier for the payee service provider.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pEntityId"
              }
            ]
          },
          "creditorCountry": {
            "description": "Payees country of residence specified using ISO3166-2. Where ISO has not formally applied a 2 digit code, the following will be used:\n<table><tr><td>Country</td><td>Country Code (2-char)</td></tr>\n<tr><td>Kosovo</td><td>QZ</td></tr></table>\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_country2"
              }
            ]
          },
          "creditorLastName": {
            "description": "<b>Conditional. Mandatory for P2P use case but optional for B2C</b>.The last name of the payee.\n<b>NOTE:</b> This is currently limited to the first letter of the last name followed, optionally, by a dot symbol. e.g. 'S.' rather than Smith.",
            "allOf": [
              {
                "$ref": "#/components/schemas/lastName"
              }
            ]
          },
          "creditorAliasType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasType"
              }
            ]
          },
          "creditorFirstName": {
            "description": "<b>Conditional. Mandatory for P2P use case but optional for B2C</b> .The first name of the payee.",
            "allOf": [
              {
                "$ref": "#/components/schemas/firstName"
              }
            ]
          },
          "creditorAgentCountry": {
            "description": "Payee service providers country of business specified using ISO3166-2. Where ISO has not formally applied a 2 digit code, the following will be used:\n<table><tr><td>Country</td><td>Country Code (2-char)</td></tr>\n<tr><td>Kosovo</td><td>QZ</td></tr></table>\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_country2"
              }
            ]
          },
          "creditorBusinessName": {
            "description": "<b>Conditional.</b> Name of the business entity submitting the R2P request for example brand name/doing business as. Required for a B2C request.",
            "allOf": [
              {
                "$ref": "#/components/schemas/businessName"
              }
            ]
          }
        }
      },
      "r2p_refund_useCase-1": {
        "maxLength": 6,
        "type": "string",
        "description": "The useCase field sets the use case that the Refund Request to Pay is for, and combined with the product, drives specific business rules and validations for the transaction. Valid values are:\n<table><tr><td>Value</td><td>Description</td></tr>\n<tr><td>B2C</td><td>A Refund request sent from consumer to a business against a previously settled B2C request.</td></tr></table>    \n",
        "example": "B2C"
      },
      "creditor-1": {
        "required": [
          "creditorAgentCountry",
          "creditorAgentId",
          "creditorCountry"
        ],
        "type": "object",
        "properties": {
          "creditorId": {
            "description": "<b>Conditional.</b> ID that may be used to uniquely identify the payee within the context of the creditorIdType (e.g., customer id assigned by service provider). While an optional field in certain use cases (determined by product rules outlined here), certain capabilities such as search will limited based on provided data to ensure data security. For example, protecting against MSISDN re-use in mobile telephone markets or payee having multiple telephone numbers.\n<table><tr><td>Product</td><td>Initiate Request to Visa</td><td>Initiate Request from Visa</td></tr>\n<tr><td>VD</td><td>Mandatory</td><td>Omitted</td></tr></table>\nAs seen in the table above, the creditorId is not shared with the payer agent. When responding to a Retrieve Request to Pay call, inclusion of the creditorId will be based on the role of the caller.\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pEntityId"
              }
            ]
          },
          "creditorMcc": {
            "description": "<b>Conditional.</b> Merchant Category Code applicable to the creditor for this transaction. Applicable for the B2C use case.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_mcc"
              }
            ]
          },
          "creditorAlias": {
            "description": "<b>Conditional.</b> The alias used to identify and route to the payee. This field may be optional in certain use cases (determined by product rules) for example where routing is driven by creditorId. Where creditorAlias is provided, creditorAliasType must also be provided. The structure and validations of the creditorAlias field are determined by the creditorAliasType value.",
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasKey"
              }
            ]
          },
          "creditorTaxId": {
            "description": "The tax reference applicable to the creditor. While defined as optional for the Visa API, this field is required where local regulation requires the tax ID to be compliant.",
            "allOf": [
              {
                "$ref": "#/components/schemas/taxId"
              }
            ]
          },
          "creditorIdType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pIdType"
              }
            ]
          },
          "creditorAgentId": {
            "description": "Visa identifier for the payee service provider.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pEntityId"
              }
            ]
          },
          "creditorCountry": {
            "description": "Payees country of residence specified using ISO3166-2. Where ISO has not formally applied a 2 digit code, the following will be used:\n<table><tr><td>Country</td><td>Country Code (2-char)</td></tr>\n<tr><td>Kosovo</td><td>QZ</td></tr></table>\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_country2"
              }
            ]
          },
          "creditorLastName": {
            "description": "<b>Conditional. Mandatory for P2P use case but optional for B2C</b>.The last name of the payee.\n<b>NOTE:</b> This is currently limited to the first letter of the last name followed, optionally, by a dot symbol. e.g. 'S.' rather than Smith.",
            "allOf": [
              {
                "$ref": "#/components/schemas/lastName"
              }
            ]
          },
          "creditorAliasType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasType"
              }
            ]
          },
          "creditorFirstName": {
            "description": "<b>Conditional. Mandatory for P2P use case but optional for B2C</b> .The first name of the payee.",
            "allOf": [
              {
                "$ref": "#/components/schemas/firstName"
              }
            ]
          },
          "nationalIdentifiers": {
            "description": "Field to carry creditor passport. While defined as optional for the Visa API, this field is required where local regulation requires to send information about the registration identifier.",
            "allOf": [
              {
                "$ref": "#/components/schemas/nationalIdentifiers-1"
              }
            ]
          },
          "creditorAgentCountry": {
            "description": "Payee service providers country of business specified using ISO3166-2. Where ISO has not formally applied a 2 digit code, the following will be used:\n<table><tr><td>Country</td><td>Country Code (2-char)</td></tr>\n<tr><td>Kosovo</td><td>QZ</td></tr></table>\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_country2"
              }
            ]
          },
          "creditorBusinessName": {
            "description": "<b>Conditional.</b> Name of the business entity submitting the R2P request for example brand name/doing business as. Required for a B2C request.",
            "allOf": [
              {
                "$ref": "#/components/schemas/businessName"
              }
            ]
          }
        }
      },
      "creditor-3": {
        "required": [
          "creditorAgentCountry",
          "creditorAgentId",
          "creditorCountry"
        ],
        "type": "object",
        "properties": {
          "creditorId": {
            "description": "<b>Conditional.</b> ID that may be used to uniquely identify the payee within the context of the creditorIdType (e.g., customer id assigned by service provider). While an optional field in certain use cases (determined by product rules outlined here), certain capabilities such as search will limited based on provided data to ensure data security. For example, protecting against MSISDN re-use in mobile telephone markets or payee having multiple telephone numbers.\n<table><tr><td>Product</td><td>Initiate Request to Visa</td><td>Initiate Request from Visa</td></tr>\n<tr><td>VD</td><td>Mandatory</td><td>Omitted</td></tr></table>\nAs seen in the table above, the creditorId is not shared with the payer agent. When responding to a Retrieve Request to Pay call, inclusion of the creditorId will be based on the role of the caller.\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pEntityId"
              }
            ]
          },
          "creditorMcc": {
            "description": "<b>Conditional.</b> Merchant Category Code applicable to the creditor for this transaction. Applicable for the B2C use case.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_mcc"
              }
            ]
          },
          "creditorAlias": {
            "description": "<b>Conditional.</b> The alias used to identify and route to the payee. This field may be optional in certain use cases (determined by product rules) for example where routing is driven by creditorId. Where creditorAlias is provided, creditorAliasType must also be provided. The structure and validations of the creditorAlias field are determined by the creditorAliasType value.",
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasKey"
              }
            ]
          },
          "creditorTaxId": {
            "description": "The tax reference applicable to the creditor. While defined as optional for the Visa API, this field is required where local regulation requires the tax ID to be compliant.",
            "allOf": [
              {
                "$ref": "#/components/schemas/taxId"
              }
            ]
          },
          "creditorIdType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pIdType"
              }
            ]
          },
          "creditorAgentId": {
            "description": "Visa identifier for the payee service provider.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pEntityId"
              }
            ]
          },
          "creditorCountry": {
            "description": "Payees country of residence specified using ISO3166-2. Where ISO has not formally applied a 2 digit code, the following will be used:\n<table><tr><td>Country</td><td>Country Code (2-char)</td></tr>\n<tr><td>Kosovo</td><td>QZ</td></tr></table>\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_country2"
              }
            ]
          },
          "creditorLastName": {
            "description": "<b>Conditional. Mandatory for P2P use case but optional for B2C</b>.The last name of the payee.\n<b>NOTE:</b> This is currently limited to the first letter of the last name followed, optionally, by a dot symbol. e.g. 'S.' rather than Smith.",
            "allOf": [
              {
                "$ref": "#/components/schemas/lastName"
              }
            ]
          },
          "creditorAliasType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasType"
              }
            ]
          },
          "creditorFirstName": {
            "description": "<b>Conditional. Mandatory for P2P use case but optional for B2C</b> .The first name of the payee.",
            "allOf": [
              {
                "$ref": "#/components/schemas/firstName"
              }
            ]
          },
          "creditorAgentCountry": {
            "description": "Payee service providers country of business specified using ISO3166-2. Where ISO has not formally applied a 2 digit code, the following will be used:\n<table><tr><td>Country</td><td>Country Code (2-char)</td></tr>\n<tr><td>Kosovo</td><td>QZ</td></tr></table>\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_country2"
              }
            ]
          },
          "creditorBusinessName": {
            "description": "<b>Conditional.</b> Name of the business entity submitting the R2P request for example brand name/doing business as. Required for a B2C request.",
            "allOf": [
              {
                "$ref": "#/components/schemas/businessName"
              }
            ]
          }
        }
      },
      "requestOptions-1": {
        "type": "object",
        "properties": {
          "reminderSchedule": {
            "maxLength": 10,
            "type": "array",
            "description": "This enables payees to set automated reminders for a request to pay. A request can have up to 3 reminders at a maximum rate of 1 reminder per day. Reminders can be scheduled using the Initiate R2P or Amend R2P APIs.<br>\nWhen using the Amend R2P API, future reminders can be changed or removed but reminders that have already been sent must be included unchanged.<br>\nAn Amend R2P call with an empty reminderSchedule list will remove all reminders provided they are all in the future.\n",
            "example": [
              "2023-05-30T09:30:47Z",
              "2023-06-11T11:22:33Z",
              "2023-07-11T11:22:33Z"
            ],
            "items": {
              "maxLength": 255,
              "pattern": "YYYY-MM-DDTHH:mm:ssZ",
              "type": "string",
              "format": "date-time",
              "example": "2017-07-21T17:32:28Z"
            }
          },
          "allowMultiplePayments": {
            "type": "boolean",
            "description": "Used to indicate whether the request can be settled with multiple smaller payments rather than a single full payment. If not included this will default to FALSE to ensure compatibility between participants.",
            "example": false
          }
        },
        "description": "Optional field for B2C/P2P use case. This field serves as an indicator for different preferences associated with the payee."
      },
      "viewBlockResponse-2": {
        "required": [
          "blockedPayees",
          "creationDateTime",
          "requestMessageId",
          "responseMessageId"
        ],
        "type": "object",
        "properties": {
          "blockedPayees": {
            "minLength": 1,
            "required": [
              "blockedPayeesResponse"
            ],
            "type": "array",
            "description": "Following the view block request from payer/debtor,Visa R2P service will return details of active blocks(only) the payer/debtor had applied on payee in the past.",
            "items": {
              "$ref": "#/components/schemas/blockedPayeesResponse-2"
            }
          },
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "requestMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_requestMessageId"
              }
            ]
          },
          "responseMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_responseMessageId"
              }
            ]
          }
        }
      },
      "refundSettlementOption": {
        "required": [
          "settlementSystem"
        ],
        "type": "object",
        "properties": {
          "settlementSystem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/settlementSystem"
              }
            ]
          },
          "primaryAccountNumber": {
            "description": "Conditional. Primary Account Number (PAN) payment can be made to for this Request to Pay. For example, the creditors PAN or an agent allowed to receive funds for them. Validations limited to MOD10 checks. If Settlement System is Visa Direct or Mastercard, this field is required.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_primaryAccountNumber"
              }
            ]
          }
        }
      },
      "viewBlockResponse-1": {
        "required": [
          "blockedPayees",
          "creationDateTime",
          "requestMessageId",
          "responseMessageId"
        ],
        "type": "object",
        "properties": {
          "blockedPayees": {
            "minLength": 1,
            "required": [
              "blockedPayeesResponse"
            ],
            "type": "array",
            "description": "Following the view block request from payer/debtor,Visa R2P service will return details of active blocks(only) the payer/debtor had applied on payee in the past.",
            "items": {
              "$ref": "#/components/schemas/blockedPayeesResponse-1"
            }
          },
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "requestMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_requestMessageId"
              }
            ]
          },
          "responseMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_responseMessageId"
              }
            ]
          }
        }
      },
      "refundCreditor_fromVisa-2": {
        "required": [
          "creditorAgentCountry",
          "creditorAgentId",
          "creditorCountry",
          "creditorFirstName",
          "creditorLastName"
        ],
        "type": "object",
        "properties": {
          "creditorAlias": {
            "description": "<b>Conditional.</b> The alias used to identify and route to the payee. This field may be optional in certain use cases (determined by product rules) for example where routing is driven by creditorId. Where creditorAlias is provided, creditorAliasType must also be provided. The structure and valiations of the creditorAlias field are determined by the creditorAliasType value.",
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasKey"
              }
            ]
          },
          "creditorAgentId": {
            "description": "Visa identifier for the payee service provider.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pEntityId"
              }
            ]
          },
          "creditorCountry": {
            "description": "Payees country of residence specified using ISO3166-2. Where ISO has not formally applied a 2 digit code, the following will be used:\n<table><tr><td>Country</td><td>Country Code (2-char)</td></tr>\n<tr><td>Kosovo</td><td>QZ</td></tr></table>\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_country2"
              }
            ]
          },
          "creditorLastName": {
            "description": "<b>Optional Field</b>.The last name of the payee.\n<b>NOTE:</b> This is currently limited to the first letter of the last name followed, optionally, by a dot symbol. e.g. 'S.' rather than Smith.",
            "allOf": [
              {
                "$ref": "#/components/schemas/lastName"
              }
            ]
          },
          "creditorAliasType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasType"
              }
            ]
          },
          "creditorFirstName": {
            "description": "<b>Optional Field</b> .The first name of the payee.",
            "allOf": [
              {
                "$ref": "#/components/schemas/firstName"
              }
            ]
          },
          "creditorAgentCountry": {
            "description": "Payee service providers country of business specified using ISO3166-2. Where ISO has not formally applied a 2 digit code, the following will be used:\n<table><tr><td>Country</td><td>Country Code (2-char)</td></tr>\n<tr><td>Kosovo</td><td>QZ</td></tr></table>\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_country2"
              }
            ]
          }
        }
      },
      "refundCreditor_fromVisa-1": {
        "required": [
          "creditorAgentCountry",
          "creditorAgentId",
          "creditorCountry",
          "creditorFirstName",
          "creditorLastName"
        ],
        "type": "object",
        "properties": {
          "creditorAlias": {
            "description": "<b>Conditional.</b> The alias used to identify and route to the payee. This field may be optional in certain use cases (determined by product rules) for example where routing is driven by creditorId. Where creditorAlias is provided, creditorAliasType must also be provided. The structure and validations of the creditorAlias field are determined by the creditorAliasType value.",
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasKey"
              }
            ]
          },
          "creditorAgentId": {
            "description": "Visa identifier for the payee service provider.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pEntityId"
              }
            ]
          },
          "creditorCountry": {
            "description": "Payees country of residence specified using ISO3166-2. Where ISO has not formally applied a 2 digit code, the following will be used:\n<table><tr><td>Country</td><td>Country Code (2-char)</td></tr>\n<tr><td>Kosovo</td><td>QZ</td></tr></table>\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_country2"
              }
            ]
          },
          "creditorLastName": {
            "description": "<b>Optional Field</b>.The last name of the payee.\n<b>NOTE:</b> This is currently limited to the first letter of the last name followed, optionally, by a dot symbol. e.g. 'S.' rather than Smith.",
            "allOf": [
              {
                "$ref": "#/components/schemas/lastName"
              }
            ]
          },
          "creditorAliasType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasType"
              }
            ]
          },
          "creditorFirstName": {
            "description": "<b>Optional Field</b> .The first name of the payee.",
            "allOf": [
              {
                "$ref": "#/components/schemas/firstName"
              }
            ]
          },
          "creditorAgentCountry": {
            "description": "Payee service providers country of business specified using ISO3166-2. Where ISO has not formally applied a 2 digit code, the following will be used:\n<table><tr><td>Country</td><td>Country Code (2-char)</td></tr>\n<tr><td>Kosovo</td><td>QZ</td></tr></table>\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_country2"
              }
            ]
          }
        }
      },
      "paymentRequest_fromVisa": {
        "required": [
          "paymentRequestId"
        ],
        "type": "object",
        "properties": {
          "paymentRequestId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_paymentRequestId"
              }
            ]
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/paymentRequest_toVisa"
          }
        ]
      },
      "cancelR2pResponse": {
        "required": [
          "creationDateTime",
          "requestMessageId",
          "responseMessageId",
          "transactionStatus"
        ],
        "type": "object",
        "properties": {
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "requestMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_requestMessageId"
              }
            ]
          },
          "responseMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_responseMessageId"
              }
            ]
          },
          "transactionStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_transactionStatus"
              }
            ]
          }
        }
      },
      "paymentRequest_fromVisa-1": {
        "required": [
          "paymentRequestId"
        ],
        "type": "object",
        "properties": {
          "paymentRequestId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_paymentRequestId"
              }
            ]
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/paymentRequest_toVisa-1"
          }
        ]
      },
      "paymentRequest_fromVisa-3": {
        "required": [
          "paymentRequestId"
        ],
        "type": "object",
        "properties": {
          "paymentRequestId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_paymentRequestId"
              }
            ]
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/paymentRequest_toVisa-3"
          }
        ]
      },
      "settlementDetails-4": {
        "maxLength": 1,
        "required": [
          "settlementRecord"
        ],
        "type": "array",
        "description": "<b>Conditional - Required if the Request to Pay is settled.</b> The list of payments received for the associated Request to Pay.\n",
        "items": {
          "$ref": "#/components/schemas/settlementRecordRetrieve-2"
        }
      },
      "paymentRequest_fromVisa-2": {
        "required": [
          "paymentRequestId"
        ],
        "type": "object",
        "properties": {
          "paymentRequestId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_paymentRequestId"
              }
            ]
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/paymentRequest_toVisa-2"
          }
        ]
      },
      "settlementDetails-2": {
        "maxLength": 1,
        "required": [
          "settlementRecord"
        ],
        "type": "array",
        "description": "<b>Conditional - Required if the Request to Pay is settled.</b> The list of payments received for the associated Request to Pay. Note that while maxLength is 1, this is specified as an array for future use cases.\n",
        "items": {
          "$ref": "#/components/schemas/settlementRecord-2"
        }
      },
      "lastName": {
        "maxLength": 140,
        "type": "string",
        "example": "F."
      },
      "settlementDetails-3": {
        "maxLength": 10,
        "required": [
          "settlementRecord"
        ],
        "type": "array",
        "description": "<b>Conditional - Required if the Request to Pay is settled.</b> The list of payments received for the associated Request to Pay.\n",
        "items": {
          "$ref": "#/components/schemas/settlementRecordRetrieve-2"
        }
      },
      "errorResponseTagTxn": {
        "required": [
          "code",
          "creationDateTime",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 6,
            "type": "string",
            "description": "Coded reason group this error response is considered part of.\n<table><tr><td>Value</td><td>Description</td></tr>\n<tr><td>RC1xxx</td><td>RC1xxx codes indicate an invalid request. Typically a syntactical issue with the API request such as a missing mandatory field incorrect field formatting.</td></tr>\n<tr><td>RC2xxx</td><td>RC2xxxx codes indicate a business validation failure. Typically, the request is syntactically correct but the request does not meet the business rules configured. For example, the debtor last name does not meet country specific validations.</td></tr>\n<tr><td>RC3xxx</td><td>RC3xxx codes indicate an authorisation failure. The request may be syntactically correct and meet the necessary business rules but breaches an additional control or configuration in place. i.e., The request is valid but not allowed at this time. Examples of reasons for this error include attempting to retrieve R2P details unrelated to the entity calling the retrieve request to pay API or submitting a B2C request when only configured for P2P requests.</td></tr>\n<tr><td>RC3001</td><td>Authorisation failure: The request is syntactically correct but cannot be accepted by Visa at this time as a result of an active block control.</td></tr>\n<tr><td>RC3002</td><td>Authorisation failure: The request is syntactically correct but cannot be accepted by Visa at this time as a result of velocity/frequency control.</td></tr>\n<tr><td>RC4xxx</td><td>RC4xxx codes indicate an entity in the request to pay transaction is unknown. The request involves an entity that is not known or cannot be resolved. For example, the mobile number given to route the R2P to is not known to the organisation with responsibility for resolving the number to a debtor - whether that be Visa or another organisation depending on the service configuration and request to pay transaction.</td></tr>\n<tr><td>RC5xxx</td><td>Server Errors. May be seen as a result of errors internal to the processing system.</td></tr></table>\n",
            "example": "RC1000"
          },
          "details": {
            "required": [
              "errorDetails"
            ],
            "type": "array",
            "description": "Additional details on specific fields that triggered the error response where relevant.",
            "items": {
              "$ref": "#/components/schemas/errorDetails"
            }
          },
          "message": {
            "type": "string",
            "example": "Data in the request is missing or invalid"
          },
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          }
        }
      },
      "settlementDetails-1": {
        "maxLength": 10,
        "required": [
          "settlementRecord"
        ],
        "type": "array",
        "description": "<b>Conditional - Required if the Request to Pay is settled.</b> The list of payments received for the associated Request to Pay.\n",
        "items": {
          "$ref": "#/components/schemas/settlementRecordRetrieve-1"
        }
      },
      "MessageEvent": {
        "type": "object",
        "properties": {
          "creditorAckEmoji": {
            "maxLength": 250,
            "type": "string",
            "description": "This allows the payee to send a single emoji as an acknowledgement for the payment they received to the payer. Please refer the implementation guide for the list of supported emojis."
          },
          "creditorAckMessage": {
            "maxLength": 250,
            "type": "string",
            "description": "This allows the payee to send a single message as an acknowledgement for the payment they received to the payer. Please refer the implementation guide for the list of supported pre-defined messages."
          }
        },
        "description": "This is used to provide the information that need to be tagged to the transaction. Please note: At least one of the following attributes must be present."
      },
      "paymentRequest_toVisa-3": {
        "required": [
          "debtorAgentCountry",
          "debtorCountry",
          "debtorFirstName",
          "debtorLastName",
          "endToEndId",
          "requestedAmount",
          "requestedAmountCurrency"
        ],
        "type": "object",
        "properties": {
          "endToEndId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/endToEndId"
              }
            ]
          },
          "debtorAlias": {
            "description": "<b>Conditional.</b> The alias used to identify and route to the payer. Where debtorAlias is provided, debtorAliasType must also be provided. The structure and validations of the debtorAlias field are determined by the debtorAliasType value. <table><tr><td>Product</td><td>Initiate Request to Visa</td><td>Initiate Request from Visa</td></tr> <tr><td>VD</td><td>Mandatory</td><td>Mandatory</td></tr></table>",
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasKey"
              }
            ]
          },
          "debtorAgentId": {
            "description": "<b>Conditional.</b> Visa identifier for the payer service provider.While this may be omitted by the creditor agent if they have subscribed to in-flight resolution for debtor routing, it will be included by Visa when routing to the debtor agent.If provided by the Creditor Agent then that will be used for R2P routing.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pEntityId"
              }
            ]
          },
          "debtorCountry": {
            "description": "Payers country of residence specified using ISO3166-2. Where ISO has not formally applied a 2 digit code, the following will be used:\n<table><tr><td>Country</td><td>Country Code (2-char)</td></tr>\n<tr><td>Kosovo</td><td>QZ</td></tr></table>\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_country2"
              }
            ]
          },
          "debtorLastName": {
            "description": "The last name of the payer.\n<b>NOTE:</b> This is currently limited to the first letter of the last name followed, optionally, by a dot symbol. e.g. 'S.' rather than Smith.",
            "allOf": [
              {
                "$ref": "#/components/schemas/lastName"
              }
            ]
          },
          "debtorAliasType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasType"
              }
            ]
          },
          "debtorFirstName": {
            "description": "The first name of the payer",
            "allOf": [
              {
                "$ref": "#/components/schemas/firstName"
              }
            ]
          },
          "requestedAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_paymentAmount"
              }
            ]
          },
          "debtorAgentCountry": {
            "description": "Payer service providers country of business specified using ISO3166-2. Where ISO has not formally applied a 2 digit code, the following will be used:\n<table><tr><td>Country</td><td>Country Code (2-char)</td></tr>\n<tr><td>Kosovo</td><td>QZ</td></tr></table>\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_country2"
              }
            ]
          },
          "requestedAmountCurrency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_paymentCurrency"
              }
            ]
          }
        }
      },
      "paymentRequest_toVisa-1": {
        "required": [
          "debtorAgentCountry",
          "debtorCountry",
          "endToEndId",
          "requestedAmount",
          "requestedAmountCurrency"
        ],
        "type": "object",
        "properties": {
          "endToEndId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/endToEndId"
              }
            ]
          },
          "debtorAlias": {
            "description": "<b>Conditional.</b> The alias used to identify and route to the payer. Where debtorAlias is provided, debtorAliasType must also be provided. The structure and validations of the debtorAlias field are determined by the debtorAliasType value. <table><tr><td>Product</td><td>Initiate Request to Visa</td><td>Initiate Request from Visa</td></tr> <tr><td>VD</td><td>Mandatory</td><td>Mandatory</td></tr></table>",
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasKey"
              }
            ]
          },
          "debtorAgentId": {
            "description": "<b>Conditional.</b> Visa identifier for the payer service provider.While this may be omitted by the creditor agent if they have subscribed to in-flight resolution for debtor routing, it will be included by Visa when routing to the debtor agent.If provided by the Creditor Agent then that will be used for R2P routing.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pEntityId"
              }
            ]
          },
          "debtorCountry": {
            "description": "Payers country of residence specified using ISO3166-2. Where ISO has not formally applied a 2 digit code, the following will be used:\n<table><tr><td>Country</td><td>Country Code (2-char)</td></tr>\n<tr><td>Kosovo</td><td>QZ</td></tr></table>\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_country2"
              }
            ]
          },
          "debtorLastName": {
            "description": "The last name of the payer.\n<b>NOTE:</b> This is currently limited to the first letter of the last name followed, optionally, by a dot symbol. e.g. 'S.' rather than Smith.",
            "allOf": [
              {
                "$ref": "#/components/schemas/lastName"
              }
            ]
          },
          "debtorAliasType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasType"
              }
            ]
          },
          "debtorFirstName": {
            "description": "The first name of the payer",
            "allOf": [
              {
                "$ref": "#/components/schemas/firstName"
              }
            ]
          },
          "requestedAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_paymentAmount"
              }
            ]
          },
          "debtorAgentCountry": {
            "description": "Payer service providers country of business specified using ISO3166-2. Where ISO has not formally applied a 2 digit code, the following will be used:\n<table><tr><td>Country</td><td>Country Code (2-char)</td></tr>\n<tr><td>Kosovo</td><td>QZ</td></tr></table>\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_country2"
              }
            ]
          },
          "requestedAmountCurrency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_paymentCurrency"
              }
            ]
          }
        }
      },
      "refund_paymentAmount-1": {
        "type": "number",
        "description": "Value that the refund request or refund payment is for.This should be less than or equal to the original Requet to Pay settled amount. Note that while this field supports ISO20022 decimal references (12.5), consideration should be given to the supported values in other contexts such as settlement options. For example card payments processed in an ISO8583 environment where values can only support 9.3 formats.",
        "example": 100
      },
      "paymentRequest_toVisa-2": {
        "required": [
          "debtorAgentCountry",
          "debtorCountry",
          "debtorFirstName",
          "debtorLastName",
          "endToEndId",
          "requestedAmount",
          "requestedAmountCurrency"
        ],
        "type": "object",
        "properties": {
          "endToEndId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/endToEndId-1"
              }
            ]
          },
          "debtorAlias": {
            "description": "<b>Conditional.</b> The alias used to identify and route to the payer. Where debtorAlias is provided, debtorAliasType must also be provided. The structure and valiations of the debtorAlias field are determined by the debtorAliasType value. <table><tr><td>Product</td><td>Initiate Request to Visa</td><td>Initiate Request from Visa</td></tr> <tr><td>VD</td><td>Mandatory</td><td>Mandatory</td></tr></table>",
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasKey"
              }
            ]
          },
          "debtorAgentId": {
            "description": "<b>Conditional.</b> Visa identifier for the payer service provider.While this may be omitted by the creditor agent if they have subscribed to in-flight resolution for debtor routing, it will be included by Visa when routing to the debtor agent.If provided by the Creditor Agent then that will be used for R2P routing.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pEntityId"
              }
            ]
          },
          "debtorCountry": {
            "description": "Payers country of residence specified using ISO3166-2. Where ISO has not formally applied a 2 digit code, the following will be used:\n<table><tr><td>Country</td><td>Country Code (2-char)</td></tr>\n<tr><td>Kosovo</td><td>QZ</td></tr></table>\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_country2"
              }
            ]
          },
          "debtorLastName": {
            "description": "The last name of the payer.\n<b>NOTE:</b> This is currently limited to the first letter of the last name followed, optionally, by a dot symbol. e.g. 'S.' rather than Smith.",
            "allOf": [
              {
                "$ref": "#/components/schemas/lastName"
              }
            ]
          },
          "debtorAliasType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasType"
              }
            ]
          },
          "debtorFirstName": {
            "description": "The first name of the payer",
            "allOf": [
              {
                "$ref": "#/components/schemas/firstName"
              }
            ]
          },
          "requestedAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_paymentAmount"
              }
            ]
          },
          "debtorAgentCountry": {
            "description": "Payer service providers country of business specified using ISO3166-2. Where ISO has not formally applied a 2 digit code, the following will be used:\n<table><tr><td>Country</td><td>Country Code (2-char)</td></tr>\n<tr><td>Kosovo</td><td>QZ</td></tr></table>\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_country2"
              }
            ]
          },
          "requestedAmountCurrency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_paymentCurrency"
              }
            ]
          }
        }
      },
      "confirmSettlementSystemReferenceType": {
        "type": "string",
        "description": "Conditional and this is required when settlementSystem is VISA_DIRECT. Settlement reference type acts like a metadata for the settlementSystemReferenceID field. Currently supported values are:\n<table>\n<tr><td>Value</td><td>Description</td></tr>\n<tr><td>RRN</td><td>Retrieval Reference Number.<br> Use when settlementSystem is VISA_DIRECT/MASTERCARD.</td><td>Available for both P2P and B2C.</td></tr>\n<tr><td>TXNID</td><td>Visa or Mastercard transaction ID</td><td>Available for both P2P and B2C.</td></tr>\n<tr><td>YPPID</td><td>Yellow Pepper PIS payment ID.<br>Use when settlementSystem is YELLOW_PEPPER.</td><td>Available for both P2P and B2C.</td></tr>\n</table>\nNote : If not present in the Confirm request from Payer Service Provider , Request to Pay service will default it to \"UNKNOWN\" and same will be send in outbound Confirm API to Payee Service Provider.\n",
        "example": "RRN"
      },
      "confirmSettlementSystem-1": {
        "maxLength": 35,
        "type": "string",
        "description": "Settlement mechanism or payment rail used for payments related to the payment request. Currently supported values are:\n<table><tr><td>Value</td><td>Settlement mechanism or payment rail</td><td>Description</td></tr>\n<tr><td>VISA_DIRECT</td><td>Visa Direct</td><td>Available for both P2P and B2C.</td></tr>\n<tr><td>MASTERCARD</td><td>Mastercard</td><td>Available for only P2P not B2C.</td></tr>\n<tr><td>YELLOW_PEPPER</td><td>Enabled by Yellow Pepper</td><td>Available for only P2P not B2C. Payment was facilitated by Yellow Pepper. In this instance, settlement system specific information may not be available. Only available in specific market, please contact Visa representative for more details.</td></tr></table>\n",
        "example": "VISA_DIRECT"
      },
      "confirmSettlementSystem-2": {
        "maxLength": 35,
        "type": "string",
        "description": "Settlement mechanism or payment rail used for payments related to the payment request. Currently supported values are:\n<table><tr><td>Value</td><td>Settlement mechanism or payment rail</td><td>Description</td></tr>\n<tr><td>VISA_DIRECT</td><td>Visa Direct</td><td>Available for both P2P and B2C.</td></tr>\n<tr><td>MASTERCARD</td><td>Mastercard</td><td>Available for only P2P not B2C.</td></tr>\n<tr><td>YELLOW_PEPPER</td><td>Enabled by Yellow Pepper</td><td>Available for only P2P not B2C. Payment was facilitated by Yellow Pepper. In this instance, settlement system specific information may not be available.Only available in specific market, please contact Visa representative for more details.</td></tr></table>         \n",
        "example": "VISA_DIRECT"
      },
      "refundPaymentRequest_toVisa-1": {
        "required": [
          "endToEndId",
          "requestedAmount"
        ],
        "type": "object",
        "properties": {
          "endToEndId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/endToEndId-1"
              }
            ]
          },
          "requestedAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/refund_paymentAmount-1"
              }
            ]
          }
        }
      },
      "settlementOption": {
        "required": [
          "settlementSystem"
        ],
        "type": "object",
        "properties": {
          "receivingAlias": {
            "description": "Conditional. This field is required when settlementSystem is DEFERRED_TO_ALIAS. Format and length validation are in place.",
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasKey"
              }
            ]
          },
          "settlementSystem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/initiateSettlementSystem"
              }
            ]
          },
          "receivingAliasType": {
            "description": "Conditional. This field is required when receivingAlias is present. This indicates the type of alias provided and thus validation logic and business rules that will be applied to it. Should be supporting EMAIL,MOBL as aliasType.",
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasType"
              }
            ]
          },
          "primaryAccountNumber": {
            "description": "Conditional. Primary Account Number (PAN) payment can be made to for this Request to Pay. For example, the creditors PAN or an agent allowed to receive funds for them. Validations limited to MOD10 checks. If Settlement System is Visa Direct or Mastercard, this field is required.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_primaryAccountNumber"
              }
            ]
          }
        }
      },
      "refundCreditor_fromVisa": {
        "required": [
          "creditorAgentCountry",
          "creditorAgentId",
          "creditorCountry"
        ],
        "type": "object",
        "properties": {
          "creditorAlias": {
            "description": "<b>Conditional.</b> The alias used to identify and route to the payee. This field may be optional in certain use cases (determined by product rules) for example where routing is driven by creditorId. Where creditorAlias is provided, creditorAliasType must also be provided. The structure and validations of the creditorAlias field are determined by the creditorAliasType value.",
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasKey"
              }
            ]
          },
          "creditorAgentId": {
            "description": "Visa identifier for the payee service provider.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pEntityId"
              }
            ]
          },
          "creditorCountry": {
            "description": "Payees country of residence specified using ISO3166-2. Where ISO has not formally applied a 2 digit code, the following will be used:\n<table><tr><td>Country</td><td>Country Code (2-char)</td></tr>\n<tr><td>Kosovo</td><td>QZ</td></tr></table>\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_country2"
              }
            ]
          },
          "creditorLastName": {
            "description": "The last name of the payee.\n<b>NOTE:</b> This is currently limited to the first letter of the last name followed, optionally, by a dot symbol. e.g. 'S.' rather than Smith.",
            "allOf": [
              {
                "$ref": "#/components/schemas/lastName"
              }
            ]
          },
          "creditorAliasType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasType"
              }
            ]
          },
          "creditorFirstName": {
            "description": "The first name of the payee.",
            "allOf": [
              {
                "$ref": "#/components/schemas/firstName"
              }
            ]
          },
          "creditorAgentCountry": {
            "description": "Payee service providers country of business specified using ISO3166-2. Where ISO has not formally applied a 2 digit code, the following will be used:\n<table><tr><td>Country</td><td>Country Code (2-char)</td></tr>\n<tr><td>Kosovo</td><td>QZ</td></tr></table>\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_country2"
              }
            ]
          }
        }
      },
      "refundPaymentRequest_toVisa": {
        "required": [
          "endToEndId",
          "requestedAmount"
        ],
        "type": "object",
        "properties": {
          "endToEndId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/endToEndId"
              }
            ]
          },
          "requestedAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/refund_paymentAmount"
              }
            ]
          }
        }
      },
      "multiRetrieveErrorDetails": {
        "required": [
          "field",
          "reason"
        ],
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "description": "The field from the payload related to the described issue.",
            "example": "paymentRequestIds[0]"
          },
          "reason": {
            "type": "string",
            "description": "Additional information on why this field is causing the issue outlined by the error code.",
            "example": "does not match the regex pattern"
          }
        }
      },
      "viewBlockRequest": {
        "required": [
          "creationDateTime",
          "debtorId",
          "debtorIdType",
          "requestMessageId"
        ],
        "type": "object",
        "properties": {
          "debtorId": {
            "description": "The debtorID originally provided by the users agent or their processor when responding to the Initiate Request to Pay call.\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pEntityId"
              }
            ]
          },
          "debtorIdType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pIdType"
              }
            ]
          },
          "debtorAgentId": {
            "maxLength": 35,
            "type": "string",
            "description": "<b>Conditional.</b>. Required when this API is called by an agents processor, the debtorAgentId indicates what service provider they are calling on behalf of.",
            "example": "455200923457"
          },
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "requestMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_requestMessageId"
              }
            ]
          }
        }
      },
      "r2p_useCase": {
        "maxLength": 6,
        "type": "string",
        "description": "The useCase field sets the use case that the Request to Pay is for, and combined with the product, drives specific business rules and validations for the transaction. Valid values are:\n<table><tr><td>Value</td><td>Description</td></tr>\n<tr><td>P2P</td><td>A Request to Pay sent from one consumer to another (i.e. Person to Person).</td></tr>\n<tr><td>B2C</td><td>A Request to Pay sent from one business to a consumer.</td></tr></table>\n",
        "example": "P2P"
      },
      "initiateSettlementOptions-1": {
        "maxLength": 1,
        "required": [
          "settlementOption"
        ],
        "type": "array",
        "description": "The list of settlement options contains details of payment mechanisms that can be used by the payer to settle the Request to Pay from the payee. Note that while maxLength is 1, this is specified as an array for future use cases.",
        "items": {
          "$ref": "#/components/schemas/initiateSettlementOption-1"
        }
      },
      "confirmSettlementSystemReferenceType-2": {
        "type": "string",
        "description": "Settlement reference type acts like a metadata for the settlementSystemReferenceID field. Currently supported values are:\n<table>\n<tr><td>Value</td><td>Description</td></tr>\n<tr><td>RRN</td><td>Retrieval Reference Number</td><td>Available for both P2P and B2C.</td></tr>\n<tr><td>TXNID</td><td>Visa or Mastercard transaction ID</td><td>Available for both P2P and B2C.</td></tr>\n<tr><td>YPPID</td><td>Yellow Pepper PIS payment ID</td><td>Available for both P2P and B2C.</td></tr>\n</table>\nNote : If not present in the Confirm request from Payer Service Provider , Request to Pay service will default it to \"UNKNOWN\" and same will be send in outbound Confirm API to Payee Service Provider.\n",
        "example": "RRN"
      },
      "confirmSettlementSystemReferenceType-1": {
        "type": "string",
        "description": "Settlement reference type acts like a metadata for the settlementSystemReferenceID field. Currently supported values are:\n<table>\n<tr><td>Value</td><td>Description</td></tr>\n<tr><td>RRN</td><td>Retrieval Reference Number.<br> Use when settlementSystem is VISA_DIRECT/MASTERCARD.</td><td>Available for both P2P and B2C.</td></tr>\n<tr><td>TXNID</td><td>Visa or Mastercard transaction ID</td><td>Available for both P2P and B2C.</td></tr>\n<tr><td>YPPID</td><td>Yellow Pepper PIS payment ID.<br>Use when settlementSystem is YELLOW_PEPPER.</td><td>Available for both P2P and B2C.</td></tr>\n</table>\nNote : If not present in the Confirm request from Payer Service Provider , Request to Pay service will default it to \"UNKNOWN\" and same will be send in outbound Confirm API to Payee Service Provider.\n",
        "example": "RRN"
      },
      "r2p_transactionStatus-1": {
        "type": "string",
        "description": "Overall status of the Request to Pay transaction. \nIt is expected that a successful Initiate Request to Pay will only return PDNG. Changes to the transaction status will be communicated in subsequent messages.\nValid values are:\n<table><tr><td>Value</td><td>Description</td></tr>\n<tr><td>PDNG</td><td>R2P has been created and is valid but has not been processed further by the payer.</td></tr>\n<tr><td>RJCT</td><td>R2P could not be conveyed to the payer or the payer has rejected it. See the full transaction information for more detail.</td></tr>\n<tr><td>ACSC</td><td>R2P has been accepted by the payer and payment has been confirmed as made. See the full transaction information for more detail.</td></tr>\n<tr><td>CNCL</td><td>R2P has been cancelled by the payee. See the full transaction information for more detail.</td></tr>\n<tr><td>EXPD</td><td>R2P has expired (i.e. the dueDate is in the past) and can no longer be updated.</td></tr>\n</table>\n",
        "example": "PDNG"
      },
      "endToEndId-1": {
        "maxLength": 35,
        "type": "string",
        "description": "A transaction ID, unique to the creditorAgent, that may be used independently of Visa IDs (i.e paymentRequestId) to identify the transacton between payee and payer service providers. Note that this value is set by the entity that submits the Initiate Request to Pay to Visa and we cannot determine who in the chain between the end user and Visa set this value.",
        "example": "RFPid0001"
      },
      "settlementRecordRetrieve": {
        "required": [
          "creditorAccountDetail",
          "settledAmount",
          "settledAmountCurrency",
          "settlementSystem",
          "settlementSystemReferenceId"
        ],
        "type": "object",
        "properties": {
          "message": {
            "maxLength": 250,
            "type": "string",
            "description": "Allows the payer to include a single message as part of the payment confirmation to the payee. Please refer the implementation guide for the list of supported pre-defined messages."
          },
          "unicodeEmoji": {
            "maxLength": 250,
            "type": "string",
            "description": "Allows the payer to include a single emoji as part of the payment confirmation to the payee. Please refer the implementation guide for the list of supported emojis."
          },
          "settledAmount": {
            "description": "This is the value the payment is for.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_paymentAmount"
              }
            ]
          },
          "creditorAckEmoji": {
            "maxLength": 250,
            "type": "string",
            "description": "Allows the payee to send a single emoji as an acknowledgement for the payment they received to the payer. Please refer the implementation guide for the list of supported emojis."
          },
          "settlementSystem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/confirmSettlementSystem"
              }
            ]
          },
          "creditorAckMessage": {
            "maxLength": 250,
            "type": "string",
            "description": "Allows the payee to send a single message as an acknowledgement for the payment they received to the payer. Please refer the implementation guide for the list of supported pre-defined messages."
          },
          "debtorAccountDetail": {
            "$ref": "#/components/schemas/accountDetailsRetrieve"
          },
          "creditorAccountDetail": {
            "$ref": "#/components/schemas/creditorAccountDetail"
          },
          "settledAmountCurrency": {
            "description": "Currency that the payment is in, specified using ISO4217. Currently it must match the requested currency.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_paymentCurrency"
              }
            ]
          },
          "settlementSystemReferenceId": {
            "maxLength": 36,
            "type": "string",
            "description": "Reference ID provided by the settlement system that may be used for reconciliation. \n",
            "example": "VIP1234567890"
          },
          "settlementSystemReferenceType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/confirmSettlementSystemReferenceType"
              }
            ]
          }
        },
        "description": "Details of a payment received for an associated Request to Pay."
      },
      "retrieveR2pResponse": {
        "required": [
          "creationDateTime",
          "dueDate",
          "paymentRequestCreationDateTime",
          "product",
          "responseMessageId",
          "transactionStatus",
          "useCase"
        ],
        "type": "object",
        "properties": {
          "dueDate": {
            "description": "dueDate indicates the date that the payment request is asked to be settled by. If this is not specified by the payee service provider, a default timeframe of 90 days from the current date will be applied. The payer can expect to receive the dueDate value whether the payee specified it or not.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_dateStamp"
              }
            ]
          },
          "message": {
            "type": "string",
            "example": "The payer has rejected the Request to Pay."
          },
          "product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_product"
              }
            ]
          },
          "useCase": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_useCase"
              }
            ]
          },
          "creditor": {
            "$ref": "#/components/schemas/creditorForRetrieve"
          },
          "statusReason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_statusReason"
              }
            ]
          },
          "requestReason": {
            "$ref": "#/components/schemas/requestReason"
          },
          "paymentRequest": {
            "$ref": "#/components/schemas/paymentRequest_initiated"
          },
          "requestOptions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/requestOptions"
              }
            ]
          },
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "responseMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_responseMessageId"
              }
            ]
          },
          "settlementDetails": {
            "$ref": "#/components/schemas/settlementDetails"
          },
          "settlementOptions": {
            "$ref": "#/components/schemas/settlementOptions"
          },
          "transactionStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_transactionStatus"
              }
            ]
          },
          "paymentRequestCreationDateTime": {
            "description": "The time that the Request to Pay was created in the Visa platform.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_dateTimeStamp"
              }
            ]
          }
        }
      },
      "businessName": {
        "maxLength": 140,
        "type": "string",
        "example": "Mini-Corp Inc."
      },
      "confirmR2pRequest-2": {
        "required": [
          "creationDateTime",
          "endToEndId",
          "paymentRequestId",
          "requestMessageId",
          "transactionStatus"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "endToEndId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/endToEndId-1"
              }
            ]
          },
          "statusReason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_statusReason-2"
              }
            ]
          },
          "acceptedAmount": {
            "description": "<b>Conditional - required if the transaction is considered accepted.</b> This is the value the payment request is accepted for. Currently it must match the requested amount.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_paymentAmount"
              }
            ]
          },
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "paymentRequestId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_paymentRequestId"
              }
            ]
          },
          "requestMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_requestMessageId"
              }
            ]
          },
          "settlementDetails": {
            "$ref": "#/components/schemas/settlementRecord-2"
          },
          "transactionStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_transactionStatus-1"
              }
            ]
          },
          "acceptedAmountCurrency": {
            "description": "<b>Conditional - required if the transaction is considered accepted.</b> Currency that the payment request is accepted in specified using ISO4217. Currently it must match the requested currency.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_paymentCurrency"
              }
            ]
          }
        }
      },
      "confirmR2pRequest-3": {
        "required": [
          "creationDateTime",
          "endToEndId",
          "paymentRequestId",
          "requestMessageId",
          "transactionStatus"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "endToEndId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/endToEndId"
              }
            ]
          },
          "statusReason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_statusReason-1"
              }
            ]
          },
          "acceptedAmount": {
            "description": "<b>Conditional - required if the transaction is considered accepted.</b> This is the value the payment request is accepted for. Currently it must match the requested amount.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_paymentAmount"
              }
            ]
          },
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "paymentRequestId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_paymentRequestId"
              }
            ]
          },
          "requestMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_requestMessageId"
              }
            ]
          },
          "settlementDetails": {
            "$ref": "#/components/schemas/settlementRecord-3"
          },
          "transactionStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_transactionStatus"
              }
            ]
          },
          "acceptedAmountCurrency": {
            "description": "<b>Conditional - required if the transaction is considered accepted.</b> Currency that the payment request is accepted in specified using ISO4217. Currently it must match the requested currency.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_paymentCurrency"
              }
            ]
          }
        }
      },
      "confirmR2pRequest-1": {
        "required": [
          "creationDateTime",
          "endToEndId",
          "paymentRequestId",
          "requestMessageId",
          "transactionStatus"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "endToEndId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/endToEndId"
              }
            ]
          },
          "statusReason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_statusReason-1"
              }
            ]
          },
          "acceptedAmount": {
            "description": "<b>Conditional - required if the transaction is considered accepted.</b> This is the value the payment request is accepted for. Currently it must match the requested amount except when ‘requestOptions[].closeWithFirstPayment’ flag is set to true in the Initiate request to Visa. ",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_paymentAmount"
              }
            ]
          },
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "paymentRequestId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_paymentRequestId"
              }
            ]
          },
          "requestMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_requestMessageId"
              }
            ]
          },
          "settlementDetails": {
            "$ref": "#/components/schemas/settlementRecord-1"
          },
          "transactionStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_transactionStatus"
              }
            ]
          },
          "acceptedAmountCurrency": {
            "description": "<b>Conditional - required if the transaction is considered accepted.</b> Currency that the payment request is accepted in specified using ISO4217. Currently it must match the requested currency.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_paymentCurrency"
              }
            ]
          }
        }
      },
      "multipleRetrieveR2pResponse": {
        "required": [
          "creationDateTime",
          "dueDate",
          "paymentRequestCreationDateTime",
          "product",
          "responseMessageId",
          "transactionStatus",
          "useCase"
        ],
        "type": "object",
        "properties": {
          "paymentRequestDetail": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "dueDate": {
                  "description": "dueDate indicates the date that the payment request is asked to be settled by. If this is not specified by the payee service provider, a default timeframe of 90 days from the current date will be applied. The payer can expect to receive the dueDate value whether the payee specified it or not.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/dict_dateStamp"
                    }
                  ]
                },
                "message": {
                  "type": "string",
                  "example": "The payer has rejected the Request to Pay."
                },
                "product": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/r2p_product"
                    }
                  ]
                },
                "useCase": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/r2p_useCase"
                    }
                  ]
                },
                "creditor": {
                  "$ref": "#/components/schemas/creditorForRetrieve"
                },
                "statusReason": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/r2p_statusReason"
                    }
                  ]
                },
                "requestReason": {
                  "$ref": "#/components/schemas/requestReason"
                },
                "paymentRequest": {
                  "$ref": "#/components/schemas/paymentRequest_initiated"
                },
                "requestOptions": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/requestOptions"
                    }
                  ]
                },
                "creationDateTime": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/core_creationDateTime"
                    }
                  ]
                },
                "responseMessageId": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/core_responseMessageId"
                    }
                  ]
                },
                "settlementDetails": {
                  "$ref": "#/components/schemas/settlementDetails"
                },
                "settlementOptions": {
                  "$ref": "#/components/schemas/settlementOptions"
                },
                "transactionStatus": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/r2p_transactionStatus"
                    }
                  ]
                },
                "paymentRequestCreationDateTime": {
                  "description": "The time that the Request to Pay was created in the Visa platform.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/dict_dateTimeStamp"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "creditorAccountDetail-1": {
        "type": "object",
        "properties": {
          "receivingAlias": {
            "description": "Conditional. This field is required when  settlementOptions[].settlementSystem is DEFERRED_TO_ALIAS in Initiate R2P Request.Format and length validation are in place.",
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasKey"
              }
            ]
          },
          "receivingAliasType": {
            "description": "Conditional. This field is required when receivingAlias is present.This indicates the type of alias provided and thus validation logic and business rules that will be applied to it.Should be supporting EMAIL,MOBL as aliasType.",
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasType"
              }
            ]
          },
          "primaryAccountNumber": {
            "description": "Primary Account Number (PAN) for a card credential.This is optional when settlementOptions[].settlementSystem is DEFERRED_TO_ALIAS in Initiate or settlementDetails[].settlementSystem is YELLOW_PEPPER in Confirm. Note that this may be masked by Visa in certain scenarios.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_primaryAccountNumber"
              }
            ]
          }
        },
        "description": "Account details used by the related party for this payment. Note that the enforcement of fields here is dependent on the settlementSystem."
      },
      "endToEndIds-1": {
        "maxItems": 10,
        "type": "array",
        "description": "A transaction ID, unique to the creditor, that may be used independently of Visa IDs (i.e paymentRequestId) to identify the transacton between payee and payer service providers. Note that this value is set by the entity that submits the Initiate Request to Pay to Visa and we cannot determine who in the chain between the end user and Visa set this value.",
        "example": [
          "RFPid0001",
          "RFPid0002"
        ],
        "items": {
          "maxLength": 35,
          "type": "string"
        }
      },
      "retrieveR2pResponse-3": {
        "required": [
          "creationDateTime",
          "dueDate",
          "paymentRequestCreationDateTime",
          "product",
          "responseMessageId",
          "transactionStatus",
          "useCase"
        ],
        "type": "object",
        "properties": {
          "dueDate": {
            "description": "dueDate indicates the date that the payment request is asked to be settled by. If this is not specified by the payee service provider, a default timeframe of 90 days from the current date will be applied. The payer can expect to receive the dueDate value whether the payee specified it or not.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_dateStamp"
              }
            ]
          },
          "message": {
            "type": "string",
            "example": "The payer has rejected the Request to Pay."
          },
          "product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_product"
              }
            ]
          },
          "useCase": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_useCase"
              }
            ]
          },
          "creditor": {
            "$ref": "#/components/schemas/creditorForRetrieve-3"
          },
          "statusReason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_statusReason-1"
              }
            ]
          },
          "requestReason": {
            "$ref": "#/components/schemas/requestReason-3"
          },
          "paymentRequest": {
            "$ref": "#/components/schemas/paymentRequest_initiated-1"
          },
          "requestOptions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/requestOptions-1"
              }
            ]
          },
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "responseMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_responseMessageId"
              }
            ]
          },
          "settlementDetails": {
            "$ref": "#/components/schemas/settlementDetails-3"
          },
          "settlementOptions": {
            "$ref": "#/components/schemas/settlementOptions"
          },
          "transactionStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_transactionStatus"
              }
            ]
          },
          "paymentRequestCreationDateTime": {
            "description": "The time that the Request to Pay was created in the Visa platform.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_dateTimeStamp"
              }
            ]
          }
        }
      },
      "retrieveR2pResponse-2": {
        "required": [
          "creationDateTime",
          "dueDate",
          "paymentRequestCreationDateTime",
          "product",
          "responseMessageId",
          "transactionStatus",
          "useCase"
        ],
        "type": "object",
        "properties": {
          "dueDate": {
            "description": "dueDate indicates the date that the payment request is asked to be settled by. If this is not specified by the payee service provider, a default timeframe of 90 days from the current date will be applied. The payer can expect to receive the dueDate value whether the payee specified it or not.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_dateStamp"
              }
            ]
          },
          "message": {
            "type": "string",
            "example": "The payer has rejected the Request to Pay."
          },
          "product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_product"
              }
            ]
          },
          "useCase": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_useCase"
              }
            ]
          },
          "creditor": {
            "$ref": "#/components/schemas/creditorForRetrieve-2"
          },
          "statusReason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_statusReason-2"
              }
            ]
          },
          "requestReason": {
            "$ref": "#/components/schemas/requestReason-2"
          },
          "paymentRequest": {
            "$ref": "#/components/schemas/paymentRequest_initiated-2"
          },
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "responseMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_responseMessageId"
              }
            ]
          },
          "settlementDetails": {
            "$ref": "#/components/schemas/settlementDetails-2"
          },
          "settlementOptions": {
            "$ref": "#/components/schemas/settlementOptions-1"
          },
          "transactionStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_transactionStatus-1"
              }
            ]
          },
          "paymentRequestCreationDateTime": {
            "description": "The time that the Request to Pay was created in the Visa platform.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_dateTimeStamp"
              }
            ]
          }
        }
      },
      "retrieveR2pResponse-1": {
        "required": [
          "creationDateTime",
          "dueDate",
          "paymentRequestCreationDateTime",
          "product",
          "responseMessageId",
          "transactionStatus",
          "useCase"
        ],
        "type": "object",
        "properties": {
          "dueDate": {
            "description": "dueDate indicates the date that the payment request is asked to be settled by. If this is not specified by the payee service provider, a default timeframe of 90 days from the current date will be applied. The payer can expect to receive the dueDate value whether the payee specified it or not.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_dateStamp"
              }
            ]
          },
          "message": {
            "type": "string",
            "example": "The payer has rejected the Request to Pay."
          },
          "product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_product"
              }
            ]
          },
          "useCase": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_useCase"
              }
            ]
          },
          "creditor": {
            "$ref": "#/components/schemas/creditorForRetrieve-1"
          },
          "statusReason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_statusReason-1"
              }
            ]
          },
          "requestReason": {
            "$ref": "#/components/schemas/requestReason-1"
          },
          "paymentRequest": {
            "$ref": "#/components/schemas/paymentRequest_initiated-1"
          },
          "requestOptions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/requestOptions"
              }
            ]
          },
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "responseMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_responseMessageId"
              }
            ]
          },
          "settlementDetails": {
            "$ref": "#/components/schemas/settlementDetails-1"
          },
          "settlementOptions": {
            "$ref": "#/components/schemas/settlementOptions"
          },
          "transactionStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_transactionStatus"
              }
            ]
          },
          "paymentRequestCreationDateTime": {
            "description": "The time that the Request to Pay was created in the Visa platform.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_dateTimeStamp"
              }
            ]
          }
        }
      },
      "initiateSettlementOption-1": {
        "required": [
          "settlementSystem"
        ],
        "type": "object",
        "properties": {
          "receivingAlias": {
            "description": "Conditional. This field is required when settlementSystem is DEFERRED_TO_ALIAS.Format and length validation are in place.",
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasKey"
              }
            ]
          },
          "settlementSystem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/initiateSettlementSystem"
              }
            ]
          },
          "receivingAliasType": {
            "description": "Conditional. This field is required when receivingAlias is present.This indicates the type of alias provided and thus validation logic and business rules that will be applied to it.Should be supporting EMAIL,MOBL as aliasType.",
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasType"
              }
            ]
          },
          "primaryAccountNumber": {
            "description": "Conditional. Primary Account Number (PAN) payment can be made to for this Request to Pay. For example, the creditors PAN or an agent allowed to receive funds for them. Validations limited to MOD10 checks. If Settlement System is Visa Direct or Mastercard, this field is required.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_primaryAccountNumber"
              }
            ]
          }
        }
      },
      "nationalIdentifiersObject-1": {
        "required": [
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/type-1"
              }
            ]
          },
          "value": {
            "allOf": [
              {
                "$ref": "#/components/schemas/value-1"
              }
            ]
          }
        }
      },
      "retrieveR2pResponse-4": {
        "required": [
          "creationDateTime",
          "dueDate",
          "paymentRequestCreationDateTime",
          "product",
          "responseMessageId",
          "transactionStatus",
          "useCase"
        ],
        "type": "object",
        "properties": {
          "dueDate": {
            "description": "dueDate indicates the date that the payment request is asked to be settled by. If this is not specified by the payee service provider, a default timeframe of 90 days from the current date will be applied. The payer can expect to receive the dueDate value whether the payee specified it or not.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_dateStamp"
              }
            ]
          },
          "message": {
            "type": "string",
            "example": "The payer has rejected the Request to Pay."
          },
          "product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_product"
              }
            ]
          },
          "useCase": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_useCase"
              }
            ]
          },
          "creditor": {
            "$ref": "#/components/schemas/creditorForRetrieve-3"
          },
          "statusReason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_statusReason-1"
              }
            ]
          },
          "requestReason": {
            "$ref": "#/components/schemas/requestReason-3"
          },
          "paymentRequest": {
            "$ref": "#/components/schemas/paymentRequest_initiated-1"
          },
          "requestOptions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/requestOptions-1"
              }
            ]
          },
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "responseMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_responseMessageId"
              }
            ]
          },
          "settlementDetails": {
            "$ref": "#/components/schemas/settlementDetails-4"
          },
          "settlementOptions": {
            "$ref": "#/components/schemas/settlementOptions"
          },
          "transactionStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_transactionStatus"
              }
            ]
          },
          "paymentRequestCreationDateTime": {
            "description": "The time that the Request to Pay was created in the Visa platform.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_dateTimeStamp"
              }
            ]
          }
        }
      },
      "amendR2pResponse-1": {
        "required": [
          "creationDateTime",
          "paymentRequestId",
          "requestMessageId",
          "responseMessageId",
          "transactionStatus"
        ],
        "type": "object",
        "properties": {
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "paymentRequestId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_paymentRequestId"
              }
            ]
          },
          "requestMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_requestMessageId"
              }
            ]
          },
          "responseMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_responseMessageId"
              }
            ]
          },
          "transactionStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_transactionStatus-1"
              }
            ]
          }
        }
      },
      "paymentRequestMinResponse-2": {
        "required": [
          "endToEndId",
          "paymentRequestId",
          "transactionStatus"
        ],
        "type": "object",
        "properties": {
          "debtorId": {
            "description": "<b>Conditional.</b> ID that may be used to uniquely identify the payer within the context of the debtorIdType. While an optional field in certain use cases (determined by product rules outlined here), certain capabilities such as search will be limited based on provided data to ensure data security. For example protecting against MSISDN re-use in mobile telephone markets. As such, Visa strongly recommends using this field.\n<table><tr><td>Product</td><td>Initiate Response from Visa</td><td>Initiate Response to Visa</td></tr>\n<tr><td>VD</td><td>Not included</td><td>Mandatory</td></tr></table>\nThe debtorId is not shared with the payee agent. When responding to a Retrieve Request to Pay call, inclusion of the debtorId will be based on the role of the caller.\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pEntityId"
              }
            ]
          },
          "endToEndId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/endToEndId"
              }
            ]
          },
          "debtorIdType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pIdType"
              }
            ]
          },
          "paymentRequestId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_paymentRequestId"
              }
            ]
          },
          "transactionStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_transactionStatus"
              }
            ]
          }
        }
      },
      "paymentRequestMinResponse-1": {
        "required": [
          "endToEndId",
          "paymentRequestId",
          "transactionStatus"
        ],
        "type": "object",
        "properties": {
          "debtorId": {
            "description": "<b>Conditional.</b> ID that may be used to uniquely identify the payer within the context of the debtorIdType. While an optional field in certain use cases (determined by product rules outlined here), certain capabilities such as search will be limited based on provided data to ensure data security. For example protecting against MSISDN re-use in mobile telephone markets. As such, Visa strongly recommends using this field.\n<table><tr><td>Product</td><td>Initiate Response from Visa</td><td>Initiate Response to Visa</td></tr>\n<tr><td>VD</td><td>Not included</td><td>Optional</td></tr></table>\nThe debtorId is not shared with the payee agent. When responding to a Retrieve Request to Pay call, inclusion of the debtorId will be based on the role of the caller.\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pEntityId"
              }
            ]
          },
          "endToEndId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/endToEndId-1"
              }
            ]
          },
          "debtorIdType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pIdType"
              }
            ]
          },
          "paymentRequestId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_paymentRequestId"
              }
            ]
          },
          "transactionStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_transactionStatus-1"
              }
            ]
          }
        }
      },
      "creditorForRetrieve-2": {
        "required": [
          "creditorAgentCountry",
          "creditorAgentId",
          "creditorCountry"
        ],
        "type": "object",
        "properties": {
          "creditorId": {
            "description": "<b>Conditional.</b> ID that may be used to uniquely identify the payee within the context of the creditorIdType (e.g., customer id assigned by service provider). While an optional field in certain use cases (determined by product rules outlined here), certain capabilities such as search will limited based on provided data to ensure data security. For example, protecting against MSISDN re-use in mobile telephone markets.\n<table><tr><td>Product</td><td>Initiate/Refund Request to Visa</td><td>Initiate/Refund Request from Visa</td></tr>\n<tr><td>VD</td><td>Mandatory</td><td>Omitted</td></tr></table>\nAs seen in the table above, the creditorId is not shared with the payer agent. When responding to a Retrieve Request to Pay call, inclusion of the creditorId will be based on the role of the caller.\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pEntityId"
              }
            ]
          },
          "creditorMcc": {
            "description": " <b>Conditional.</b> Merchant Category Code applicable to the creditor for this transaction. Required for a B2C request.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_mcc"
              }
            ]
          },
          "creditorAlias": {
            "description": "<b>Conditional.</b> The alias used to identify and route to the payee. This field may be optional in certain use cases (determined by product rules) for example where routing is driven by creditorId. Where creditorAlias is provided, creditorAliasType must also be provided. The structure and valiations of the creditorAlias field are determined by the creditorAliasType value.",
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasKey"
              }
            ]
          },
          "creditorTaxId": {
            "description": "The tax reference applicable to the creditor. While defined as optional for the Visa API, this field is required where local regulation requires the tax ID to be compliant.",
            "allOf": [
              {
                "$ref": "#/components/schemas/taxId"
              }
            ]
          },
          "creditorIdType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pIdType"
              }
            ]
          },
          "creditorAgentId": {
            "description": "Visa identifier for the payee service provider.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pEntityId"
              }
            ]
          },
          "creditorCountry": {
            "description": "Payees country of residence specified using ISO3166-2. Where ISO has not formally applied a 2 digit code, the following will be used:\n<table><tr><td>Country</td><td>Country Code (2-char)</td></tr>\n<tr><td>Kosovo</td><td>QZ</td></tr></table>\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_country2"
              }
            ]
          },
          "creditorLastName": {
            "description": "<b>Conditional.</b> Mandatory for P2P use case and refund of B2C R2P but optional for B2C. The last name of the payee.\n<b>NOTE:</b> This is currently limited to the first letter of the last name followed, optionally, by a dot symbol. e.g. 'S.' rather than Smith.",
            "allOf": [
              {
                "$ref": "#/components/schemas/lastName"
              }
            ]
          },
          "creditorAliasType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasType"
              }
            ]
          },
          "creditorFirstName": {
            "description": "<b>Conditional.</b> Mandatory for P2P use case and refund of B2C R2P but optional for B2C. The first name of the payee.",
            "allOf": [
              {
                "$ref": "#/components/schemas/firstName"
              }
            ]
          },
          "creditorAgentCountry": {
            "description": "Payee service providers country of business specified using ISO3166-2. Where ISO has not formally applied a 2 digit code, the following will be used:\n<table><tr><td>Country</td><td>Country Code (2-char)</td></tr>\n<tr><td>Kosovo</td><td>QZ</td></tr></table>\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_country2"
              }
            ]
          },
          "creditorBusinessName": {
            "description": "<b>Conditional.</b> Name of the business entity submitting the R2P request for example brand name/doing business as. Required for a B2C request.",
            "allOf": [
              {
                "$ref": "#/components/schemas/businessName"
              }
            ]
          }
        }
      },
      "initiateSettlementSystem": {
        "maxLength": 35,
        "type": "string",
        "description": "Settlement mechanism or payment rail used for payments related to the payment request. Currently supported values are:\n<table><tr><td>Value</td><td>Settlement mechanism or payment rail</td><td>Description</td></tr>\n<tr><td>VISA_DIRECT</td><td>Visa Direct</td><td>Available for both P2P and B2C.</td></tr>\n<tr><td>MASTERCARD</td><td>Mastercard</td><td>Available for only P2P not B2C.</td></tr>\n<tr><td>DEFERRED_TO_ALIAS</td><td>Deferred To Alias</td><td> Available only in LAC region now. Settlement rail is not provided with the Initiate R2P call but derived at the point of payment using the given alias. Available for only P2P not B2C.</td></tr></table>\n",
        "example": "VISA_DIRECT"
      },
      "creditorForRetrieve-3": {
        "required": [
          "creditorAgentCountry",
          "creditorAgentId",
          "creditorCountry"
        ],
        "type": "object",
        "properties": {
          "creditorId": {
            "description": "<b>Conditional.</b> ID that may be used to uniquely identify the payee within the context of the creditorIdType (e.g., customer id assigned by service provider). While an optional field in certain use cases (determined by product rules outlined here), certain capabilities such as search will limited based on provided data to ensure data security. For example, protecting against MSISDN re-use in mobile telephone markets.\n<table><tr><td>Product</td><td>Initiate/Refund Request to Visa</td><td>Initiate/Refund Request from Visa</td></tr>\n<tr><td>VD</td><td>Mandatory</td><td>Omitted</td></tr></table>\nAs seen in the table above, the creditorId is not shared with the payer agent. When responding to a Retrieve Request to Pay call, inclusion of the creditorId will be based on the role of the caller.\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pEntityId"
              }
            ]
          },
          "creditorMcc": {
            "description": " <b>Conditional.</b> Merchant Category Code applicable to the creditor for this transaction. Required for a B2C request.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_mcc"
              }
            ]
          },
          "creditorAlias": {
            "description": "<b>Conditional.</b> The alias used to identify and route to the payee. This field may be optional in certain use cases (determined by product rules) for example where routing is driven by creditorId. Where creditorAlias is provided, creditorAliasType must also be provided. The structure and validations of the creditorAlias field are determined by the creditorAliasType value.",
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasKey"
              }
            ]
          },
          "creditorTaxId": {
            "description": "The tax reference applicable to the creditor. While defined as optional for the Visa API, this field is required where local regulation requires the tax ID to be compliant.",
            "allOf": [
              {
                "$ref": "#/components/schemas/taxId"
              }
            ]
          },
          "creditorIdType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pIdType"
              }
            ]
          },
          "creditorAgentId": {
            "description": "Visa identifier for the payee service provider.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pEntityId"
              }
            ]
          },
          "creditorCountry": {
            "description": "Payees country of residence specified using ISO3166-2. Where ISO has not formally applied a 2 digit code, the following will be used:\n<table><tr><td>Country</td><td>Country Code (2-char)</td></tr>\n<tr><td>Kosovo</td><td>QZ</td></tr></table>\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_country2"
              }
            ]
          },
          "creditorLastName": {
            "description": "<b>Conditional.</b> Mandatory for P2P use case and refund of B2C R2P but optional for B2C. The last name of the payee.\n<b>NOTE:</b> This is currently limited to the first letter of the last name followed, optionally, by a dot symbol. e.g. 'S.' rather than Smith.",
            "allOf": [
              {
                "$ref": "#/components/schemas/lastName"
              }
            ]
          },
          "creditorAliasType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasType"
              }
            ]
          },
          "creditorFirstName": {
            "description": "<b>Conditional.</b> Mandatory for P2P use case and refund of B2C R2P but optional for B2C. The first name of the payee.",
            "allOf": [
              {
                "$ref": "#/components/schemas/firstName"
              }
            ]
          },
          "creditorAgentCountry": {
            "description": "Payee service providers country of business specified using ISO3166-2. Where ISO has not formally applied a 2 digit code, the following will be used:\n<table><tr><td>Country</td><td>Country Code (2-char)</td></tr>\n<tr><td>Kosovo</td><td>QZ</td></tr></table>\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_country2"
              }
            ]
          },
          "creditorBusinessName": {
            "description": "<b>Conditional.</b> Name of the business entity submitting the R2P request for example brand name/doing business as. Required for a B2C request.",
            "allOf": [
              {
                "$ref": "#/components/schemas/businessName"
              }
            ]
          }
        }
      },
      "creditorForRetrieve-1": {
        "required": [
          "creditorAgentCountry",
          "creditorAgentId",
          "creditorCountry"
        ],
        "type": "object",
        "properties": {
          "creditorId": {
            "description": "<b>Conditional.</b> ID that may be used to uniquely identify the payee within the context of the creditorIdType (e.g., customer id assigned by service provider). While an optional field in certain use cases (determined by product rules outlined here), certain capabilities such as search will limited based on provided data to ensure data security. For example, protecting against MSISDN re-use in mobile telephone markets.\n<table><tr><td>Product</td><td>Initiate/Refund Request to Visa</td><td>Initiate/Refund Request from Visa</td></tr>\n<tr><td>VD</td><td>Mandatory</td><td>Omitted</td></tr></table>\nAs seen in the table above, the creditorId is not shared with the payer agent. When responding to a Retrieve Request to Pay call, inclusion of the creditorId will be based on the role of the caller.\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pEntityId"
              }
            ]
          },
          "creditorMcc": {
            "description": " <b>Conditional.</b> Merchant Category Code applicable to the creditor for this transaction. Required for a B2C request.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_mcc"
              }
            ]
          },
          "creditorAlias": {
            "description": "<b>Conditional.</b> The alias used to identify and route to the payee. This field may be optional in certain use cases (determined by product rules) for example where routing is driven by creditorId. Where creditorAlias is provided, creditorAliasType must also be provided. The structure and validations of the creditorAlias field are determined by the creditorAliasType value.",
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasKey"
              }
            ]
          },
          "creditorTaxId": {
            "description": "The tax reference applicable to the creditor. While defined as optional for the Visa API, this field is required where local regulation requires the tax ID to be compliant.",
            "allOf": [
              {
                "$ref": "#/components/schemas/taxId"
              }
            ]
          },
          "creditorIdType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pIdType"
              }
            ]
          },
          "creditorAgentId": {
            "description": "Visa identifier for the payee service provider.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pEntityId"
              }
            ]
          },
          "creditorCountry": {
            "description": "Payees country of residence specified using ISO3166-2. Where ISO has not formally applied a 2 digit code, the following will be used:\n<table><tr><td>Country</td><td>Country Code (2-char)</td></tr>\n<tr><td>Kosovo</td><td>QZ</td></tr></table>\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_country2"
              }
            ]
          },
          "creditorLastName": {
            "description": "<b>Conditional.</b> Mandatory for P2P use case and refund of B2C R2P but optional for B2C. The last name of the payee.\n<b>NOTE:</b> This is currently limited to the first letter of the last name followed, optionally, by a dot symbol. e.g. 'S.' rather than Smith.",
            "allOf": [
              {
                "$ref": "#/components/schemas/lastName"
              }
            ]
          },
          "creditorAliasType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasType"
              }
            ]
          },
          "creditorFirstName": {
            "description": "<b>Conditional.</b> Mandatory for P2P use case and refund of B2C R2P but optional for B2C. The first name of the payee.",
            "allOf": [
              {
                "$ref": "#/components/schemas/firstName"
              }
            ]
          },
          "nationalIdentifiers": {
            "description": "Field to carry creditor passport. While defined as optional for the Visa API, this field is required where local regulation requires to send information about the registration identifier. This information is present in the response only if creditor sends the information during request to pay initiation.",
            "allOf": [
              {
                "$ref": "#/components/schemas/nationalIdentifiers-1"
              }
            ]
          },
          "creditorAgentCountry": {
            "description": "Payee service providers country of business specified using ISO3166-2. Where ISO has not formally applied a 2 digit code, the following will be used:\n<table><tr><td>Country</td><td>Country Code (2-char)</td></tr>\n<tr><td>Kosovo</td><td>QZ</td></tr></table>\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_country2"
              }
            ]
          },
          "creditorBusinessName": {
            "description": "<b>Conditional.</b> Name of the business entity submitting the R2P request for example brand name/doing business as. Required for a B2C request.",
            "allOf": [
              {
                "$ref": "#/components/schemas/businessName"
              }
            ]
          }
        }
      },
      "blockedPayeesResponse-2": {
        "required": [
          "blockCreatedDate",
          "blockReason",
          "product",
          "referenceId"
        ],
        "type": "object",
        "properties": {
          "product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_product"
              }
            ]
          },
          "blockReason": {
            "type": "string",
            "description": "This indicates the block reason provided by payer during block opearation",
            "example": "The Request to Pay is being rejected as a result of a block control"
          },
          "referenceId": {
            "type": "string",
            "description": "Unique block referece id created during block opeartion",
            "example": "116709992401522544782526"
          },
          "creditorAlias": {
            "description": "<b>Conditional.</b> The alias used to identify and route to the payee. This field may be optional in certain use cases (determined by product rules) for example where routing is driven by creditorId. Where creditorAlias is provided, creditorAliasType must also be provided. The structure and valiations of the creditorAlias field are determined by the creditorAliasType value.",
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasKey"
              }
            ]
          },
          "blockCreatedDate": {
            "type": "string",
            "description": "The blockCreatedDate field indicates when block has been applied on payee by payer.",
            "example": "2022-12-14"
          },
          "creditorLastName": {
            "type": "string",
            "description": "<b>Conditional.</b>Last name of the blocked Payee. This is mandatory for blocks applied on P2P request and refund of B2C request but optional for B2C request.",
            "example": "Higgens"
          },
          "creditorAliasType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasType"
              }
            ]
          },
          "creditorFirstName": {
            "type": "string",
            "description": "<b>Conditional.</b>First name of the blocked Payee. This is mandatory for blocks applied on P2P request and refund of B2C request but optional for B2C request.",
            "example": "John"
          },
          "creditorBusinessName": {
            "type": "string",
            "description": "<b>Conditional.</b> Name of blocked business entity for example brand name/doing business as. This is applicable only when blocks applied by consumer on B2C request in which blocked payee will be a business entity.",
            "example": "Stripe"
          }
        }
      },
      "blockedPayeesResponse-1": {
        "required": [
          "blockCreatedDate",
          "blockReason",
          "product",
          "referenceId"
        ],
        "type": "object",
        "properties": {
          "product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_product"
              }
            ]
          },
          "blockReason": {
            "type": "string",
            "description": "This indicates the block reason provided by payer during block operation.",
            "example": "The Request to Pay is being rejected as a result of a block control"
          },
          "referenceId": {
            "type": "string",
            "description": "Unique block referece id created during block opeartion",
            "example": "116709992401522544782526"
          },
          "creditorAlias": {
            "description": "<b>Conditional.</b> The alias used to identify and route to the payee. This field may be optional in certain use cases (determined by product rules) for example where routing is driven by creditorId. Where creditorAlias is provided, creditorAliasType must also be provided. The structure and validations of the creditorAlias field are determined by the creditorAliasType value.",
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasKey"
              }
            ]
          },
          "blockCreatedDate": {
            "type": "string",
            "description": "The blockCreatedDate field indicates when block has been applied on payee by payer.",
            "example": "2022-12-14"
          },
          "creditorLastName": {
            "type": "string",
            "description": "<b>Conditional.</b>Last name of the blocked Payee. This is mandatory for blocks applied on P2P request and refund of B2C request but optional for B2C request.",
            "example": "Higgens"
          },
          "creditorAliasType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasType"
              }
            ]
          },
          "creditorFirstName": {
            "type": "string",
            "description": "<b>Conditional.</b>First name of the blocked Payee. This is mandatory for blocks applied on P2P request and refund of B2C request but optional for B2C request.",
            "example": "John"
          },
          "creditorBusinessName": {
            "type": "string",
            "description": "<b>Conditional.</b> Name of blocked business entity for example brand name/doing business as. This is applicable only when blocks applied by consumer on B2C request in which blocked payee will be a business entity.",
            "example": "Stripe"
          }
        }
      },
      "r2p_paymentRequestId": {
        "maxLength": 35,
        "type": "string",
        "description": "Visa generated transaction ID for this Request to Pay. Note that while this field supports up to 35 characters, Request to Pay IDs generated by Visa are 21 characters long.",
        "example": "RFP01314"
      },
      "initiateR2pRequest_common": {
        "required": [
          "creationDateTime",
          "creditor",
          "product",
          "requestMessageId",
          "settlementOptions",
          "useCase"
        ],
        "type": "object",
        "properties": {
          "dueDate": {
            "description": "dueDate indicates the date that the payment request is asked to be settled by. If this is not specified by the payee service provider, a default timeframe of 90 days from the current date will be applied. The payer can expect to receive the dueDate value whether the payee specified it or not.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_dateStamp"
              }
            ]
          },
          "product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_product"
              }
            ]
          },
          "useCase": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_useCase"
              }
            ]
          },
          "creditor": {
            "$ref": "#/components/schemas/creditor"
          },
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "requestMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_requestMessageId"
              }
            ]
          },
          "settlementOptions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/initiateSettlementOptions"
              }
            ]
          }
        }
      },
      "amendR2pRequest_fromVisa": {
        "required": [
          "creationDateTime",
          "requestMessageId"
        ],
        "type": "object",
        "properties": {
          "dueDate": {
            "description": "Indicates the amended due date the payment request to be settled by. If this is not specified by the payee service provider as part of amend request, original due date will remain unchanged.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_dateStamp"
              }
            ]
          },
          "requestReason": {
            "type": "object",
            "properties": {
              "message": {
                "maxLength": 250,
                "type": "string",
                "description": "This field allows the payee to include a single message as part of the request to pay to the payer. Please refer the implementation guide for the list of supported pre-defined messages."
              },
              "unicodeEmoji": {
                "maxLength": 250,
                "type": "string",
                "description": "This field allows the payee to include a single emoji as part of the request to pay to the payer. Please refer the implementation guide for the list of supported emojis."
              }
            },
            "description": "The requestReason block provides additional information to make clear to the payer what the request is for."
          },
          "paymentRequest": {
            "$ref": "#/components/schemas/paymentRequest"
          },
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "requestMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_requestMessageId"
              }
            ]
          },
          "settlementOptions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/amendSettlementOptions"
              }
            ]
          }
        }
      },
      "refundCreditor_toVisa": {
        "required": [
          "creditorId",
          "creditorIdType"
        ],
        "type": "object",
        "properties": {
          "creditorId": {
            "description": "ID that may be used to uniquely identify the payee within the context of the creditorIdType (e.g., customer id assigned by service provider). This should be same as the debtorID value if present in the Initiate R2P Response\n <table><tr><td>Product</td><td>Refund Request to Visa</td><td>Refund Request from Visa</td></tr>\n<tr><td>VD</td><td>Mandatory</td><td>Omitted</td></tr></table>\nAs seen in the table above, the creditorId is not shared with the payer agent. When responding to a Retrieve Request to Pay call, inclusion of the creditorId will be based on the role of the caller.\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pEntityId"
              }
            ]
          },
          "creditorIdType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pIdType"
              }
            ]
          }
        }
      },
      "dict_debtorTaxId": {
        "maxLength": 35,
        "minLength": 1,
        "type": "string",
        "description": "Debtor taxId information sent by debtor/payer",
        "example": "ABCDE1234567890"
      },
      "paymentPurpose": {
        "maxLength": 12,
        "type": "string",
        "description": "Regulatory Payment Purpose indicator. The value of this field will be determined by regulatory environment that the creditor and debtor are subject to. Typically these values will be defined by the central bank or other responsible regulator for the creditors country of business. While defined as optional in the Visa API, it will be required where the creditors country legally mandates it."
      },
      "amendR2pRequest_fromVisa-1": {
        "required": [
          "creationDateTime",
          "requestMessageId"
        ],
        "type": "object",
        "properties": {
          "dueDate": {
            "description": "Indicates the amended due date the payment request to be settled by. If this is not specified by the payee service provider as part of amend request, original due date will remain unchanged.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_dateStamp"
              }
            ]
          },
          "requestReason": {
            "type": "object",
            "properties": {
              "message": {
                "maxLength": 250,
                "type": "string",
                "description": "This field allows the payee to include a single, compliance approved, message as part of the request to pay to the payer. Please refer the implementation guide for the list of approved text messages."
              },
              "unicodeEmoji": {
                "maxLength": 250,
                "type": "string",
                "description": "This field allows the payee to include a single, compliance approved, emoji as part of the request to pay to the payer. Please refer the implementation guide for the list of approved emojis."
              }
            },
            "description": "The requestReason block provides additional information to make clear to the payer what the request is for."
          },
          "paymentRequest": {
            "$ref": "#/components/schemas/paymentRequest"
          },
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "requestMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_requestMessageId"
              }
            ]
          }
        }
      },
      "amendR2pRequest_fromVisa-2": {
        "required": [
          "creationDateTime",
          "requestMessageId"
        ],
        "type": "object",
        "properties": {
          "dueDate": {
            "description": "Indicates the amended due date the payment request to be settled by. If this is not specified by the payee service provider as part of amend request, original due date will remain unchanged.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_dateStamp"
              }
            ]
          },
          "paymentRequest": {
            "$ref": "#/components/schemas/paymentRequest"
          },
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "requestMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_requestMessageId"
              }
            ]
          }
        }
      },
      "agentId": {
        "description": "Visa identifier for the payee/payer service provider.",
        "allOf": [
          {
            "$ref": "#/components/schemas/dict_r2pEntityId"
          }
        ]
      },
      "aliasKey": {
        "maxLength": 35,
        "type": "string",
        "example": "447709123457"
      },
      "dict_dateTimeStamp": {
        "type": "string",
        "format": "date-time",
        "example": "2020-12-17T09:30:47Z"
      },
      "nationalIdentifiers-1": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/nationalIdentifiersObject-1"
        }
      },
      "referenceDataResponse-2": {
        "required": [
          "availableParticipants",
          "creationDateTime",
          "requestMessageId",
          "responseMessageId"
        ],
        "type": "object",
        "properties": {
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "requestMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_requestMessageId"
              }
            ]
          },
          "responseMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_responseMessageId"
              }
            ]
          },
          "availableParticipants": {
            "type": "array",
            "description": "List of active R2P participants.",
            "items": {
              "type": "object",
              "properties": {
                "participantId": {
                  "maxLength": 35,
                  "minLength": 1,
                  "pattern": "^[A-Za-z0-9-]*$",
                  "type": "string",
                  "description": "Visa identifier for the service provider."
                },
                "participantName": {
                  "maxLength": 35,
                  "minLength": 1,
                  "pattern": "^[A-Za-z0-9-]*$",
                  "type": "string",
                  "description": "Name of the service provider as registered within R2P program."
                },
                "supportedFeatures": {
                  "type": "array",
                  "description": "This enumerates the features that the respective participant (i.e., participantId) supports. Currently supported value is 'REMINDER'. Missing field means no supported features from the list.",
                  "items": {
                    "maxLength": 35,
                    "minLength": 1,
                    "pattern": "^[A-Z]*$",
                    "type": "string",
                    "example": "REMINDER"
                  }
                }
              }
            }
          }
        }
      },
      "referenceDataResponse-1": {
        "required": [
          "availableParticipants",
          "creationDateTime",
          "requestMessageId",
          "responseMessageId"
        ],
        "type": "object",
        "properties": {
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "requestMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_requestMessageId"
              }
            ]
          },
          "responseMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_responseMessageId"
              }
            ]
          },
          "availableParticipants": {
            "type": "array",
            "description": "List of active R2P participants.",
            "items": {
              "type": "object",
              "properties": {
                "participantId": {
                  "maxLength": 35,
                  "minLength": 1,
                  "pattern": "^[A-Za-z0-9-]*$",
                  "type": "string",
                  "description": "Visa identifier for the service provider."
                },
                "participantName": {
                  "maxLength": 35,
                  "minLength": 1,
                  "pattern": "^[A-Za-z0-9-]*$",
                  "type": "string",
                  "description": "Name of the service provider as registered within R2P program."
                }
              }
            }
          }
        }
      },
      "confirmR2pResponse": {
        "required": [
          "creationDateTime",
          "endToEndId",
          "paymentRequestId",
          "requestMessageId",
          "responseMessageId",
          "transactionStatus"
        ],
        "type": "object",
        "properties": {
          "endToEndId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/endToEndId"
              }
            ]
          },
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "paymentRequestId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_paymentRequestId"
              }
            ]
          },
          "requestMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_requestMessageId"
              }
            ]
          },
          "responseMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_responseMessageId"
              }
            ]
          },
          "transactionStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_transactionStatus"
              }
            ]
          }
        }
      },
      "dict_paymentAmount": {
        "type": "number",
        "description": "Value that the request or payment is for. Note that while this field supports ISO20022 decimal references (12.5), consideration should be given to the supported values in other contexts such as settlement options. For example card payments processed in an ISO8583 environment where values can only support 9.3 formats.",
        "example": 100
      },
      "confirmR2pResponse-1": {
        "required": [
          "creationDateTime",
          "endToEndId",
          "paymentRequestId",
          "requestMessageId",
          "responseMessageId",
          "transactionStatus"
        ],
        "type": "object",
        "properties": {
          "endToEndId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/endToEndId-1"
              }
            ]
          },
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "paymentRequestId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_paymentRequestId"
              }
            ]
          },
          "requestMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_requestMessageId"
              }
            ]
          },
          "responseMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_responseMessageId"
              }
            ]
          },
          "transactionStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_transactionStatus-1"
              }
            ]
          }
        }
      },
      "reminderEvents": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/reminderEventObject"
        }
      },
      "confirmSettlementSystem": {
        "maxLength": 35,
        "type": "string",
        "description": "Settlement mechanism or payment rail used for payments related to the payment request. Currently supported values are:\n<table><tr><td>Value</td><td>Settlement mechanism or payment rail</td><td>Description</td></tr>\n<tr><td>VISA_DIRECT</td><td>Visa Direct</td><td>Available for both P2P and B2C.</td></tr>\n<tr><td>MASTERCARD</td><td>Mastercard</td><td>Available for only P2P not B2C.</td></tr>\n<tr><td>YELLOW_PEPPER</td><td>Enabled by Yellow Pepper</td><td>Available for only P2P not B2C. Payment was facilitated by Yellow Pepper. In this instance, settlement system specific information may not be available. Only available in specific market, please contact Visa representative for more details.</td></tr></table>         \n",
        "example": "VISA_DIRECT"
      },
      "initiateR2pRequest_common-1": {
        "required": [
          "creationDateTime",
          "creditor",
          "product",
          "requestMessageId",
          "settlementOptions",
          "useCase"
        ],
        "type": "object",
        "properties": {
          "dueDate": {
            "description": "dueDate indicates the date that the payment request is asked to be settled by. If this is not specified by the payee service provider, a default timeframe of 90 days from the current date will be applied. The payer can expect to receive the dueDate value whether the payee specified it or not.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_dateStamp"
              }
            ]
          },
          "product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_product"
              }
            ]
          },
          "useCase": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_useCase"
              }
            ]
          },
          "creditor": {
            "$ref": "#/components/schemas/creditor-1"
          },
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "requestMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_requestMessageId"
              }
            ]
          },
          "settlementOptions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/initiateSettlementOptions"
              }
            ]
          }
        }
      },
      "core_request_affinity": {
        "maxLength": 38,
        "type": "string",
        "example": "RFP11664782648731jRko01"
      },
      "initiateR2pRequest_common-2": {
        "required": [
          "creationDateTime",
          "creditor",
          "product",
          "requestMessageId",
          "settlementOptions",
          "useCase"
        ],
        "type": "object",
        "properties": {
          "dueDate": {
            "description": "dueDate indicates the date that the payment request is asked to be settled by. If this is not specified by the payee service provider, a default timeframe of 90 days from the current date will be applied. The payer can expect to receive the dueDate value whether the payee specified it or not.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_dateStamp"
              }
            ]
          },
          "product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_product"
              }
            ]
          },
          "useCase": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_useCase"
              }
            ]
          },
          "creditor": {
            "$ref": "#/components/schemas/creditor-2"
          },
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "requestMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_requestMessageId"
              }
            ]
          },
          "settlementOptions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/initiateSettlementOptions-1"
              }
            ]
          }
        }
      },
      "dict_primaryAccountNumber": {
        "maxLength": 19,
        "minLength": 13,
        "type": "string",
        "description": "Primary Account Number (PAN) for a card credential.",
        "example": "4145125553222"
      },
      "accountDetailsRetrieve": {
        "type": "object",
        "properties": {
          "debtorTaxId": {
            "description": "The tax reference applicable to the debtor. While defined as optional for the Visa API, this field is required where local regulation requires the tax ID to be compliant. Note that this may be masked by Visa in certain countries.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_debtorTaxId"
              }
            ]
          },
          "primaryAccountNumber": {
            "description": "Primary Account Number (PAN) for a card credential. Note that this may be masked by Visa in certain scenarios.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_primaryAccountNumber"
              }
            ]
          }
        },
        "description": "Account details used by the related party for this payment. Note that the enforcement of fields here is dependent on the settlementSystem. For example, when selecting VISA_DIRECT as the settlementSystem for the payment, primaryAccountNumber is required. Parameter debtorTaxId is optional."
      },
      "initiateR2pRequest_common-3": {
        "required": [
          "creationDateTime",
          "creditor",
          "product",
          "requestMessageId",
          "settlementOptions",
          "useCase"
        ],
        "type": "object",
        "properties": {
          "dueDate": {
            "description": "dueDate indicates the date that the payment request is asked to be settled by. If this is not specified by the payee service provider, a default timeframe of 90 days from the current date will be applied. The payer can expect to receive the dueDate value whether the payee specified it or not.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_dateStamp"
              }
            ]
          },
          "product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_product"
              }
            ]
          },
          "useCase": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_useCase"
              }
            ]
          },
          "creditor": {
            "$ref": "#/components/schemas/creditor-3"
          },
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "requestMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_requestMessageId"
              }
            ]
          },
          "settlementOptions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/initiateSettlementOptions"
              }
            ]
          }
        }
      },
      "amendR2pResponse": {
        "required": [
          "creationDateTime",
          "paymentRequestId",
          "requestMessageId",
          "responseMessageId",
          "transactionStatus"
        ],
        "type": "object",
        "properties": {
          "creationDateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_creationDateTime"
              }
            ]
          },
          "paymentRequestId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_paymentRequestId"
              }
            ]
          },
          "requestMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_requestMessageId"
              }
            ]
          },
          "responseMessageId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/core_responseMessageId"
              }
            ]
          },
          "transactionStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_transactionStatus"
              }
            ]
          }
        }
      },
      "value": {
        "maxLength": 50,
        "minLength": 1,
        "type": "string",
        "description": "Creditor's national identifier value information.",
        "example": "LB44889298222"
      },
      "refundPaymentRequest_fromVisa-1": {
        "required": [
          "debtorAgentCountry",
          "debtorAgentId",
          "debtorBusinessName",
          "debtorCountry",
          "endToEndId",
          "paymentRequestId",
          "requestedAmount",
          "requestedAmountCurrency"
        ],
        "type": "object",
        "properties": {
          "debtorId": {
            "description": "ID that may be used to uniquely identify the payer within the context of the debtorIdType. Visa strongly recommends using this field.\nThis will be same as CreditorId in the original B2C request. The debtorId is not shared with the payee agent. When responding to a Retrieve Request to Pay call, inclusion of the debtorId will be based on the role of the caller.\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pEntityId"
              }
            ]
          },
          "endToEndId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/endToEndId-1"
              }
            ]
          },
          "debtorAlias": {
            "description": "<b>Conditional.</b> The alias used to identify and route to the payer. Where debtorAlias is provided, debtorAliasType must also be provided. The structure and valiations of the debtorAlias field are determined by the debtorAliasType value.",
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasKey"
              }
            ]
          },
          "debtorIdType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pIdType"
              }
            ]
          },
          "debtorAgentId": {
            "description": "Visa identifier for the payer service provider.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pEntityId"
              }
            ]
          },
          "debtorCountry": {
            "description": "Payers country of residence specified using ISO3166-2. Where ISO has not formally applied a 2 digit code, the following will be used:\n<table><tr><td>Country</td><td>Country Code (2-char)</td></tr>\n<tr><td>Kosovo</td><td>QZ</td></tr></table>\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_country2"
              }
            ]
          },
          "debtorLastName": {
            "description": "The last name of the payer which is optional for refund of B2C request.\n<b>NOTE:</b> Due to local regulation, service providers in Ukraine, Belarus, and Kazakhstan must use only the first letter of the last name followed, optionally, by a dot symbol. e.g. 'S.' rather than Smith.",
            "allOf": [
              {
                "$ref": "#/components/schemas/lastName"
              }
            ]
          },
          "debtorAliasType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasType"
              }
            ]
          },
          "debtorFirstName": {
            "description": "The first name of the payer which is optional for refund of B2C request.",
            "allOf": [
              {
                "$ref": "#/components/schemas/firstName"
              }
            ]
          },
          "requestedAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_paymentAmount"
              }
            ]
          },
          "paymentRequestId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_paymentRequestId"
              }
            ]
          },
          "debtorAgentCountry": {
            "description": "Payer service providers country of business specified using ISO3166-2. Where ISO has not formally applied a 2 digit code, the following will be used:\n<table><tr><td>Country</td><td>Country Code (2-char)</td></tr>\n<tr><td>Kosovo</td><td>QZ</td></tr></table>\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_country2"
              }
            ]
          },
          "debtorBusinessName": {
            "description": "Name of the business entity to whom refund R2P is requested.",
            "allOf": [
              {
                "$ref": "#/components/schemas/businessName"
              }
            ]
          },
          "requestedAmountCurrency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_paymentCurrency"
              }
            ]
          }
        }
      },
      "requestReason-3": {
        "type": "object",
        "properties": {
          "references": {
            "maxLength": 10,
            "required": [
              "reference"
            ],
            "type": "array",
            "description": "A list of references send by Payee to be linked to this request.",
            "items": {
              "$ref": "#/components/schemas/referenceBlock"
            }
          },
          "paymentPurpose": {
            "description": "Regulatory Payment Purpose indicator. The value of this field will be determined by regulatory environment that the creditor and debtor are subject to. Typically these values will be defined by the central bank or other responsible regulator for the creditors country of business. While defined as optional in the Visa API, it will be required where the creditors country legally mandates it.",
            "allOf": [
              {
                "$ref": "#/components/schemas/paymentPurpose"
              }
            ]
          }
        },
        "description": "The requestReason block provides additional information that can be used to support reconciliation and make clear to the payer what the request is for."
      },
      "refundPaymentRequest_fromVisa": {
        "required": [
          "debtorAgentCountry",
          "debtorAgentId",
          "debtorBusinessName",
          "debtorCountry",
          "endToEndId",
          "paymentRequestId",
          "requestedAmount",
          "requestedAmountCurrency"
        ],
        "type": "object",
        "properties": {
          "debtorId": {
            "description": "ID that may be used to uniquely identify the payer within the context of the debtorIdType. Visa strongly recommends using this field.\nThis will be same as CreditorId in the original B2C request. The debtorId is not shared with the payee agent. When responding to a Retrieve Request to Pay call, inclusion of the debtorId will be based on the role of the caller.\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pEntityId"
              }
            ]
          },
          "endToEndId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/endToEndId"
              }
            ]
          },
          "debtorAlias": {
            "description": "<b>Conditional.</b> The alias used to identify and route to the payer. Where debtorAlias is provided, debtorAliasType must also be provided. The structure and validations of the debtorAlias field are determined by the debtorAliasType value.",
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasKey"
              }
            ]
          },
          "debtorIdType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pIdType"
              }
            ]
          },
          "debtorAgentId": {
            "description": "Visa identifier for the payer service provider.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_r2pEntityId"
              }
            ]
          },
          "debtorCountry": {
            "description": "Payers country of residence specified using ISO3166-2. Where ISO has not formally applied a 2 digit code, the following will be used:\n<table><tr><td>Country</td><td>Country Code (2-char)</td></tr>\n<tr><td>Kosovo</td><td>QZ</td></tr></table>\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_country2"
              }
            ]
          },
          "debtorLastName": {
            "description": "The last name of the payer which is optional for refund of B2C request.\n<b>NOTE:</b> Due to local regulation, service providers in Ukraine, Belarus, and Kazakhstan must use only the first letter of the last name followed, optionally, by a dot symbol. e.g. 'S.' rather than Smith.",
            "allOf": [
              {
                "$ref": "#/components/schemas/lastName"
              }
            ]
          },
          "debtorAliasType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/aliasType"
              }
            ]
          },
          "debtorFirstName": {
            "description": "The first name of the payer which is optional for refund of B2C request.",
            "allOf": [
              {
                "$ref": "#/components/schemas/firstName"
              }
            ]
          },
          "requestedAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_paymentAmount"
              }
            ]
          },
          "paymentRequestId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/r2p_paymentRequestId"
              }
            ]
          },
          "debtorAgentCountry": {
            "description": "Payer service providers country of business specified using ISO3166-2. Where ISO has not formally applied a 2 digit code, the following will be used:\n<table><tr><td>Country</td><td>Country Code (2-char)</td></tr>\n<tr><td>Kosovo</td><td>QZ</td></tr></table>\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_country2"
              }
            ]
          },
          "debtorBusinessName": {
            "description": "Name of the business entity to whom refund R2P is requested.",
            "allOf": [
              {
                "$ref": "#/components/schemas/businessName"
              }
            ]
          },
          "requestedAmountCurrency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dict_paymentCurrency"
              }
            ]
          }
        }
      },
      "requestReason-2": {
        "type": "object",
        "properties": {
          "references": {
            "maxLength": 10,
            "required": [
              "reference"
            ],
            "type": "array",
            "description": "A list of refereneces send by Payee to be linked to this request.",
            "items": {
              "$ref": "#/components/schemas/referenceBlock"
            }
          },
          "paymentPurpose": {
            "description": "Regulatory Payment Purpose indicator. The value of this field will be determined by regulatory environment that the creditor and debtor are subject to. Typically these values will be defined by the central bank or other responsibile regulator for the creditors country of business. While defined as optional in the Visa API, it will be required where the creditors country legally mandates it.",
            "allOf": [
              {
                "$ref": "#/components/schemas/paymentPurpose-1"
              }
            ]
          }
        },
        "description": "The requestReason block provides additional information that can be used to support reconciliation and make clear to the payer what the request is for."
      },
      "initiateR2pRequest_fromVisa": {
        "required": [
          "paymentRequests"
        ],
        "type": "object",
        "properties": {
          "requestReason": {
            "$ref": "#/components/schemas/requestReason"
          },
          "requestOptions": {
            "properties": {
              "allowMultiplePayments": {
                "type": "boolean",
                "description": "Used to indicate whether the request can be settled with multiple smaller payments rather than a single full payment. If not included this will default to FALSE to ensure compatibility between participants.",
                "example": false
              },
              "closeWithFirstPayment": {
                "type": "boolean",
                "description": "This flag is used to specify if the request can be closed after receiving the first payment from the payer, regardless of the amount. If this flag is not included, it will automatically be set to FALSE to maintain compatibility between participants. It's important to note that the flags, 'allowMultiplePayments' and 'closeWithFirstPayment', cannot both be set to TRUE simultaneously.",
                "example": false
              }
            }
          },
          "paymentRequests": {
            "maxLength": 1,
            "required": [
              "paymentRequest"
            ],
            "type": "array",
            "description": "A list of payers, and their requested amounts, that Request to Pay transactions should be sent for linked to this request. Note that while maxLength is 1, this is specified as an array for future use cases.",
            "items": {
              "$ref": "#/components/schemas/paymentRequest_fromVisa"
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/initiateR2pRequest_common"
          }
        ]
      },
      "requestOptions": {
        "type": "object",
        "properties": {
          "reminderSchedule": {
            "maxLength": 10,
            "type": "array",
            "description": "This enables payees to set automated reminders for a request to pay. A request can have up to 3 reminders at a maximum rate of 1 reminder per day. Reminders can be scheduled using the Initiate R2P or Amend R2P APIs.<br>\nWhen using the Amend R2P API, future reminders can be changed or removed but reminders that have already been sent must be included unchanged.<br>\nAn Amend R2P call with an empty reminderSchedule list will remove all reminders provided they are all in the future.\n",
            "example": [
              "2023-05-30T09:30:47Z",
              "2023-06-11T11:22:33Z",
              "2023-07-11T11:22:33Z"
            ],
            "items": {
              "maxLength": 255,
              "pattern": "YYYY-MM-DDTHH:mm:ssZ",
              "type": "string",
              "format": "date-time",
              "example": "2017-07-21T17:32:28Z"
            }
          },
          "allowMultiplePayments": {
            "type": "boolean",
            "description": "Used to indicate whether the request can be settled with multiple smaller payments rather than a single full payment. If not included this will default to FALSE to ensure compatibility between participants.",
            "example": false
          },
          "closeWithFirstPayment": {
            "type": "boolean",
            "description": "This flag is used to specify if the request can be closed after receiving the first payment from the payer, regardless of the amount. If this flag is not included, it will automatically be set to FALSE to maintain compatibility between participants. It's important to note that the flags, 'allowMultiplePayments' and 'closeWithFirstPayment', cannot both be set to TRUE simultaneously.",
            "example": false
          }
        },
        "description": "Optional field for B2C/P2P use case. This field serves as an indicator for different preferences associated with the payee."
      },
      "requestReason-1": {
        "type": "object",
        "properties": {
          "message": {
            "maxLength": 250,
            "type": "string",
            "description": "This field allows the payee to include a single, compliance approved, message as part of the request to pay to the payer. Please refer the implementation guide for the list of approved text messages. "
          },
          "references": {
            "maxLength": 10,
            "required": [
              "reference"
            ],
            "type": "array",
            "description": "A list of references send by Payee to be linked to this request.",
            "items": {
              "$ref": "#/components/schemas/referenceBlock"
            }
          },
          "unicodeEmoji": {
            "maxLength": 250,
            "type": "string",
            "description": "This field allows the payee to include a single, compliance approved, emoji as part of the request to pay to the payer. Please refer the implementation guide for the list of approved emojis."
          },
          "paymentPurpose": {
            "description": "Regulatory Payment Purpose indicator. The value of this field will be determined by regulatory environment that the creditor and debtor are subject to. Typically these values will be defined by the central bank or other responsible regulator for the creditors country of business. While defined as optional in the Visa API, it will be required where the creditors country legally mandates it.",
            "allOf": [
              {
                "$ref": "#/components/schemas/paymentPurpose"
              }
            ]
          }
        },
        "description": "The requestReason block provides additional information that can be used to support reconciliation and make clear to the payer what the request is for."
      },
      "TransactionTaggingRequest": {
        "required": [
          "messageEvent",
          "taggedTransaction"
        ],
        "type": "object",
        "properties": {
          "messageEvent": {
            "$ref": "#/components/schemas/MessageEvent"
          },
          "taggedTransaction": {
            "$ref": "#/components/schemas/TaggedTransaction"
          }
        }
      },
      "r2p_statusReason": {
        "maxLength": 4,
        "type": "string",
        "description": "Additional coded reason information for a transaction status update. Valid values are:\n<table><tr><td>Value</td><td>Description</td></tr>\n<tr><td colspan=2>PDNG statusReason codes</td></tr>\n<tr><td>PD01</td><td>Set by Visa when the Request to Pay has been accepted by Visa but not delivered to the debtor agent or their processor.</td></tr>\n<tr><td>PD02</td><td>Set by Visa when the Request to Pay has been delivered to the debtor agent or their processor.</td></tr>\n<tr><td>PD03</td><td>Sent by the debtor agent (or their processor) when the Request to Pay has been delivered to the debtor.</td></tr>\n<tr><td>PD04</td><td>Sent by the debtor agent (or their processor) to confirm that the debtor has seen or interacted with the Request to Pay.</td></tr>\n<tr><td colspan=2>RJCT statusReason codes</td></tr>\n<tr><td>RJ01</td><td>The payer could not be reached using the provided routing information.</td></tr>\n<tr><td>RJ02</td><td>The payer has rejected the Request to Pay.</td></tr>\n<tr><td>RJ03</td><td>The Request to Pay is being rejected as a result of a block control.</td></tr>\n<tr><td>RJ04</td><td>Payment cannot be completed between payee and payer using the settlementOption provided.</td></tr>\n<tr><td colspan=2>ACSC statusReason codes</td></tr>\n<tr><td>AS01</td><td>Set by Visa when the Request to Pay has been accepted by the payer and payment has been confirmed as made. </td></tr>\n<tr><td colspan=2>ACCP statusReason codes</td></tr>\n<tr><td>AC02</td><td>Set by Visa when the Request to Pay has been accepted by the payer and partial payment has been confirmed as made. </td></tr>\n<tr><td colspan=2>CNCL statusReason codes</td></tr>\n<tr><td>CN01</td><td>Set by Visa when the Request to Pay has been cancelled by the payee.</td></tr></table>\n",
        "example": "RJ02"
      },
      "refundSettlementOptions": {
        "maxLength": 1,
        "required": [
          "settlementOption"
        ],
        "type": "array",
        "description": "The list of settlement options contains details of payment mechanisms that can be used by the payer to settle the Request to Pay from the payee. Note that while maxLength is 1, this is specified as an array for future use cases.",
        "items": {
          "$ref": "#/components/schemas/refundSettlementOption"
        }
      }
    },
    "responses": {},
    "parameters": {},
    "examples": {},
    "requestBodies": {},
    "headers": {},
    "callbacks": {}
  },
  "x-tagGroups": [
    {
      "name": "API Reference",
      "tags": [
        "Request Control ",
        "Request to Pay",
        "Request to Pay Outbound"
      ]
    }
  ]
}